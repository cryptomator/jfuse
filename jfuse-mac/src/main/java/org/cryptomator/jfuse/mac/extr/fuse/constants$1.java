// Generated by jextract

package org.cryptomator.jfuse.mac.extr.fuse;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
final class constants$1 {

    // Suppresses default constructor, ensuring non-instantiability.
    private constants$1() {}
    static final VarHandle const$0 = constants$0.const$4.varHandle(MemoryLayout.PathElement.groupElement("fh_old"));
    static final VarHandle const$1 = constants$0.const$4.varHandle(MemoryLayout.PathElement.groupElement("writepage"));
    static final VarHandle const$2 = constants$0.const$4.varHandle(MemoryLayout.PathElement.groupElement("fh"));
    static final VarHandle const$3 = constants$0.const$4.varHandle(MemoryLayout.PathElement.groupElement("lock_owner"));
    static final StructLayout const$4 = MemoryLayout.structLayout(
        JAVA_INT.withName("proto_major"),
        JAVA_INT.withName("proto_minor"),
        JAVA_INT.withName("async_read"),
        JAVA_INT.withName("max_write"),
        JAVA_INT.withName("max_readahead"),
        JAVA_INT.withName("capable"),
        JAVA_INT.withName("want"),
        JAVA_INT.withName("max_background"),
        JAVA_INT.withName("congestion_threshold"),
        MemoryLayout.sequenceLayout(23, JAVA_INT).withName("reserved")
    ).withName("fuse_conn_info");
    static final VarHandle const$5 = constants$1.const$4.varHandle(MemoryLayout.PathElement.groupElement("proto_major"));
}


