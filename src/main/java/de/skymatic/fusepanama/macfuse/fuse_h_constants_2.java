// Generated by jextract

package de.skymatic.fusepanama.macfuse;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import jdk.incubator.foreign.*;
import jdk.incubator.foreign.MemoryLayout.PathElement;
import static jdk.incubator.foreign.CLinker.*;
class fuse_h_constants_2 extends fuse_h_constants_1 {

    /* package-private */ fuse_h_constants_2() {}
    static final MemoryLayout statvfs$f_bavail$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout statvfs$f_bavail$LAYOUT() { return statvfs$f_bavail$LAYOUT_; }

    static final VarHandle statvfs$f_bavail$VH_ = statvfs$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("f_bavail"));
    static final java.lang.invoke.VarHandle statvfs$f_bavail$VH() { return statvfs$f_bavail$VH_; }

    static final MemoryLayout statvfs$f_files$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout statvfs$f_files$LAYOUT() { return statvfs$f_files$LAYOUT_; }

    static final VarHandle statvfs$f_files$VH_ = statvfs$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("f_files"));
    static final java.lang.invoke.VarHandle statvfs$f_files$VH() { return statvfs$f_files$VH_; }

    static final MemoryLayout statvfs$f_ffree$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout statvfs$f_ffree$LAYOUT() { return statvfs$f_ffree$LAYOUT_; }

    static final VarHandle statvfs$f_ffree$VH_ = statvfs$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("f_ffree"));
    static final java.lang.invoke.VarHandle statvfs$f_ffree$VH() { return statvfs$f_ffree$VH_; }

    static final MemoryLayout statvfs$f_favail$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout statvfs$f_favail$LAYOUT() { return statvfs$f_favail$LAYOUT_; }

    static final VarHandle statvfs$f_favail$VH_ = statvfs$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("f_favail"));
    static final java.lang.invoke.VarHandle statvfs$f_favail$VH() { return statvfs$f_favail$VH_; }

    static final MemoryLayout statvfs$f_fsid$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout statvfs$f_fsid$LAYOUT() { return statvfs$f_fsid$LAYOUT_; }

    static final VarHandle statvfs$f_fsid$VH_ = statvfs$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("f_fsid"));
    static final java.lang.invoke.VarHandle statvfs$f_fsid$VH() { return statvfs$f_fsid$VH_; }

    static final MemoryLayout statvfs$f_flag$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout statvfs$f_flag$LAYOUT() { return statvfs$f_flag$LAYOUT_; }

    static final VarHandle statvfs$f_flag$VH_ = statvfs$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("f_flag"));
    static final java.lang.invoke.VarHandle statvfs$f_flag$VH() { return statvfs$f_flag$VH_; }

    static final MemoryLayout statvfs$f_namemax$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout statvfs$f_namemax$LAYOUT() { return statvfs$f_namemax$LAYOUT_; }

    static final VarHandle statvfs$f_namemax$VH_ = statvfs$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("f_namemax"));
    static final java.lang.invoke.VarHandle statvfs$f_namemax$VH() { return statvfs$f_namemax$VH_; }

    static final FunctionDescriptor fstatvfs$FUNC_ = FunctionDescriptor.of(C_INT,
        C_INT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor fstatvfs$FUNC() { return fstatvfs$FUNC_; }

    static final MethodHandle fstatvfs$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "fstatvfs",
        "(ILjdk/incubator/foreign/MemoryAddress;)I",
        fstatvfs$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle fstatvfs$MH() { return fstatvfs$MH_; }

    static final FunctionDescriptor statvfs$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor statvfs$FUNC() { return statvfs$FUNC_; }

    static final MethodHandle statvfs$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "statvfs",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        statvfs$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle statvfs$MH() { return statvfs$MH_; }

    static final MemoryLayout iovec$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("iov_base"),
        C_LONG.withName("iov_len")
    ).withName("iovec");
    static final jdk.incubator.foreign.MemoryLayout iovec$struct$LAYOUT() { return iovec$struct$LAYOUT_; }

    static final MemoryLayout iovec$iov_base$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout iovec$iov_base$LAYOUT() { return iovec$iov_base$LAYOUT_; }

    static final VarHandle iovec$iov_base$VH_ = MemoryHandles.asAddressVarHandle(iovec$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("iov_base")));
    static final java.lang.invoke.VarHandle iovec$iov_base$VH() { return iovec$iov_base$VH_; }

    static final MemoryLayout iovec$iov_len$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout iovec$iov_len$LAYOUT() { return iovec$iov_len$LAYOUT_; }

    static final VarHandle iovec$iov_len$VH_ = iovec$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("iov_len"));
    static final java.lang.invoke.VarHandle iovec$iov_len$VH() { return iovec$iov_len$VH_; }

    static final int UIO_READ() { return (int)0L; }

    static final int UIO_WRITE() { return (int)1L; }

    static final FunctionDescriptor readv$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_INT,
        C_POINTER,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor readv$FUNC() { return readv$FUNC_; }

    static final MethodHandle readv$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "readv",
        "(ILjdk/incubator/foreign/MemoryAddress;I)J",
        readv$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle readv$MH() { return readv$MH_; }

    static final FunctionDescriptor writev$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_INT,
        C_POINTER,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor writev$FUNC() { return writev$FUNC_; }

    static final MethodHandle writev$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "writev",
        "(ILjdk/incubator/foreign/MemoryAddress;I)J",
        writev$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle writev$MH() { return writev$MH_; }

    static final FunctionDescriptor preadv$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_INT,
        C_POINTER,
        C_INT,
        C_LONG_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor preadv$FUNC() { return preadv$FUNC_; }

    static final MethodHandle preadv$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "preadv",
        "(ILjdk/incubator/foreign/MemoryAddress;IJ)J",
        preadv$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle preadv$MH() { return preadv$MH_; }

    static final FunctionDescriptor pwritev$FUNC_ = FunctionDescriptor.of(C_LONG,
        C_INT,
        C_POINTER,
        C_INT,
        C_LONG_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor pwritev$FUNC() { return pwritev$FUNC_; }

    static final MethodHandle pwritev$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "pwritev",
        "(ILjdk/incubator/foreign/MemoryAddress;IJ)J",
        pwritev$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle pwritev$MH() { return pwritev$MH_; }

    static final MemoryLayout __darwin_i386_thread_state$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("__eax"),
        C_INT.withName("__ebx"),
        C_INT.withName("__ecx"),
        C_INT.withName("__edx"),
        C_INT.withName("__edi"),
        C_INT.withName("__esi"),
        C_INT.withName("__ebp"),
        C_INT.withName("__esp"),
        C_INT.withName("__ss"),
        C_INT.withName("__eflags"),
        C_INT.withName("__eip"),
        C_INT.withName("__cs"),
        C_INT.withName("__ds"),
        C_INT.withName("__es"),
        C_INT.withName("__fs"),
        C_INT.withName("__gs")
    ).withName("__darwin_i386_thread_state");
    static final jdk.incubator.foreign.MemoryLayout __darwin_i386_thread_state$struct$LAYOUT() { return __darwin_i386_thread_state$struct$LAYOUT_; }

    static final MemoryLayout __darwin_i386_thread_state$__eax$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout __darwin_i386_thread_state$__eax$LAYOUT() { return __darwin_i386_thread_state$__eax$LAYOUT_; }

    static final VarHandle __darwin_i386_thread_state$__eax$VH_ = __darwin_i386_thread_state$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("__eax"));
    static final java.lang.invoke.VarHandle __darwin_i386_thread_state$__eax$VH() { return __darwin_i386_thread_state$__eax$VH_; }

    static final MemoryLayout __darwin_i386_thread_state$__ebx$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout __darwin_i386_thread_state$__ebx$LAYOUT() { return __darwin_i386_thread_state$__ebx$LAYOUT_; }

    static final VarHandle __darwin_i386_thread_state$__ebx$VH_ = __darwin_i386_thread_state$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("__ebx"));
    static final java.lang.invoke.VarHandle __darwin_i386_thread_state$__ebx$VH() { return __darwin_i386_thread_state$__ebx$VH_; }

    static final MemoryLayout __darwin_i386_thread_state$__ecx$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout __darwin_i386_thread_state$__ecx$LAYOUT() { return __darwin_i386_thread_state$__ecx$LAYOUT_; }

    static final VarHandle __darwin_i386_thread_state$__ecx$VH_ = __darwin_i386_thread_state$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("__ecx"));
    static final java.lang.invoke.VarHandle __darwin_i386_thread_state$__ecx$VH() { return __darwin_i386_thread_state$__ecx$VH_; }

    static final MemoryLayout __darwin_i386_thread_state$__edx$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout __darwin_i386_thread_state$__edx$LAYOUT() { return __darwin_i386_thread_state$__edx$LAYOUT_; }

    static final VarHandle __darwin_i386_thread_state$__edx$VH_ = __darwin_i386_thread_state$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("__edx"));
    static final java.lang.invoke.VarHandle __darwin_i386_thread_state$__edx$VH() { return __darwin_i386_thread_state$__edx$VH_; }

    static final MemoryLayout __darwin_i386_thread_state$__edi$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout __darwin_i386_thread_state$__edi$LAYOUT() { return __darwin_i386_thread_state$__edi$LAYOUT_; }

    static final VarHandle __darwin_i386_thread_state$__edi$VH_ = __darwin_i386_thread_state$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("__edi"));
    static final java.lang.invoke.VarHandle __darwin_i386_thread_state$__edi$VH() { return __darwin_i386_thread_state$__edi$VH_; }

    static final MemoryLayout __darwin_i386_thread_state$__esi$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout __darwin_i386_thread_state$__esi$LAYOUT() { return __darwin_i386_thread_state$__esi$LAYOUT_; }

    static final VarHandle __darwin_i386_thread_state$__esi$VH_ = __darwin_i386_thread_state$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("__esi"));
    static final java.lang.invoke.VarHandle __darwin_i386_thread_state$__esi$VH() { return __darwin_i386_thread_state$__esi$VH_; }

    static final MemoryLayout __darwin_i386_thread_state$__ebp$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout __darwin_i386_thread_state$__ebp$LAYOUT() { return __darwin_i386_thread_state$__ebp$LAYOUT_; }

    static final VarHandle __darwin_i386_thread_state$__ebp$VH_ = __darwin_i386_thread_state$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("__ebp"));
    static final java.lang.invoke.VarHandle __darwin_i386_thread_state$__ebp$VH() { return __darwin_i386_thread_state$__ebp$VH_; }

    static final MemoryLayout __darwin_i386_thread_state$__esp$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout __darwin_i386_thread_state$__esp$LAYOUT() { return __darwin_i386_thread_state$__esp$LAYOUT_; }

    static final VarHandle __darwin_i386_thread_state$__esp$VH_ = __darwin_i386_thread_state$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("__esp"));
    static final java.lang.invoke.VarHandle __darwin_i386_thread_state$__esp$VH() { return __darwin_i386_thread_state$__esp$VH_; }

    static final MemoryLayout __darwin_i386_thread_state$__ss$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout __darwin_i386_thread_state$__ss$LAYOUT() { return __darwin_i386_thread_state$__ss$LAYOUT_; }

    static final VarHandle __darwin_i386_thread_state$__ss$VH_ = __darwin_i386_thread_state$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("__ss"));
    static final java.lang.invoke.VarHandle __darwin_i386_thread_state$__ss$VH() { return __darwin_i386_thread_state$__ss$VH_; }

    static final MemoryLayout __darwin_i386_thread_state$__eflags$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout __darwin_i386_thread_state$__eflags$LAYOUT() { return __darwin_i386_thread_state$__eflags$LAYOUT_; }

    static final VarHandle __darwin_i386_thread_state$__eflags$VH_ = __darwin_i386_thread_state$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("__eflags"));
    static final java.lang.invoke.VarHandle __darwin_i386_thread_state$__eflags$VH() { return __darwin_i386_thread_state$__eflags$VH_; }

    static final MemoryLayout __darwin_i386_thread_state$__eip$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout __darwin_i386_thread_state$__eip$LAYOUT() { return __darwin_i386_thread_state$__eip$LAYOUT_; }

    static final VarHandle __darwin_i386_thread_state$__eip$VH_ = __darwin_i386_thread_state$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("__eip"));
    static final java.lang.invoke.VarHandle __darwin_i386_thread_state$__eip$VH() { return __darwin_i386_thread_state$__eip$VH_; }

    static final MemoryLayout __darwin_i386_thread_state$__cs$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout __darwin_i386_thread_state$__cs$LAYOUT() { return __darwin_i386_thread_state$__cs$LAYOUT_; }

    static final VarHandle __darwin_i386_thread_state$__cs$VH_ = __darwin_i386_thread_state$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("__cs"));
    static final java.lang.invoke.VarHandle __darwin_i386_thread_state$__cs$VH() { return __darwin_i386_thread_state$__cs$VH_; }

    static final MemoryLayout __darwin_i386_thread_state$__ds$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout __darwin_i386_thread_state$__ds$LAYOUT() { return __darwin_i386_thread_state$__ds$LAYOUT_; }

    static final VarHandle __darwin_i386_thread_state$__ds$VH_ = __darwin_i386_thread_state$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("__ds"));
    static final java.lang.invoke.VarHandle __darwin_i386_thread_state$__ds$VH() { return __darwin_i386_thread_state$__ds$VH_; }

    static final MemoryLayout __darwin_i386_thread_state$__es$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout __darwin_i386_thread_state$__es$LAYOUT() { return __darwin_i386_thread_state$__es$LAYOUT_; }

    static final VarHandle __darwin_i386_thread_state$__es$VH_ = __darwin_i386_thread_state$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("__es"));
    static final java.lang.invoke.VarHandle __darwin_i386_thread_state$__es$VH() { return __darwin_i386_thread_state$__es$VH_; }

    static final MemoryLayout __darwin_i386_thread_state$__fs$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout __darwin_i386_thread_state$__fs$LAYOUT() { return __darwin_i386_thread_state$__fs$LAYOUT_; }

    static final VarHandle __darwin_i386_thread_state$__fs$VH_ = __darwin_i386_thread_state$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("__fs"));
    static final java.lang.invoke.VarHandle __darwin_i386_thread_state$__fs$VH() { return __darwin_i386_thread_state$__fs$VH_; }

    static final MemoryLayout __darwin_i386_thread_state$__gs$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout __darwin_i386_thread_state$__gs$LAYOUT() { return __darwin_i386_thread_state$__gs$LAYOUT_; }

    static final VarHandle __darwin_i386_thread_state$__gs$VH_ = __darwin_i386_thread_state$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("__gs"));
    static final java.lang.invoke.VarHandle __darwin_i386_thread_state$__gs$VH() { return __darwin_i386_thread_state$__gs$VH_; }

    static final MemoryLayout __darwin_fp_control$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_SHORT
    ).withName("__darwin_fp_control");
    static final jdk.incubator.foreign.MemoryLayout __darwin_fp_control$struct$LAYOUT() { return __darwin_fp_control$struct$LAYOUT_; }

    static final MemoryLayout __darwin_fp_status$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_SHORT
    ).withName("__darwin_fp_status");
    static final jdk.incubator.foreign.MemoryLayout __darwin_fp_status$struct$LAYOUT() { return __darwin_fp_status$struct$LAYOUT_; }

    static final MemoryLayout __darwin_mmst_reg$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofSequence(10, C_CHAR).withName("__mmst_reg"),
        MemoryLayout.ofSequence(6, C_CHAR).withName("__mmst_rsrv")
    ).withName("__darwin_mmst_reg");
    static final jdk.incubator.foreign.MemoryLayout __darwin_mmst_reg$struct$LAYOUT() { return __darwin_mmst_reg$struct$LAYOUT_; }

    static final MemoryLayout __darwin_xmm_reg$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
    ).withName("__darwin_xmm_reg");
    static final jdk.incubator.foreign.MemoryLayout __darwin_xmm_reg$struct$LAYOUT() { return __darwin_xmm_reg$struct$LAYOUT_; }

    static final MemoryLayout __darwin_ymm_reg$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofSequence(32, C_CHAR).withName("__ymm_reg")
    ).withName("__darwin_ymm_reg");
    static final jdk.incubator.foreign.MemoryLayout __darwin_ymm_reg$struct$LAYOUT() { return __darwin_ymm_reg$struct$LAYOUT_; }

    static final MemoryLayout __darwin_zmm_reg$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofSequence(64, C_CHAR).withName("__zmm_reg")
    ).withName("__darwin_zmm_reg");
    static final jdk.incubator.foreign.MemoryLayout __darwin_zmm_reg$struct$LAYOUT() { return __darwin_zmm_reg$struct$LAYOUT_; }

    static final MemoryLayout __darwin_opmask_reg$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofSequence(8, C_CHAR).withName("__opmask_reg")
    ).withName("__darwin_opmask_reg");
    static final jdk.incubator.foreign.MemoryLayout __darwin_opmask_reg$struct$LAYOUT() { return __darwin_opmask_reg$struct$LAYOUT_; }

    static final MemoryLayout __darwin_i386_float_state$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofSequence(2, C_INT).withName("__fpu_reserved"),
        MemoryLayout.ofStruct(
            C_SHORT
        ).withName("__fpu_fcw"),
        MemoryLayout.ofStruct(
            C_SHORT
        ).withName("__fpu_fsw"),
        C_CHAR.withName("__fpu_ftw"),
        C_CHAR.withName("__fpu_rsrv1"),
        C_SHORT.withName("__fpu_fop"),
        C_INT.withName("__fpu_ip"),
        C_SHORT.withName("__fpu_cs"),
        C_SHORT.withName("__fpu_rsrv2"),
        C_INT.withName("__fpu_dp"),
        C_SHORT.withName("__fpu_ds"),
        C_SHORT.withName("__fpu_rsrv3"),
        C_INT.withName("__fpu_mxcsr"),
        C_INT.withName("__fpu_mxcsrmask"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(10, C_CHAR).withName("__mmst_reg"),
            MemoryLayout.ofSequence(6, C_CHAR).withName("__mmst_rsrv")
        ).withName("__fpu_stmm0"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(10, C_CHAR).withName("__mmst_reg"),
            MemoryLayout.ofSequence(6, C_CHAR).withName("__mmst_rsrv")
        ).withName("__fpu_stmm1"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(10, C_CHAR).withName("__mmst_reg"),
            MemoryLayout.ofSequence(6, C_CHAR).withName("__mmst_rsrv")
        ).withName("__fpu_stmm2"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(10, C_CHAR).withName("__mmst_reg"),
            MemoryLayout.ofSequence(6, C_CHAR).withName("__mmst_rsrv")
        ).withName("__fpu_stmm3"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(10, C_CHAR).withName("__mmst_reg"),
            MemoryLayout.ofSequence(6, C_CHAR).withName("__mmst_rsrv")
        ).withName("__fpu_stmm4"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(10, C_CHAR).withName("__mmst_reg"),
            MemoryLayout.ofSequence(6, C_CHAR).withName("__mmst_rsrv")
        ).withName("__fpu_stmm5"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(10, C_CHAR).withName("__mmst_reg"),
            MemoryLayout.ofSequence(6, C_CHAR).withName("__mmst_rsrv")
        ).withName("__fpu_stmm6"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(10, C_CHAR).withName("__mmst_reg"),
            MemoryLayout.ofSequence(6, C_CHAR).withName("__mmst_rsrv")
        ).withName("__fpu_stmm7"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
        ).withName("__fpu_xmm0"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
        ).withName("__fpu_xmm1"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
        ).withName("__fpu_xmm2"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
        ).withName("__fpu_xmm3"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
        ).withName("__fpu_xmm4"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
        ).withName("__fpu_xmm5"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
        ).withName("__fpu_xmm6"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
        ).withName("__fpu_xmm7"),
        MemoryLayout.ofSequence(224, C_CHAR).withName("__fpu_rsrv4"),
        C_INT.withName("__fpu_reserved1")
    ).withName("__darwin_i386_float_state");
    static final jdk.incubator.foreign.MemoryLayout __darwin_i386_float_state$struct$LAYOUT() { return __darwin_i386_float_state$struct$LAYOUT_; }

    static final MemoryLayout __darwin_i386_float_state$__fpu_ftw$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout __darwin_i386_float_state$__fpu_ftw$LAYOUT() { return __darwin_i386_float_state$__fpu_ftw$LAYOUT_; }

    static final VarHandle __darwin_i386_float_state$__fpu_ftw$VH_ = __darwin_i386_float_state$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("__fpu_ftw"));
    static final java.lang.invoke.VarHandle __darwin_i386_float_state$__fpu_ftw$VH() { return __darwin_i386_float_state$__fpu_ftw$VH_; }

    static final MemoryLayout __darwin_i386_float_state$__fpu_rsrv1$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout __darwin_i386_float_state$__fpu_rsrv1$LAYOUT() { return __darwin_i386_float_state$__fpu_rsrv1$LAYOUT_; }

    static final VarHandle __darwin_i386_float_state$__fpu_rsrv1$VH_ = __darwin_i386_float_state$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("__fpu_rsrv1"));
    static final java.lang.invoke.VarHandle __darwin_i386_float_state$__fpu_rsrv1$VH() { return __darwin_i386_float_state$__fpu_rsrv1$VH_; }

    static final MemoryLayout __darwin_i386_float_state$__fpu_fop$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout __darwin_i386_float_state$__fpu_fop$LAYOUT() { return __darwin_i386_float_state$__fpu_fop$LAYOUT_; }

    static final VarHandle __darwin_i386_float_state$__fpu_fop$VH_ = __darwin_i386_float_state$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("__fpu_fop"));
    static final java.lang.invoke.VarHandle __darwin_i386_float_state$__fpu_fop$VH() { return __darwin_i386_float_state$__fpu_fop$VH_; }

    static final MemoryLayout __darwin_i386_float_state$__fpu_ip$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout __darwin_i386_float_state$__fpu_ip$LAYOUT() { return __darwin_i386_float_state$__fpu_ip$LAYOUT_; }

    static final VarHandle __darwin_i386_float_state$__fpu_ip$VH_ = __darwin_i386_float_state$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("__fpu_ip"));
    static final java.lang.invoke.VarHandle __darwin_i386_float_state$__fpu_ip$VH() { return __darwin_i386_float_state$__fpu_ip$VH_; }

    static final MemoryLayout __darwin_i386_float_state$__fpu_cs$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout __darwin_i386_float_state$__fpu_cs$LAYOUT() { return __darwin_i386_float_state$__fpu_cs$LAYOUT_; }

    static final VarHandle __darwin_i386_float_state$__fpu_cs$VH_ = __darwin_i386_float_state$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("__fpu_cs"));
    static final java.lang.invoke.VarHandle __darwin_i386_float_state$__fpu_cs$VH() { return __darwin_i386_float_state$__fpu_cs$VH_; }

    static final MemoryLayout __darwin_i386_float_state$__fpu_rsrv2$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout __darwin_i386_float_state$__fpu_rsrv2$LAYOUT() { return __darwin_i386_float_state$__fpu_rsrv2$LAYOUT_; }

    static final VarHandle __darwin_i386_float_state$__fpu_rsrv2$VH_ = __darwin_i386_float_state$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("__fpu_rsrv2"));
    static final java.lang.invoke.VarHandle __darwin_i386_float_state$__fpu_rsrv2$VH() { return __darwin_i386_float_state$__fpu_rsrv2$VH_; }

    static final MemoryLayout __darwin_i386_float_state$__fpu_dp$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout __darwin_i386_float_state$__fpu_dp$LAYOUT() { return __darwin_i386_float_state$__fpu_dp$LAYOUT_; }

    static final VarHandle __darwin_i386_float_state$__fpu_dp$VH_ = __darwin_i386_float_state$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("__fpu_dp"));
    static final java.lang.invoke.VarHandle __darwin_i386_float_state$__fpu_dp$VH() { return __darwin_i386_float_state$__fpu_dp$VH_; }

    static final MemoryLayout __darwin_i386_float_state$__fpu_ds$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout __darwin_i386_float_state$__fpu_ds$LAYOUT() { return __darwin_i386_float_state$__fpu_ds$LAYOUT_; }

    static final VarHandle __darwin_i386_float_state$__fpu_ds$VH_ = __darwin_i386_float_state$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("__fpu_ds"));
    static final java.lang.invoke.VarHandle __darwin_i386_float_state$__fpu_ds$VH() { return __darwin_i386_float_state$__fpu_ds$VH_; }

    static final MemoryLayout __darwin_i386_float_state$__fpu_rsrv3$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout __darwin_i386_float_state$__fpu_rsrv3$LAYOUT() { return __darwin_i386_float_state$__fpu_rsrv3$LAYOUT_; }

    static final VarHandle __darwin_i386_float_state$__fpu_rsrv3$VH_ = __darwin_i386_float_state$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("__fpu_rsrv3"));
    static final java.lang.invoke.VarHandle __darwin_i386_float_state$__fpu_rsrv3$VH() { return __darwin_i386_float_state$__fpu_rsrv3$VH_; }

    static final MemoryLayout __darwin_i386_float_state$__fpu_mxcsr$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout __darwin_i386_float_state$__fpu_mxcsr$LAYOUT() { return __darwin_i386_float_state$__fpu_mxcsr$LAYOUT_; }

    static final VarHandle __darwin_i386_float_state$__fpu_mxcsr$VH_ = __darwin_i386_float_state$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("__fpu_mxcsr"));
    static final java.lang.invoke.VarHandle __darwin_i386_float_state$__fpu_mxcsr$VH() { return __darwin_i386_float_state$__fpu_mxcsr$VH_; }

    static final MemoryLayout __darwin_i386_float_state$__fpu_mxcsrmask$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout __darwin_i386_float_state$__fpu_mxcsrmask$LAYOUT() { return __darwin_i386_float_state$__fpu_mxcsrmask$LAYOUT_; }

    static final VarHandle __darwin_i386_float_state$__fpu_mxcsrmask$VH_ = __darwin_i386_float_state$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("__fpu_mxcsrmask"));
    static final java.lang.invoke.VarHandle __darwin_i386_float_state$__fpu_mxcsrmask$VH() { return __darwin_i386_float_state$__fpu_mxcsrmask$VH_; }

    static final MemoryLayout __darwin_i386_float_state$__fpu_reserved1$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout __darwin_i386_float_state$__fpu_reserved1$LAYOUT() { return __darwin_i386_float_state$__fpu_reserved1$LAYOUT_; }

    static final VarHandle __darwin_i386_float_state$__fpu_reserved1$VH_ = __darwin_i386_float_state$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("__fpu_reserved1"));
    static final java.lang.invoke.VarHandle __darwin_i386_float_state$__fpu_reserved1$VH() { return __darwin_i386_float_state$__fpu_reserved1$VH_; }

    static final MemoryLayout __darwin_i386_avx_state$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofSequence(2, C_INT).withName("__fpu_reserved"),
        MemoryLayout.ofStruct(
            C_SHORT
        ).withName("__fpu_fcw"),
        MemoryLayout.ofStruct(
            C_SHORT
        ).withName("__fpu_fsw"),
        C_CHAR.withName("__fpu_ftw"),
        C_CHAR.withName("__fpu_rsrv1"),
        C_SHORT.withName("__fpu_fop"),
        C_INT.withName("__fpu_ip"),
        C_SHORT.withName("__fpu_cs"),
        C_SHORT.withName("__fpu_rsrv2"),
        C_INT.withName("__fpu_dp"),
        C_SHORT.withName("__fpu_ds"),
        C_SHORT.withName("__fpu_rsrv3"),
        C_INT.withName("__fpu_mxcsr"),
        C_INT.withName("__fpu_mxcsrmask"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(10, C_CHAR).withName("__mmst_reg"),
            MemoryLayout.ofSequence(6, C_CHAR).withName("__mmst_rsrv")
        ).withName("__fpu_stmm0"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(10, C_CHAR).withName("__mmst_reg"),
            MemoryLayout.ofSequence(6, C_CHAR).withName("__mmst_rsrv")
        ).withName("__fpu_stmm1"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(10, C_CHAR).withName("__mmst_reg"),
            MemoryLayout.ofSequence(6, C_CHAR).withName("__mmst_rsrv")
        ).withName("__fpu_stmm2"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(10, C_CHAR).withName("__mmst_reg"),
            MemoryLayout.ofSequence(6, C_CHAR).withName("__mmst_rsrv")
        ).withName("__fpu_stmm3"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(10, C_CHAR).withName("__mmst_reg"),
            MemoryLayout.ofSequence(6, C_CHAR).withName("__mmst_rsrv")
        ).withName("__fpu_stmm4"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(10, C_CHAR).withName("__mmst_reg"),
            MemoryLayout.ofSequence(6, C_CHAR).withName("__mmst_rsrv")
        ).withName("__fpu_stmm5"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(10, C_CHAR).withName("__mmst_reg"),
            MemoryLayout.ofSequence(6, C_CHAR).withName("__mmst_rsrv")
        ).withName("__fpu_stmm6"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(10, C_CHAR).withName("__mmst_reg"),
            MemoryLayout.ofSequence(6, C_CHAR).withName("__mmst_rsrv")
        ).withName("__fpu_stmm7"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
        ).withName("__fpu_xmm0"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
        ).withName("__fpu_xmm1"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
        ).withName("__fpu_xmm2"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
        ).withName("__fpu_xmm3"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
        ).withName("__fpu_xmm4"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
        ).withName("__fpu_xmm5"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
        ).withName("__fpu_xmm6"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
        ).withName("__fpu_xmm7"),
        MemoryLayout.ofSequence(224, C_CHAR).withName("__fpu_rsrv4"),
        C_INT.withName("__fpu_reserved1"),
        MemoryLayout.ofSequence(64, C_CHAR).withName("__avx_reserved1"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
        ).withName("__fpu_ymmh0"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
        ).withName("__fpu_ymmh1"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
        ).withName("__fpu_ymmh2"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
        ).withName("__fpu_ymmh3"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
        ).withName("__fpu_ymmh4"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
        ).withName("__fpu_ymmh5"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
        ).withName("__fpu_ymmh6"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
        ).withName("__fpu_ymmh7")
    ).withName("__darwin_i386_avx_state");
    static final jdk.incubator.foreign.MemoryLayout __darwin_i386_avx_state$struct$LAYOUT() { return __darwin_i386_avx_state$struct$LAYOUT_; }

    static final MemoryLayout __darwin_i386_avx_state$__fpu_ftw$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout __darwin_i386_avx_state$__fpu_ftw$LAYOUT() { return __darwin_i386_avx_state$__fpu_ftw$LAYOUT_; }

    static final VarHandle __darwin_i386_avx_state$__fpu_ftw$VH_ = __darwin_i386_avx_state$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("__fpu_ftw"));
    static final java.lang.invoke.VarHandle __darwin_i386_avx_state$__fpu_ftw$VH() { return __darwin_i386_avx_state$__fpu_ftw$VH_; }

    static final MemoryLayout __darwin_i386_avx_state$__fpu_rsrv1$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout __darwin_i386_avx_state$__fpu_rsrv1$LAYOUT() { return __darwin_i386_avx_state$__fpu_rsrv1$LAYOUT_; }

    static final VarHandle __darwin_i386_avx_state$__fpu_rsrv1$VH_ = __darwin_i386_avx_state$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("__fpu_rsrv1"));
    static final java.lang.invoke.VarHandle __darwin_i386_avx_state$__fpu_rsrv1$VH() { return __darwin_i386_avx_state$__fpu_rsrv1$VH_; }

    static final MemoryLayout __darwin_i386_avx_state$__fpu_fop$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout __darwin_i386_avx_state$__fpu_fop$LAYOUT() { return __darwin_i386_avx_state$__fpu_fop$LAYOUT_; }

    static final VarHandle __darwin_i386_avx_state$__fpu_fop$VH_ = __darwin_i386_avx_state$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("__fpu_fop"));
    static final java.lang.invoke.VarHandle __darwin_i386_avx_state$__fpu_fop$VH() { return __darwin_i386_avx_state$__fpu_fop$VH_; }

    static final MemoryLayout __darwin_i386_avx_state$__fpu_ip$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout __darwin_i386_avx_state$__fpu_ip$LAYOUT() { return __darwin_i386_avx_state$__fpu_ip$LAYOUT_; }

    static final VarHandle __darwin_i386_avx_state$__fpu_ip$VH_ = __darwin_i386_avx_state$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("__fpu_ip"));
    static final java.lang.invoke.VarHandle __darwin_i386_avx_state$__fpu_ip$VH() { return __darwin_i386_avx_state$__fpu_ip$VH_; }

    static final MemoryLayout __darwin_i386_avx_state$__fpu_cs$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout __darwin_i386_avx_state$__fpu_cs$LAYOUT() { return __darwin_i386_avx_state$__fpu_cs$LAYOUT_; }

    static final VarHandle __darwin_i386_avx_state$__fpu_cs$VH_ = __darwin_i386_avx_state$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("__fpu_cs"));
    static final java.lang.invoke.VarHandle __darwin_i386_avx_state$__fpu_cs$VH() { return __darwin_i386_avx_state$__fpu_cs$VH_; }

    static final MemoryLayout __darwin_i386_avx_state$__fpu_rsrv2$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout __darwin_i386_avx_state$__fpu_rsrv2$LAYOUT() { return __darwin_i386_avx_state$__fpu_rsrv2$LAYOUT_; }

    static final VarHandle __darwin_i386_avx_state$__fpu_rsrv2$VH_ = __darwin_i386_avx_state$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("__fpu_rsrv2"));
    static final java.lang.invoke.VarHandle __darwin_i386_avx_state$__fpu_rsrv2$VH() { return __darwin_i386_avx_state$__fpu_rsrv2$VH_; }

    static final MemoryLayout __darwin_i386_avx_state$__fpu_dp$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout __darwin_i386_avx_state$__fpu_dp$LAYOUT() { return __darwin_i386_avx_state$__fpu_dp$LAYOUT_; }

    static final VarHandle __darwin_i386_avx_state$__fpu_dp$VH_ = __darwin_i386_avx_state$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("__fpu_dp"));
    static final java.lang.invoke.VarHandle __darwin_i386_avx_state$__fpu_dp$VH() { return __darwin_i386_avx_state$__fpu_dp$VH_; }

    static final MemoryLayout __darwin_i386_avx_state$__fpu_ds$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout __darwin_i386_avx_state$__fpu_ds$LAYOUT() { return __darwin_i386_avx_state$__fpu_ds$LAYOUT_; }

    static final VarHandle __darwin_i386_avx_state$__fpu_ds$VH_ = __darwin_i386_avx_state$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("__fpu_ds"));
    static final java.lang.invoke.VarHandle __darwin_i386_avx_state$__fpu_ds$VH() { return __darwin_i386_avx_state$__fpu_ds$VH_; }

    static final MemoryLayout __darwin_i386_avx_state$__fpu_rsrv3$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout __darwin_i386_avx_state$__fpu_rsrv3$LAYOUT() { return __darwin_i386_avx_state$__fpu_rsrv3$LAYOUT_; }

    static final VarHandle __darwin_i386_avx_state$__fpu_rsrv3$VH_ = __darwin_i386_avx_state$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("__fpu_rsrv3"));
    static final java.lang.invoke.VarHandle __darwin_i386_avx_state$__fpu_rsrv3$VH() { return __darwin_i386_avx_state$__fpu_rsrv3$VH_; }

    static final MemoryLayout __darwin_i386_avx_state$__fpu_mxcsr$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout __darwin_i386_avx_state$__fpu_mxcsr$LAYOUT() { return __darwin_i386_avx_state$__fpu_mxcsr$LAYOUT_; }

    static final VarHandle __darwin_i386_avx_state$__fpu_mxcsr$VH_ = __darwin_i386_avx_state$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("__fpu_mxcsr"));
    static final java.lang.invoke.VarHandle __darwin_i386_avx_state$__fpu_mxcsr$VH() { return __darwin_i386_avx_state$__fpu_mxcsr$VH_; }

    static final MemoryLayout __darwin_i386_avx_state$__fpu_mxcsrmask$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout __darwin_i386_avx_state$__fpu_mxcsrmask$LAYOUT() { return __darwin_i386_avx_state$__fpu_mxcsrmask$LAYOUT_; }

    static final VarHandle __darwin_i386_avx_state$__fpu_mxcsrmask$VH_ = __darwin_i386_avx_state$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("__fpu_mxcsrmask"));
    static final java.lang.invoke.VarHandle __darwin_i386_avx_state$__fpu_mxcsrmask$VH() { return __darwin_i386_avx_state$__fpu_mxcsrmask$VH_; }

    static final MemoryLayout __darwin_i386_avx_state$__fpu_reserved1$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout __darwin_i386_avx_state$__fpu_reserved1$LAYOUT() { return __darwin_i386_avx_state$__fpu_reserved1$LAYOUT_; }

    static final VarHandle __darwin_i386_avx_state$__fpu_reserved1$VH_ = __darwin_i386_avx_state$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("__fpu_reserved1"));
    static final java.lang.invoke.VarHandle __darwin_i386_avx_state$__fpu_reserved1$VH() { return __darwin_i386_avx_state$__fpu_reserved1$VH_; }

    static final MemoryLayout __darwin_i386_avx512_state$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofSequence(2, C_INT).withName("__fpu_reserved"),
        MemoryLayout.ofStruct(
            C_SHORT
        ).withName("__fpu_fcw"),
        MemoryLayout.ofStruct(
            C_SHORT
        ).withName("__fpu_fsw"),
        C_CHAR.withName("__fpu_ftw"),
        C_CHAR.withName("__fpu_rsrv1"),
        C_SHORT.withName("__fpu_fop"),
        C_INT.withName("__fpu_ip"),
        C_SHORT.withName("__fpu_cs"),
        C_SHORT.withName("__fpu_rsrv2"),
        C_INT.withName("__fpu_dp"),
        C_SHORT.withName("__fpu_ds"),
        C_SHORT.withName("__fpu_rsrv3"),
        C_INT.withName("__fpu_mxcsr"),
        C_INT.withName("__fpu_mxcsrmask"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(10, C_CHAR).withName("__mmst_reg"),
            MemoryLayout.ofSequence(6, C_CHAR).withName("__mmst_rsrv")
        ).withName("__fpu_stmm0"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(10, C_CHAR).withName("__mmst_reg"),
            MemoryLayout.ofSequence(6, C_CHAR).withName("__mmst_rsrv")
        ).withName("__fpu_stmm1"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(10, C_CHAR).withName("__mmst_reg"),
            MemoryLayout.ofSequence(6, C_CHAR).withName("__mmst_rsrv")
        ).withName("__fpu_stmm2"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(10, C_CHAR).withName("__mmst_reg"),
            MemoryLayout.ofSequence(6, C_CHAR).withName("__mmst_rsrv")
        ).withName("__fpu_stmm3"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(10, C_CHAR).withName("__mmst_reg"),
            MemoryLayout.ofSequence(6, C_CHAR).withName("__mmst_rsrv")
        ).withName("__fpu_stmm4"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(10, C_CHAR).withName("__mmst_reg"),
            MemoryLayout.ofSequence(6, C_CHAR).withName("__mmst_rsrv")
        ).withName("__fpu_stmm5"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(10, C_CHAR).withName("__mmst_reg"),
            MemoryLayout.ofSequence(6, C_CHAR).withName("__mmst_rsrv")
        ).withName("__fpu_stmm6"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(10, C_CHAR).withName("__mmst_reg"),
            MemoryLayout.ofSequence(6, C_CHAR).withName("__mmst_rsrv")
        ).withName("__fpu_stmm7"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
        ).withName("__fpu_xmm0"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
        ).withName("__fpu_xmm1"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
        ).withName("__fpu_xmm2"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
        ).withName("__fpu_xmm3"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
        ).withName("__fpu_xmm4"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
        ).withName("__fpu_xmm5"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
        ).withName("__fpu_xmm6"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
        ).withName("__fpu_xmm7"),
        MemoryLayout.ofSequence(224, C_CHAR).withName("__fpu_rsrv4"),
        C_INT.withName("__fpu_reserved1"),
        MemoryLayout.ofSequence(64, C_CHAR).withName("__avx_reserved1"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
        ).withName("__fpu_ymmh0"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
        ).withName("__fpu_ymmh1"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
        ).withName("__fpu_ymmh2"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
        ).withName("__fpu_ymmh3"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
        ).withName("__fpu_ymmh4"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
        ).withName("__fpu_ymmh5"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
        ).withName("__fpu_ymmh6"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
        ).withName("__fpu_ymmh7"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(8, C_CHAR).withName("__opmask_reg")
        ).withName("__fpu_k0"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(8, C_CHAR).withName("__opmask_reg")
        ).withName("__fpu_k1"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(8, C_CHAR).withName("__opmask_reg")
        ).withName("__fpu_k2"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(8, C_CHAR).withName("__opmask_reg")
        ).withName("__fpu_k3"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(8, C_CHAR).withName("__opmask_reg")
        ).withName("__fpu_k4"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(8, C_CHAR).withName("__opmask_reg")
        ).withName("__fpu_k5"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(8, C_CHAR).withName("__opmask_reg")
        ).withName("__fpu_k6"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(8, C_CHAR).withName("__opmask_reg")
        ).withName("__fpu_k7"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(32, C_CHAR).withName("__ymm_reg")
        ).withName("__fpu_zmmh0"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(32, C_CHAR).withName("__ymm_reg")
        ).withName("__fpu_zmmh1"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(32, C_CHAR).withName("__ymm_reg")
        ).withName("__fpu_zmmh2"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(32, C_CHAR).withName("__ymm_reg")
        ).withName("__fpu_zmmh3"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(32, C_CHAR).withName("__ymm_reg")
        ).withName("__fpu_zmmh4"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(32, C_CHAR).withName("__ymm_reg")
        ).withName("__fpu_zmmh5"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(32, C_CHAR).withName("__ymm_reg")
        ).withName("__fpu_zmmh6"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(32, C_CHAR).withName("__ymm_reg")
        ).withName("__fpu_zmmh7")
    ).withName("__darwin_i386_avx512_state");
    static final jdk.incubator.foreign.MemoryLayout __darwin_i386_avx512_state$struct$LAYOUT() { return __darwin_i386_avx512_state$struct$LAYOUT_; }

    static final MemoryLayout __darwin_i386_avx512_state$__fpu_ftw$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout __darwin_i386_avx512_state$__fpu_ftw$LAYOUT() { return __darwin_i386_avx512_state$__fpu_ftw$LAYOUT_; }

    static final VarHandle __darwin_i386_avx512_state$__fpu_ftw$VH_ = __darwin_i386_avx512_state$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("__fpu_ftw"));
    static final java.lang.invoke.VarHandle __darwin_i386_avx512_state$__fpu_ftw$VH() { return __darwin_i386_avx512_state$__fpu_ftw$VH_; }

    static final MemoryLayout __darwin_i386_avx512_state$__fpu_rsrv1$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout __darwin_i386_avx512_state$__fpu_rsrv1$LAYOUT() { return __darwin_i386_avx512_state$__fpu_rsrv1$LAYOUT_; }

    static final VarHandle __darwin_i386_avx512_state$__fpu_rsrv1$VH_ = __darwin_i386_avx512_state$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("__fpu_rsrv1"));
    static final java.lang.invoke.VarHandle __darwin_i386_avx512_state$__fpu_rsrv1$VH() { return __darwin_i386_avx512_state$__fpu_rsrv1$VH_; }

    static final MemoryLayout __darwin_i386_avx512_state$__fpu_fop$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout __darwin_i386_avx512_state$__fpu_fop$LAYOUT() { return __darwin_i386_avx512_state$__fpu_fop$LAYOUT_; }

    static final VarHandle __darwin_i386_avx512_state$__fpu_fop$VH_ = __darwin_i386_avx512_state$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("__fpu_fop"));
    static final java.lang.invoke.VarHandle __darwin_i386_avx512_state$__fpu_fop$VH() { return __darwin_i386_avx512_state$__fpu_fop$VH_; }

    static final MemoryLayout __darwin_i386_avx512_state$__fpu_ip$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout __darwin_i386_avx512_state$__fpu_ip$LAYOUT() { return __darwin_i386_avx512_state$__fpu_ip$LAYOUT_; }

    static final VarHandle __darwin_i386_avx512_state$__fpu_ip$VH_ = __darwin_i386_avx512_state$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("__fpu_ip"));
    static final java.lang.invoke.VarHandle __darwin_i386_avx512_state$__fpu_ip$VH() { return __darwin_i386_avx512_state$__fpu_ip$VH_; }

    static final MemoryLayout __darwin_i386_avx512_state$__fpu_cs$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout __darwin_i386_avx512_state$__fpu_cs$LAYOUT() { return __darwin_i386_avx512_state$__fpu_cs$LAYOUT_; }

    static final VarHandle __darwin_i386_avx512_state$__fpu_cs$VH_ = __darwin_i386_avx512_state$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("__fpu_cs"));
    static final java.lang.invoke.VarHandle __darwin_i386_avx512_state$__fpu_cs$VH() { return __darwin_i386_avx512_state$__fpu_cs$VH_; }

    static final MemoryLayout __darwin_i386_avx512_state$__fpu_rsrv2$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout __darwin_i386_avx512_state$__fpu_rsrv2$LAYOUT() { return __darwin_i386_avx512_state$__fpu_rsrv2$LAYOUT_; }

    static final VarHandle __darwin_i386_avx512_state$__fpu_rsrv2$VH_ = __darwin_i386_avx512_state$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("__fpu_rsrv2"));
    static final java.lang.invoke.VarHandle __darwin_i386_avx512_state$__fpu_rsrv2$VH() { return __darwin_i386_avx512_state$__fpu_rsrv2$VH_; }

    static final MemoryLayout __darwin_i386_avx512_state$__fpu_dp$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout __darwin_i386_avx512_state$__fpu_dp$LAYOUT() { return __darwin_i386_avx512_state$__fpu_dp$LAYOUT_; }

    static final VarHandle __darwin_i386_avx512_state$__fpu_dp$VH_ = __darwin_i386_avx512_state$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("__fpu_dp"));
    static final java.lang.invoke.VarHandle __darwin_i386_avx512_state$__fpu_dp$VH() { return __darwin_i386_avx512_state$__fpu_dp$VH_; }

    static final MemoryLayout __darwin_i386_avx512_state$__fpu_ds$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout __darwin_i386_avx512_state$__fpu_ds$LAYOUT() { return __darwin_i386_avx512_state$__fpu_ds$LAYOUT_; }

    static final VarHandle __darwin_i386_avx512_state$__fpu_ds$VH_ = __darwin_i386_avx512_state$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("__fpu_ds"));
    static final java.lang.invoke.VarHandle __darwin_i386_avx512_state$__fpu_ds$VH() { return __darwin_i386_avx512_state$__fpu_ds$VH_; }

    static final MemoryLayout __darwin_i386_avx512_state$__fpu_rsrv3$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout __darwin_i386_avx512_state$__fpu_rsrv3$LAYOUT() { return __darwin_i386_avx512_state$__fpu_rsrv3$LAYOUT_; }

    static final VarHandle __darwin_i386_avx512_state$__fpu_rsrv3$VH_ = __darwin_i386_avx512_state$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("__fpu_rsrv3"));
    static final java.lang.invoke.VarHandle __darwin_i386_avx512_state$__fpu_rsrv3$VH() { return __darwin_i386_avx512_state$__fpu_rsrv3$VH_; }

    static final MemoryLayout __darwin_i386_avx512_state$__fpu_mxcsr$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout __darwin_i386_avx512_state$__fpu_mxcsr$LAYOUT() { return __darwin_i386_avx512_state$__fpu_mxcsr$LAYOUT_; }

    static final VarHandle __darwin_i386_avx512_state$__fpu_mxcsr$VH_ = __darwin_i386_avx512_state$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("__fpu_mxcsr"));
    static final java.lang.invoke.VarHandle __darwin_i386_avx512_state$__fpu_mxcsr$VH() { return __darwin_i386_avx512_state$__fpu_mxcsr$VH_; }

    static final MemoryLayout __darwin_i386_avx512_state$__fpu_mxcsrmask$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout __darwin_i386_avx512_state$__fpu_mxcsrmask$LAYOUT() { return __darwin_i386_avx512_state$__fpu_mxcsrmask$LAYOUT_; }

    static final VarHandle __darwin_i386_avx512_state$__fpu_mxcsrmask$VH_ = __darwin_i386_avx512_state$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("__fpu_mxcsrmask"));
    static final java.lang.invoke.VarHandle __darwin_i386_avx512_state$__fpu_mxcsrmask$VH() { return __darwin_i386_avx512_state$__fpu_mxcsrmask$VH_; }

    static final MemoryLayout __darwin_i386_avx512_state$__fpu_reserved1$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout __darwin_i386_avx512_state$__fpu_reserved1$LAYOUT() { return __darwin_i386_avx512_state$__fpu_reserved1$LAYOUT_; }

    static final VarHandle __darwin_i386_avx512_state$__fpu_reserved1$VH_ = __darwin_i386_avx512_state$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("__fpu_reserved1"));
    static final java.lang.invoke.VarHandle __darwin_i386_avx512_state$__fpu_reserved1$VH() { return __darwin_i386_avx512_state$__fpu_reserved1$VH_; }

    static final MemoryLayout __darwin_i386_exception_state$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_SHORT.withName("__trapno"),
        C_SHORT.withName("__cpu"),
        C_INT.withName("__err"),
        C_INT.withName("__faultvaddr")
    ).withName("__darwin_i386_exception_state");
    static final jdk.incubator.foreign.MemoryLayout __darwin_i386_exception_state$struct$LAYOUT() { return __darwin_i386_exception_state$struct$LAYOUT_; }

    static final MemoryLayout __darwin_i386_exception_state$__trapno$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout __darwin_i386_exception_state$__trapno$LAYOUT() { return __darwin_i386_exception_state$__trapno$LAYOUT_; }

    static final VarHandle __darwin_i386_exception_state$__trapno$VH_ = __darwin_i386_exception_state$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("__trapno"));
    static final java.lang.invoke.VarHandle __darwin_i386_exception_state$__trapno$VH() { return __darwin_i386_exception_state$__trapno$VH_; }

    static final MemoryLayout __darwin_i386_exception_state$__cpu$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout __darwin_i386_exception_state$__cpu$LAYOUT() { return __darwin_i386_exception_state$__cpu$LAYOUT_; }

    static final VarHandle __darwin_i386_exception_state$__cpu$VH_ = __darwin_i386_exception_state$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("__cpu"));
    static final java.lang.invoke.VarHandle __darwin_i386_exception_state$__cpu$VH() { return __darwin_i386_exception_state$__cpu$VH_; }

    static final MemoryLayout __darwin_i386_exception_state$__err$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout __darwin_i386_exception_state$__err$LAYOUT() { return __darwin_i386_exception_state$__err$LAYOUT_; }

    static final VarHandle __darwin_i386_exception_state$__err$VH_ = __darwin_i386_exception_state$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("__err"));
    static final java.lang.invoke.VarHandle __darwin_i386_exception_state$__err$VH() { return __darwin_i386_exception_state$__err$VH_; }

    static final MemoryLayout __darwin_i386_exception_state$__faultvaddr$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout __darwin_i386_exception_state$__faultvaddr$LAYOUT() { return __darwin_i386_exception_state$__faultvaddr$LAYOUT_; }

    static final VarHandle __darwin_i386_exception_state$__faultvaddr$VH_ = __darwin_i386_exception_state$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("__faultvaddr"));
    static final java.lang.invoke.VarHandle __darwin_i386_exception_state$__faultvaddr$VH() { return __darwin_i386_exception_state$__faultvaddr$VH_; }

    static final MemoryLayout __darwin_x86_debug_state32$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("__dr0"),
        C_INT.withName("__dr1"),
        C_INT.withName("__dr2"),
        C_INT.withName("__dr3"),
        C_INT.withName("__dr4"),
        C_INT.withName("__dr5"),
        C_INT.withName("__dr6"),
        C_INT.withName("__dr7")
    ).withName("__darwin_x86_debug_state32");
    static final jdk.incubator.foreign.MemoryLayout __darwin_x86_debug_state32$struct$LAYOUT() { return __darwin_x86_debug_state32$struct$LAYOUT_; }

    static final MemoryLayout __darwin_x86_debug_state32$__dr0$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout __darwin_x86_debug_state32$__dr0$LAYOUT() { return __darwin_x86_debug_state32$__dr0$LAYOUT_; }

    static final VarHandle __darwin_x86_debug_state32$__dr0$VH_ = __darwin_x86_debug_state32$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("__dr0"));
    static final java.lang.invoke.VarHandle __darwin_x86_debug_state32$__dr0$VH() { return __darwin_x86_debug_state32$__dr0$VH_; }

    static final MemoryLayout __darwin_x86_debug_state32$__dr1$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout __darwin_x86_debug_state32$__dr1$LAYOUT() { return __darwin_x86_debug_state32$__dr1$LAYOUT_; }

    static final VarHandle __darwin_x86_debug_state32$__dr1$VH_ = __darwin_x86_debug_state32$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("__dr1"));
    static final java.lang.invoke.VarHandle __darwin_x86_debug_state32$__dr1$VH() { return __darwin_x86_debug_state32$__dr1$VH_; }

    static final MemoryLayout __darwin_x86_debug_state32$__dr2$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout __darwin_x86_debug_state32$__dr2$LAYOUT() { return __darwin_x86_debug_state32$__dr2$LAYOUT_; }

    static final VarHandle __darwin_x86_debug_state32$__dr2$VH_ = __darwin_x86_debug_state32$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("__dr2"));
    static final java.lang.invoke.VarHandle __darwin_x86_debug_state32$__dr2$VH() { return __darwin_x86_debug_state32$__dr2$VH_; }

    static final MemoryLayout __darwin_x86_debug_state32$__dr3$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout __darwin_x86_debug_state32$__dr3$LAYOUT() { return __darwin_x86_debug_state32$__dr3$LAYOUT_; }

    static final VarHandle __darwin_x86_debug_state32$__dr3$VH_ = __darwin_x86_debug_state32$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("__dr3"));
    static final java.lang.invoke.VarHandle __darwin_x86_debug_state32$__dr3$VH() { return __darwin_x86_debug_state32$__dr3$VH_; }

    static final MemoryLayout __darwin_x86_debug_state32$__dr4$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout __darwin_x86_debug_state32$__dr4$LAYOUT() { return __darwin_x86_debug_state32$__dr4$LAYOUT_; }

    static final VarHandle __darwin_x86_debug_state32$__dr4$VH_ = __darwin_x86_debug_state32$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("__dr4"));
    static final java.lang.invoke.VarHandle __darwin_x86_debug_state32$__dr4$VH() { return __darwin_x86_debug_state32$__dr4$VH_; }

    static final MemoryLayout __darwin_x86_debug_state32$__dr5$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout __darwin_x86_debug_state32$__dr5$LAYOUT() { return __darwin_x86_debug_state32$__dr5$LAYOUT_; }

    static final VarHandle __darwin_x86_debug_state32$__dr5$VH_ = __darwin_x86_debug_state32$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("__dr5"));
    static final java.lang.invoke.VarHandle __darwin_x86_debug_state32$__dr5$VH() { return __darwin_x86_debug_state32$__dr5$VH_; }

    static final MemoryLayout __darwin_x86_debug_state32$__dr6$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout __darwin_x86_debug_state32$__dr6$LAYOUT() { return __darwin_x86_debug_state32$__dr6$LAYOUT_; }

    static final VarHandle __darwin_x86_debug_state32$__dr6$VH_ = __darwin_x86_debug_state32$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("__dr6"));
    static final java.lang.invoke.VarHandle __darwin_x86_debug_state32$__dr6$VH() { return __darwin_x86_debug_state32$__dr6$VH_; }

    static final MemoryLayout __darwin_x86_debug_state32$__dr7$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout __darwin_x86_debug_state32$__dr7$LAYOUT() { return __darwin_x86_debug_state32$__dr7$LAYOUT_; }

    static final VarHandle __darwin_x86_debug_state32$__dr7$VH_ = __darwin_x86_debug_state32$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("__dr7"));
    static final java.lang.invoke.VarHandle __darwin_x86_debug_state32$__dr7$VH() { return __darwin_x86_debug_state32$__dr7$VH_; }

    static final MemoryLayout __x86_instruction_state$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("__insn_stream_valid_bytes"),
        C_INT.withName("__insn_offset"),
        C_INT.withName("__out_of_synch"),
        MemoryLayout.ofSequence(2380, C_CHAR).withName("__insn_bytes"),
        MemoryLayout.ofSequence(64, C_CHAR).withName("__insn_cacheline")
    ).withName("__x86_instruction_state");
    static final jdk.incubator.foreign.MemoryLayout __x86_instruction_state$struct$LAYOUT() { return __x86_instruction_state$struct$LAYOUT_; }

    static final MemoryLayout __x86_instruction_state$__insn_stream_valid_bytes$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout __x86_instruction_state$__insn_stream_valid_bytes$LAYOUT() { return __x86_instruction_state$__insn_stream_valid_bytes$LAYOUT_; }

    static final VarHandle __x86_instruction_state$__insn_stream_valid_bytes$VH_ = __x86_instruction_state$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("__insn_stream_valid_bytes"));
    static final java.lang.invoke.VarHandle __x86_instruction_state$__insn_stream_valid_bytes$VH() { return __x86_instruction_state$__insn_stream_valid_bytes$VH_; }

    static final MemoryLayout __x86_instruction_state$__insn_offset$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout __x86_instruction_state$__insn_offset$LAYOUT() { return __x86_instruction_state$__insn_offset$LAYOUT_; }

    static final VarHandle __x86_instruction_state$__insn_offset$VH_ = __x86_instruction_state$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("__insn_offset"));
    static final java.lang.invoke.VarHandle __x86_instruction_state$__insn_offset$VH() { return __x86_instruction_state$__insn_offset$VH_; }

    static final MemoryLayout __x86_instruction_state$__out_of_synch$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout __x86_instruction_state$__out_of_synch$LAYOUT() { return __x86_instruction_state$__out_of_synch$LAYOUT_; }

    static final VarHandle __x86_instruction_state$__out_of_synch$VH_ = __x86_instruction_state$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("__out_of_synch"));
    static final java.lang.invoke.VarHandle __x86_instruction_state$__out_of_synch$VH() { return __x86_instruction_state$__out_of_synch$VH_; }

    static final MemoryLayout __last_branch_record$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG_LONG.withName("__from_ip"),
        C_LONG_LONG.withName("__to_ip"),
        C_LONG_LONG
    ).withName("__last_branch_record");
    static final jdk.incubator.foreign.MemoryLayout __last_branch_record$struct$LAYOUT() { return __last_branch_record$struct$LAYOUT_; }

    static final MemoryLayout __last_branch_record$__from_ip$LAYOUT_ = C_LONG_LONG;
    static final jdk.incubator.foreign.MemoryLayout __last_branch_record$__from_ip$LAYOUT() { return __last_branch_record$__from_ip$LAYOUT_; }

    static final VarHandle __last_branch_record$__from_ip$VH_ = __last_branch_record$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("__from_ip"));
    static final java.lang.invoke.VarHandle __last_branch_record$__from_ip$VH() { return __last_branch_record$__from_ip$VH_; }

    static final MemoryLayout __last_branch_record$__to_ip$LAYOUT_ = C_LONG_LONG;
    static final jdk.incubator.foreign.MemoryLayout __last_branch_record$__to_ip$LAYOUT() { return __last_branch_record$__to_ip$LAYOUT_; }

    static final VarHandle __last_branch_record$__to_ip$VH_ = __last_branch_record$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("__to_ip"));
    static final java.lang.invoke.VarHandle __last_branch_record$__to_ip$VH() { return __last_branch_record$__to_ip$VH_; }

    static final MemoryLayout __last_branch_state$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("__lbr_count"),
        C_INT,
        MemoryLayout.ofSequence(32, MemoryLayout.ofStruct(
            C_LONG_LONG.withName("__from_ip"),
            C_LONG_LONG.withName("__to_ip"),
            C_LONG_LONG
        ).withName("__last_branch_record")).withName("__lbrs")
    ).withName("__last_branch_state");
    static final jdk.incubator.foreign.MemoryLayout __last_branch_state$struct$LAYOUT() { return __last_branch_state$struct$LAYOUT_; }

    static final MemoryLayout __last_branch_state$__lbr_count$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout __last_branch_state$__lbr_count$LAYOUT() { return __last_branch_state$__lbr_count$LAYOUT_; }

    static final VarHandle __last_branch_state$__lbr_count$VH_ = __last_branch_state$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("__lbr_count"));
    static final java.lang.invoke.VarHandle __last_branch_state$__lbr_count$VH() { return __last_branch_state$__lbr_count$VH_; }

    static final MemoryLayout __x86_pagein_state$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("__pagein_error")
    ).withName("__x86_pagein_state");
    static final jdk.incubator.foreign.MemoryLayout __x86_pagein_state$struct$LAYOUT() { return __x86_pagein_state$struct$LAYOUT_; }

    static final MemoryLayout __x86_pagein_state$__pagein_error$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout __x86_pagein_state$__pagein_error$LAYOUT() { return __x86_pagein_state$__pagein_error$LAYOUT_; }

    static final VarHandle __x86_pagein_state$__pagein_error$VH_ = __x86_pagein_state$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("__pagein_error"));
    static final java.lang.invoke.VarHandle __x86_pagein_state$__pagein_error$VH() { return __x86_pagein_state$__pagein_error$VH_; }

    static final MemoryLayout __darwin_x86_thread_state64$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG_LONG.withName("__rax"),
        C_LONG_LONG.withName("__rbx"),
        C_LONG_LONG.withName("__rcx"),
        C_LONG_LONG.withName("__rdx"),
        C_LONG_LONG.withName("__rdi"),
        C_LONG_LONG.withName("__rsi"),
        C_LONG_LONG.withName("__rbp"),
        C_LONG_LONG.withName("__rsp"),
        C_LONG_LONG.withName("__r8"),
        C_LONG_LONG.withName("__r9"),
        C_LONG_LONG.withName("__r10"),
        C_LONG_LONG.withName("__r11"),
        C_LONG_LONG.withName("__r12"),
        C_LONG_LONG.withName("__r13"),
        C_LONG_LONG.withName("__r14"),
        C_LONG_LONG.withName("__r15"),
        C_LONG_LONG.withName("__rip"),
        C_LONG_LONG.withName("__rflags"),
        C_LONG_LONG.withName("__cs"),
        C_LONG_LONG.withName("__fs"),
        C_LONG_LONG.withName("__gs")
    ).withName("__darwin_x86_thread_state64");
    static final jdk.incubator.foreign.MemoryLayout __darwin_x86_thread_state64$struct$LAYOUT() { return __darwin_x86_thread_state64$struct$LAYOUT_; }

    static final MemoryLayout __darwin_x86_thread_state64$__rax$LAYOUT_ = C_LONG_LONG;
    static final jdk.incubator.foreign.MemoryLayout __darwin_x86_thread_state64$__rax$LAYOUT() { return __darwin_x86_thread_state64$__rax$LAYOUT_; }

    static final VarHandle __darwin_x86_thread_state64$__rax$VH_ = __darwin_x86_thread_state64$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("__rax"));
    static final java.lang.invoke.VarHandle __darwin_x86_thread_state64$__rax$VH() { return __darwin_x86_thread_state64$__rax$VH_; }

    static final MemoryLayout __darwin_x86_thread_state64$__rbx$LAYOUT_ = C_LONG_LONG;
    static final jdk.incubator.foreign.MemoryLayout __darwin_x86_thread_state64$__rbx$LAYOUT() { return __darwin_x86_thread_state64$__rbx$LAYOUT_; }

    static final VarHandle __darwin_x86_thread_state64$__rbx$VH_ = __darwin_x86_thread_state64$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("__rbx"));
    static final java.lang.invoke.VarHandle __darwin_x86_thread_state64$__rbx$VH() { return __darwin_x86_thread_state64$__rbx$VH_; }

    static final MemoryLayout __darwin_x86_thread_state64$__rcx$LAYOUT_ = C_LONG_LONG;
    static final jdk.incubator.foreign.MemoryLayout __darwin_x86_thread_state64$__rcx$LAYOUT() { return __darwin_x86_thread_state64$__rcx$LAYOUT_; }

    static final VarHandle __darwin_x86_thread_state64$__rcx$VH_ = __darwin_x86_thread_state64$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("__rcx"));
    static final java.lang.invoke.VarHandle __darwin_x86_thread_state64$__rcx$VH() { return __darwin_x86_thread_state64$__rcx$VH_; }

    static final MemoryLayout __darwin_x86_thread_state64$__rdx$LAYOUT_ = C_LONG_LONG;
    static final jdk.incubator.foreign.MemoryLayout __darwin_x86_thread_state64$__rdx$LAYOUT() { return __darwin_x86_thread_state64$__rdx$LAYOUT_; }

    static final VarHandle __darwin_x86_thread_state64$__rdx$VH_ = __darwin_x86_thread_state64$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("__rdx"));
    static final java.lang.invoke.VarHandle __darwin_x86_thread_state64$__rdx$VH() { return __darwin_x86_thread_state64$__rdx$VH_; }

    static final MemoryLayout __darwin_x86_thread_state64$__rdi$LAYOUT_ = C_LONG_LONG;
    static final jdk.incubator.foreign.MemoryLayout __darwin_x86_thread_state64$__rdi$LAYOUT() { return __darwin_x86_thread_state64$__rdi$LAYOUT_; }

    static final VarHandle __darwin_x86_thread_state64$__rdi$VH_ = __darwin_x86_thread_state64$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("__rdi"));
    static final java.lang.invoke.VarHandle __darwin_x86_thread_state64$__rdi$VH() { return __darwin_x86_thread_state64$__rdi$VH_; }

    static final MemoryLayout __darwin_x86_thread_state64$__rsi$LAYOUT_ = C_LONG_LONG;
    static final jdk.incubator.foreign.MemoryLayout __darwin_x86_thread_state64$__rsi$LAYOUT() { return __darwin_x86_thread_state64$__rsi$LAYOUT_; }

    static final VarHandle __darwin_x86_thread_state64$__rsi$VH_ = __darwin_x86_thread_state64$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("__rsi"));
    static final java.lang.invoke.VarHandle __darwin_x86_thread_state64$__rsi$VH() { return __darwin_x86_thread_state64$__rsi$VH_; }

    static final MemoryLayout __darwin_x86_thread_state64$__rbp$LAYOUT_ = C_LONG_LONG;
    static final jdk.incubator.foreign.MemoryLayout __darwin_x86_thread_state64$__rbp$LAYOUT() { return __darwin_x86_thread_state64$__rbp$LAYOUT_; }

    static final VarHandle __darwin_x86_thread_state64$__rbp$VH_ = __darwin_x86_thread_state64$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("__rbp"));
    static final java.lang.invoke.VarHandle __darwin_x86_thread_state64$__rbp$VH() { return __darwin_x86_thread_state64$__rbp$VH_; }

    static final MemoryLayout __darwin_x86_thread_state64$__rsp$LAYOUT_ = C_LONG_LONG;
    static final jdk.incubator.foreign.MemoryLayout __darwin_x86_thread_state64$__rsp$LAYOUT() { return __darwin_x86_thread_state64$__rsp$LAYOUT_; }

    static final VarHandle __darwin_x86_thread_state64$__rsp$VH_ = __darwin_x86_thread_state64$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("__rsp"));
    static final java.lang.invoke.VarHandle __darwin_x86_thread_state64$__rsp$VH() { return __darwin_x86_thread_state64$__rsp$VH_; }

    static final MemoryLayout __darwin_x86_thread_state64$__r8$LAYOUT_ = C_LONG_LONG;
    static final jdk.incubator.foreign.MemoryLayout __darwin_x86_thread_state64$__r8$LAYOUT() { return __darwin_x86_thread_state64$__r8$LAYOUT_; }

    static final VarHandle __darwin_x86_thread_state64$__r8$VH_ = __darwin_x86_thread_state64$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("__r8"));
    static final java.lang.invoke.VarHandle __darwin_x86_thread_state64$__r8$VH() { return __darwin_x86_thread_state64$__r8$VH_; }

    static final MemoryLayout __darwin_x86_thread_state64$__r9$LAYOUT_ = C_LONG_LONG;
    static final jdk.incubator.foreign.MemoryLayout __darwin_x86_thread_state64$__r9$LAYOUT() { return __darwin_x86_thread_state64$__r9$LAYOUT_; }

    static final VarHandle __darwin_x86_thread_state64$__r9$VH_ = __darwin_x86_thread_state64$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("__r9"));
    static final java.lang.invoke.VarHandle __darwin_x86_thread_state64$__r9$VH() { return __darwin_x86_thread_state64$__r9$VH_; }

    static final MemoryLayout __darwin_x86_thread_state64$__r10$LAYOUT_ = C_LONG_LONG;
    static final jdk.incubator.foreign.MemoryLayout __darwin_x86_thread_state64$__r10$LAYOUT() { return __darwin_x86_thread_state64$__r10$LAYOUT_; }

    static final VarHandle __darwin_x86_thread_state64$__r10$VH_ = __darwin_x86_thread_state64$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("__r10"));
    static final java.lang.invoke.VarHandle __darwin_x86_thread_state64$__r10$VH() { return __darwin_x86_thread_state64$__r10$VH_; }

    static final MemoryLayout __darwin_x86_thread_state64$__r11$LAYOUT_ = C_LONG_LONG;
    static final jdk.incubator.foreign.MemoryLayout __darwin_x86_thread_state64$__r11$LAYOUT() { return __darwin_x86_thread_state64$__r11$LAYOUT_; }

    static final VarHandle __darwin_x86_thread_state64$__r11$VH_ = __darwin_x86_thread_state64$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("__r11"));
    static final java.lang.invoke.VarHandle __darwin_x86_thread_state64$__r11$VH() { return __darwin_x86_thread_state64$__r11$VH_; }

    static final MemoryLayout __darwin_x86_thread_state64$__r12$LAYOUT_ = C_LONG_LONG;
    static final jdk.incubator.foreign.MemoryLayout __darwin_x86_thread_state64$__r12$LAYOUT() { return __darwin_x86_thread_state64$__r12$LAYOUT_; }

    static final VarHandle __darwin_x86_thread_state64$__r12$VH_ = __darwin_x86_thread_state64$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("__r12"));
    static final java.lang.invoke.VarHandle __darwin_x86_thread_state64$__r12$VH() { return __darwin_x86_thread_state64$__r12$VH_; }

    static final MemoryLayout __darwin_x86_thread_state64$__r13$LAYOUT_ = C_LONG_LONG;
    static final jdk.incubator.foreign.MemoryLayout __darwin_x86_thread_state64$__r13$LAYOUT() { return __darwin_x86_thread_state64$__r13$LAYOUT_; }

    static final VarHandle __darwin_x86_thread_state64$__r13$VH_ = __darwin_x86_thread_state64$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("__r13"));
    static final java.lang.invoke.VarHandle __darwin_x86_thread_state64$__r13$VH() { return __darwin_x86_thread_state64$__r13$VH_; }

    static final MemoryLayout __darwin_x86_thread_state64$__r14$LAYOUT_ = C_LONG_LONG;
    static final jdk.incubator.foreign.MemoryLayout __darwin_x86_thread_state64$__r14$LAYOUT() { return __darwin_x86_thread_state64$__r14$LAYOUT_; }

    static final VarHandle __darwin_x86_thread_state64$__r14$VH_ = __darwin_x86_thread_state64$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("__r14"));
    static final java.lang.invoke.VarHandle __darwin_x86_thread_state64$__r14$VH() { return __darwin_x86_thread_state64$__r14$VH_; }

    static final MemoryLayout __darwin_x86_thread_state64$__r15$LAYOUT_ = C_LONG_LONG;
    static final jdk.incubator.foreign.MemoryLayout __darwin_x86_thread_state64$__r15$LAYOUT() { return __darwin_x86_thread_state64$__r15$LAYOUT_; }

    static final VarHandle __darwin_x86_thread_state64$__r15$VH_ = __darwin_x86_thread_state64$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("__r15"));
    static final java.lang.invoke.VarHandle __darwin_x86_thread_state64$__r15$VH() { return __darwin_x86_thread_state64$__r15$VH_; }

    static final MemoryLayout __darwin_x86_thread_state64$__rip$LAYOUT_ = C_LONG_LONG;
    static final jdk.incubator.foreign.MemoryLayout __darwin_x86_thread_state64$__rip$LAYOUT() { return __darwin_x86_thread_state64$__rip$LAYOUT_; }

    static final VarHandle __darwin_x86_thread_state64$__rip$VH_ = __darwin_x86_thread_state64$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("__rip"));
    static final java.lang.invoke.VarHandle __darwin_x86_thread_state64$__rip$VH() { return __darwin_x86_thread_state64$__rip$VH_; }

    static final MemoryLayout __darwin_x86_thread_state64$__rflags$LAYOUT_ = C_LONG_LONG;
    static final jdk.incubator.foreign.MemoryLayout __darwin_x86_thread_state64$__rflags$LAYOUT() { return __darwin_x86_thread_state64$__rflags$LAYOUT_; }

    static final VarHandle __darwin_x86_thread_state64$__rflags$VH_ = __darwin_x86_thread_state64$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("__rflags"));
    static final java.lang.invoke.VarHandle __darwin_x86_thread_state64$__rflags$VH() { return __darwin_x86_thread_state64$__rflags$VH_; }

    static final MemoryLayout __darwin_x86_thread_state64$__cs$LAYOUT_ = C_LONG_LONG;
    static final jdk.incubator.foreign.MemoryLayout __darwin_x86_thread_state64$__cs$LAYOUT() { return __darwin_x86_thread_state64$__cs$LAYOUT_; }

    static final VarHandle __darwin_x86_thread_state64$__cs$VH_ = __darwin_x86_thread_state64$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("__cs"));
    static final java.lang.invoke.VarHandle __darwin_x86_thread_state64$__cs$VH() { return __darwin_x86_thread_state64$__cs$VH_; }

    static final MemoryLayout __darwin_x86_thread_state64$__fs$LAYOUT_ = C_LONG_LONG;
    static final jdk.incubator.foreign.MemoryLayout __darwin_x86_thread_state64$__fs$LAYOUT() { return __darwin_x86_thread_state64$__fs$LAYOUT_; }

    static final VarHandle __darwin_x86_thread_state64$__fs$VH_ = __darwin_x86_thread_state64$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("__fs"));
    static final java.lang.invoke.VarHandle __darwin_x86_thread_state64$__fs$VH() { return __darwin_x86_thread_state64$__fs$VH_; }

    static final MemoryLayout __darwin_x86_thread_state64$__gs$LAYOUT_ = C_LONG_LONG;
    static final jdk.incubator.foreign.MemoryLayout __darwin_x86_thread_state64$__gs$LAYOUT() { return __darwin_x86_thread_state64$__gs$LAYOUT_; }

    static final VarHandle __darwin_x86_thread_state64$__gs$VH_ = __darwin_x86_thread_state64$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("__gs"));
    static final java.lang.invoke.VarHandle __darwin_x86_thread_state64$__gs$VH() { return __darwin_x86_thread_state64$__gs$VH_; }

    static final MemoryLayout __darwin_x86_thread_full_state64$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofStruct(
            C_LONG_LONG.withName("__rax"),
            C_LONG_LONG.withName("__rbx"),
            C_LONG_LONG.withName("__rcx"),
            C_LONG_LONG.withName("__rdx"),
            C_LONG_LONG.withName("__rdi"),
            C_LONG_LONG.withName("__rsi"),
            C_LONG_LONG.withName("__rbp"),
            C_LONG_LONG.withName("__rsp"),
            C_LONG_LONG.withName("__r8"),
            C_LONG_LONG.withName("__r9"),
            C_LONG_LONG.withName("__r10"),
            C_LONG_LONG.withName("__r11"),
            C_LONG_LONG.withName("__r12"),
            C_LONG_LONG.withName("__r13"),
            C_LONG_LONG.withName("__r14"),
            C_LONG_LONG.withName("__r15"),
            C_LONG_LONG.withName("__rip"),
            C_LONG_LONG.withName("__rflags"),
            C_LONG_LONG.withName("__cs"),
            C_LONG_LONG.withName("__fs"),
            C_LONG_LONG.withName("__gs")
        ).withName("__ss64"),
        C_LONG_LONG.withName("__ds"),
        C_LONG_LONG.withName("__es"),
        C_LONG_LONG.withName("__ss"),
        C_LONG_LONG.withName("__gsbase")
    ).withName("__darwin_x86_thread_full_state64");
    static final jdk.incubator.foreign.MemoryLayout __darwin_x86_thread_full_state64$struct$LAYOUT() { return __darwin_x86_thread_full_state64$struct$LAYOUT_; }

    static final MemoryLayout __darwin_x86_thread_full_state64$__ds$LAYOUT_ = C_LONG_LONG;
    static final jdk.incubator.foreign.MemoryLayout __darwin_x86_thread_full_state64$__ds$LAYOUT() { return __darwin_x86_thread_full_state64$__ds$LAYOUT_; }

    static final VarHandle __darwin_x86_thread_full_state64$__ds$VH_ = __darwin_x86_thread_full_state64$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("__ds"));
    static final java.lang.invoke.VarHandle __darwin_x86_thread_full_state64$__ds$VH() { return __darwin_x86_thread_full_state64$__ds$VH_; }

    static final MemoryLayout __darwin_x86_thread_full_state64$__es$LAYOUT_ = C_LONG_LONG;
    static final jdk.incubator.foreign.MemoryLayout __darwin_x86_thread_full_state64$__es$LAYOUT() { return __darwin_x86_thread_full_state64$__es$LAYOUT_; }

    static final VarHandle __darwin_x86_thread_full_state64$__es$VH_ = __darwin_x86_thread_full_state64$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("__es"));
    static final java.lang.invoke.VarHandle __darwin_x86_thread_full_state64$__es$VH() { return __darwin_x86_thread_full_state64$__es$VH_; }

    static final MemoryLayout __darwin_x86_thread_full_state64$__ss$LAYOUT_ = C_LONG_LONG;
    static final jdk.incubator.foreign.MemoryLayout __darwin_x86_thread_full_state64$__ss$LAYOUT() { return __darwin_x86_thread_full_state64$__ss$LAYOUT_; }

    static final VarHandle __darwin_x86_thread_full_state64$__ss$VH_ = __darwin_x86_thread_full_state64$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("__ss"));
    static final java.lang.invoke.VarHandle __darwin_x86_thread_full_state64$__ss$VH() { return __darwin_x86_thread_full_state64$__ss$VH_; }

    static final MemoryLayout __darwin_x86_thread_full_state64$__gsbase$LAYOUT_ = C_LONG_LONG;
    static final jdk.incubator.foreign.MemoryLayout __darwin_x86_thread_full_state64$__gsbase$LAYOUT() { return __darwin_x86_thread_full_state64$__gsbase$LAYOUT_; }

    static final VarHandle __darwin_x86_thread_full_state64$__gsbase$VH_ = __darwin_x86_thread_full_state64$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("__gsbase"));
    static final java.lang.invoke.VarHandle __darwin_x86_thread_full_state64$__gsbase$VH() { return __darwin_x86_thread_full_state64$__gsbase$VH_; }

    static final MemoryLayout __darwin_x86_float_state64$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofSequence(2, C_INT).withName("__fpu_reserved"),
        MemoryLayout.ofStruct(
            C_SHORT
        ).withName("__fpu_fcw"),
        MemoryLayout.ofStruct(
            C_SHORT
        ).withName("__fpu_fsw"),
        C_CHAR.withName("__fpu_ftw"),
        C_CHAR.withName("__fpu_rsrv1"),
        C_SHORT.withName("__fpu_fop"),
        C_INT.withName("__fpu_ip"),
        C_SHORT.withName("__fpu_cs"),
        C_SHORT.withName("__fpu_rsrv2"),
        C_INT.withName("__fpu_dp"),
        C_SHORT.withName("__fpu_ds"),
        C_SHORT.withName("__fpu_rsrv3"),
        C_INT.withName("__fpu_mxcsr"),
        C_INT.withName("__fpu_mxcsrmask"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(10, C_CHAR).withName("__mmst_reg"),
            MemoryLayout.ofSequence(6, C_CHAR).withName("__mmst_rsrv")
        ).withName("__fpu_stmm0"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(10, C_CHAR).withName("__mmst_reg"),
            MemoryLayout.ofSequence(6, C_CHAR).withName("__mmst_rsrv")
        ).withName("__fpu_stmm1"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(10, C_CHAR).withName("__mmst_reg"),
            MemoryLayout.ofSequence(6, C_CHAR).withName("__mmst_rsrv")
        ).withName("__fpu_stmm2"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(10, C_CHAR).withName("__mmst_reg"),
            MemoryLayout.ofSequence(6, C_CHAR).withName("__mmst_rsrv")
        ).withName("__fpu_stmm3"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(10, C_CHAR).withName("__mmst_reg"),
            MemoryLayout.ofSequence(6, C_CHAR).withName("__mmst_rsrv")
        ).withName("__fpu_stmm4"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(10, C_CHAR).withName("__mmst_reg"),
            MemoryLayout.ofSequence(6, C_CHAR).withName("__mmst_rsrv")
        ).withName("__fpu_stmm5"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(10, C_CHAR).withName("__mmst_reg"),
            MemoryLayout.ofSequence(6, C_CHAR).withName("__mmst_rsrv")
        ).withName("__fpu_stmm6"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(10, C_CHAR).withName("__mmst_reg"),
            MemoryLayout.ofSequence(6, C_CHAR).withName("__mmst_rsrv")
        ).withName("__fpu_stmm7"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
        ).withName("__fpu_xmm0"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
        ).withName("__fpu_xmm1"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
        ).withName("__fpu_xmm2"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
        ).withName("__fpu_xmm3"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
        ).withName("__fpu_xmm4"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
        ).withName("__fpu_xmm5"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
        ).withName("__fpu_xmm6"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
        ).withName("__fpu_xmm7"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
        ).withName("__fpu_xmm8"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
        ).withName("__fpu_xmm9"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
        ).withName("__fpu_xmm10"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
        ).withName("__fpu_xmm11"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
        ).withName("__fpu_xmm12"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
        ).withName("__fpu_xmm13"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
        ).withName("__fpu_xmm14"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
        ).withName("__fpu_xmm15"),
        MemoryLayout.ofSequence(96, C_CHAR).withName("__fpu_rsrv4"),
        C_INT.withName("__fpu_reserved1")
    ).withName("__darwin_x86_float_state64");
    static final jdk.incubator.foreign.MemoryLayout __darwin_x86_float_state64$struct$LAYOUT() { return __darwin_x86_float_state64$struct$LAYOUT_; }

    static final MemoryLayout __darwin_x86_float_state64$__fpu_ftw$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout __darwin_x86_float_state64$__fpu_ftw$LAYOUT() { return __darwin_x86_float_state64$__fpu_ftw$LAYOUT_; }

    static final VarHandle __darwin_x86_float_state64$__fpu_ftw$VH_ = __darwin_x86_float_state64$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("__fpu_ftw"));
    static final java.lang.invoke.VarHandle __darwin_x86_float_state64$__fpu_ftw$VH() { return __darwin_x86_float_state64$__fpu_ftw$VH_; }

    static final MemoryLayout __darwin_x86_float_state64$__fpu_rsrv1$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout __darwin_x86_float_state64$__fpu_rsrv1$LAYOUT() { return __darwin_x86_float_state64$__fpu_rsrv1$LAYOUT_; }

    static final VarHandle __darwin_x86_float_state64$__fpu_rsrv1$VH_ = __darwin_x86_float_state64$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("__fpu_rsrv1"));
    static final java.lang.invoke.VarHandle __darwin_x86_float_state64$__fpu_rsrv1$VH() { return __darwin_x86_float_state64$__fpu_rsrv1$VH_; }

    static final MemoryLayout __darwin_x86_float_state64$__fpu_fop$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout __darwin_x86_float_state64$__fpu_fop$LAYOUT() { return __darwin_x86_float_state64$__fpu_fop$LAYOUT_; }

    static final VarHandle __darwin_x86_float_state64$__fpu_fop$VH_ = __darwin_x86_float_state64$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("__fpu_fop"));
    static final java.lang.invoke.VarHandle __darwin_x86_float_state64$__fpu_fop$VH() { return __darwin_x86_float_state64$__fpu_fop$VH_; }

    static final MemoryLayout __darwin_x86_float_state64$__fpu_ip$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout __darwin_x86_float_state64$__fpu_ip$LAYOUT() { return __darwin_x86_float_state64$__fpu_ip$LAYOUT_; }

    static final VarHandle __darwin_x86_float_state64$__fpu_ip$VH_ = __darwin_x86_float_state64$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("__fpu_ip"));
    static final java.lang.invoke.VarHandle __darwin_x86_float_state64$__fpu_ip$VH() { return __darwin_x86_float_state64$__fpu_ip$VH_; }

    static final MemoryLayout __darwin_x86_float_state64$__fpu_cs$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout __darwin_x86_float_state64$__fpu_cs$LAYOUT() { return __darwin_x86_float_state64$__fpu_cs$LAYOUT_; }

    static final VarHandle __darwin_x86_float_state64$__fpu_cs$VH_ = __darwin_x86_float_state64$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("__fpu_cs"));
    static final java.lang.invoke.VarHandle __darwin_x86_float_state64$__fpu_cs$VH() { return __darwin_x86_float_state64$__fpu_cs$VH_; }

    static final MemoryLayout __darwin_x86_float_state64$__fpu_rsrv2$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout __darwin_x86_float_state64$__fpu_rsrv2$LAYOUT() { return __darwin_x86_float_state64$__fpu_rsrv2$LAYOUT_; }

    static final VarHandle __darwin_x86_float_state64$__fpu_rsrv2$VH_ = __darwin_x86_float_state64$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("__fpu_rsrv2"));
    static final java.lang.invoke.VarHandle __darwin_x86_float_state64$__fpu_rsrv2$VH() { return __darwin_x86_float_state64$__fpu_rsrv2$VH_; }

    static final MemoryLayout __darwin_x86_float_state64$__fpu_dp$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout __darwin_x86_float_state64$__fpu_dp$LAYOUT() { return __darwin_x86_float_state64$__fpu_dp$LAYOUT_; }

    static final VarHandle __darwin_x86_float_state64$__fpu_dp$VH_ = __darwin_x86_float_state64$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("__fpu_dp"));
    static final java.lang.invoke.VarHandle __darwin_x86_float_state64$__fpu_dp$VH() { return __darwin_x86_float_state64$__fpu_dp$VH_; }

    static final MemoryLayout __darwin_x86_float_state64$__fpu_ds$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout __darwin_x86_float_state64$__fpu_ds$LAYOUT() { return __darwin_x86_float_state64$__fpu_ds$LAYOUT_; }

    static final VarHandle __darwin_x86_float_state64$__fpu_ds$VH_ = __darwin_x86_float_state64$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("__fpu_ds"));
    static final java.lang.invoke.VarHandle __darwin_x86_float_state64$__fpu_ds$VH() { return __darwin_x86_float_state64$__fpu_ds$VH_; }

    static final MemoryLayout __darwin_x86_float_state64$__fpu_rsrv3$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout __darwin_x86_float_state64$__fpu_rsrv3$LAYOUT() { return __darwin_x86_float_state64$__fpu_rsrv3$LAYOUT_; }

    static final VarHandle __darwin_x86_float_state64$__fpu_rsrv3$VH_ = __darwin_x86_float_state64$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("__fpu_rsrv3"));
    static final java.lang.invoke.VarHandle __darwin_x86_float_state64$__fpu_rsrv3$VH() { return __darwin_x86_float_state64$__fpu_rsrv3$VH_; }

    static final MemoryLayout __darwin_x86_float_state64$__fpu_mxcsr$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout __darwin_x86_float_state64$__fpu_mxcsr$LAYOUT() { return __darwin_x86_float_state64$__fpu_mxcsr$LAYOUT_; }

    static final VarHandle __darwin_x86_float_state64$__fpu_mxcsr$VH_ = __darwin_x86_float_state64$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("__fpu_mxcsr"));
    static final java.lang.invoke.VarHandle __darwin_x86_float_state64$__fpu_mxcsr$VH() { return __darwin_x86_float_state64$__fpu_mxcsr$VH_; }

    static final MemoryLayout __darwin_x86_float_state64$__fpu_mxcsrmask$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout __darwin_x86_float_state64$__fpu_mxcsrmask$LAYOUT() { return __darwin_x86_float_state64$__fpu_mxcsrmask$LAYOUT_; }

    static final VarHandle __darwin_x86_float_state64$__fpu_mxcsrmask$VH_ = __darwin_x86_float_state64$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("__fpu_mxcsrmask"));
    static final java.lang.invoke.VarHandle __darwin_x86_float_state64$__fpu_mxcsrmask$VH() { return __darwin_x86_float_state64$__fpu_mxcsrmask$VH_; }

    static final MemoryLayout __darwin_x86_float_state64$__fpu_reserved1$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout __darwin_x86_float_state64$__fpu_reserved1$LAYOUT() { return __darwin_x86_float_state64$__fpu_reserved1$LAYOUT_; }

    static final VarHandle __darwin_x86_float_state64$__fpu_reserved1$VH_ = __darwin_x86_float_state64$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("__fpu_reserved1"));
    static final java.lang.invoke.VarHandle __darwin_x86_float_state64$__fpu_reserved1$VH() { return __darwin_x86_float_state64$__fpu_reserved1$VH_; }

    static final MemoryLayout __darwin_x86_avx_state64$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofSequence(2, C_INT).withName("__fpu_reserved"),
        MemoryLayout.ofStruct(
            C_SHORT
        ).withName("__fpu_fcw"),
        MemoryLayout.ofStruct(
            C_SHORT
        ).withName("__fpu_fsw"),
        C_CHAR.withName("__fpu_ftw"),
        C_CHAR.withName("__fpu_rsrv1"),
        C_SHORT.withName("__fpu_fop"),
        C_INT.withName("__fpu_ip"),
        C_SHORT.withName("__fpu_cs"),
        C_SHORT.withName("__fpu_rsrv2"),
        C_INT.withName("__fpu_dp"),
        C_SHORT.withName("__fpu_ds"),
        C_SHORT.withName("__fpu_rsrv3"),
        C_INT.withName("__fpu_mxcsr"),
        C_INT.withName("__fpu_mxcsrmask"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(10, C_CHAR).withName("__mmst_reg"),
            MemoryLayout.ofSequence(6, C_CHAR).withName("__mmst_rsrv")
        ).withName("__fpu_stmm0"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(10, C_CHAR).withName("__mmst_reg"),
            MemoryLayout.ofSequence(6, C_CHAR).withName("__mmst_rsrv")
        ).withName("__fpu_stmm1"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(10, C_CHAR).withName("__mmst_reg"),
            MemoryLayout.ofSequence(6, C_CHAR).withName("__mmst_rsrv")
        ).withName("__fpu_stmm2"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(10, C_CHAR).withName("__mmst_reg"),
            MemoryLayout.ofSequence(6, C_CHAR).withName("__mmst_rsrv")
        ).withName("__fpu_stmm3"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(10, C_CHAR).withName("__mmst_reg"),
            MemoryLayout.ofSequence(6, C_CHAR).withName("__mmst_rsrv")
        ).withName("__fpu_stmm4"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(10, C_CHAR).withName("__mmst_reg"),
            MemoryLayout.ofSequence(6, C_CHAR).withName("__mmst_rsrv")
        ).withName("__fpu_stmm5"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(10, C_CHAR).withName("__mmst_reg"),
            MemoryLayout.ofSequence(6, C_CHAR).withName("__mmst_rsrv")
        ).withName("__fpu_stmm6"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(10, C_CHAR).withName("__mmst_reg"),
            MemoryLayout.ofSequence(6, C_CHAR).withName("__mmst_rsrv")
        ).withName("__fpu_stmm7"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
        ).withName("__fpu_xmm0"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
        ).withName("__fpu_xmm1"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
        ).withName("__fpu_xmm2"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
        ).withName("__fpu_xmm3"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
        ).withName("__fpu_xmm4"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
        ).withName("__fpu_xmm5"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
        ).withName("__fpu_xmm6"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
        ).withName("__fpu_xmm7"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
        ).withName("__fpu_xmm8"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
        ).withName("__fpu_xmm9"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
        ).withName("__fpu_xmm10"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
        ).withName("__fpu_xmm11"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
        ).withName("__fpu_xmm12"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
        ).withName("__fpu_xmm13"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
        ).withName("__fpu_xmm14"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
        ).withName("__fpu_xmm15"),
        MemoryLayout.ofSequence(96, C_CHAR).withName("__fpu_rsrv4"),
        C_INT.withName("__fpu_reserved1"),
        MemoryLayout.ofSequence(64, C_CHAR).withName("__avx_reserved1"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
        ).withName("__fpu_ymmh0"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
        ).withName("__fpu_ymmh1"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
        ).withName("__fpu_ymmh2"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
        ).withName("__fpu_ymmh3"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
        ).withName("__fpu_ymmh4"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
        ).withName("__fpu_ymmh5"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
        ).withName("__fpu_ymmh6"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
        ).withName("__fpu_ymmh7"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
        ).withName("__fpu_ymmh8"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
        ).withName("__fpu_ymmh9"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
        ).withName("__fpu_ymmh10"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
        ).withName("__fpu_ymmh11"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
        ).withName("__fpu_ymmh12"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
        ).withName("__fpu_ymmh13"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
        ).withName("__fpu_ymmh14"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
        ).withName("__fpu_ymmh15")
    ).withName("__darwin_x86_avx_state64");
    static final jdk.incubator.foreign.MemoryLayout __darwin_x86_avx_state64$struct$LAYOUT() { return __darwin_x86_avx_state64$struct$LAYOUT_; }

    static final MemoryLayout __darwin_x86_avx_state64$__fpu_ftw$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout __darwin_x86_avx_state64$__fpu_ftw$LAYOUT() { return __darwin_x86_avx_state64$__fpu_ftw$LAYOUT_; }

    static final VarHandle __darwin_x86_avx_state64$__fpu_ftw$VH_ = __darwin_x86_avx_state64$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("__fpu_ftw"));
    static final java.lang.invoke.VarHandle __darwin_x86_avx_state64$__fpu_ftw$VH() { return __darwin_x86_avx_state64$__fpu_ftw$VH_; }

    static final MemoryLayout __darwin_x86_avx_state64$__fpu_rsrv1$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout __darwin_x86_avx_state64$__fpu_rsrv1$LAYOUT() { return __darwin_x86_avx_state64$__fpu_rsrv1$LAYOUT_; }

    static final VarHandle __darwin_x86_avx_state64$__fpu_rsrv1$VH_ = __darwin_x86_avx_state64$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("__fpu_rsrv1"));
    static final java.lang.invoke.VarHandle __darwin_x86_avx_state64$__fpu_rsrv1$VH() { return __darwin_x86_avx_state64$__fpu_rsrv1$VH_; }

    static final MemoryLayout __darwin_x86_avx_state64$__fpu_fop$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout __darwin_x86_avx_state64$__fpu_fop$LAYOUT() { return __darwin_x86_avx_state64$__fpu_fop$LAYOUT_; }

    static final VarHandle __darwin_x86_avx_state64$__fpu_fop$VH_ = __darwin_x86_avx_state64$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("__fpu_fop"));
    static final java.lang.invoke.VarHandle __darwin_x86_avx_state64$__fpu_fop$VH() { return __darwin_x86_avx_state64$__fpu_fop$VH_; }

    static final MemoryLayout __darwin_x86_avx_state64$__fpu_ip$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout __darwin_x86_avx_state64$__fpu_ip$LAYOUT() { return __darwin_x86_avx_state64$__fpu_ip$LAYOUT_; }

    static final VarHandle __darwin_x86_avx_state64$__fpu_ip$VH_ = __darwin_x86_avx_state64$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("__fpu_ip"));
    static final java.lang.invoke.VarHandle __darwin_x86_avx_state64$__fpu_ip$VH() { return __darwin_x86_avx_state64$__fpu_ip$VH_; }

    static final MemoryLayout __darwin_x86_avx_state64$__fpu_cs$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout __darwin_x86_avx_state64$__fpu_cs$LAYOUT() { return __darwin_x86_avx_state64$__fpu_cs$LAYOUT_; }

    static final VarHandle __darwin_x86_avx_state64$__fpu_cs$VH_ = __darwin_x86_avx_state64$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("__fpu_cs"));
    static final java.lang.invoke.VarHandle __darwin_x86_avx_state64$__fpu_cs$VH() { return __darwin_x86_avx_state64$__fpu_cs$VH_; }

    static final MemoryLayout __darwin_x86_avx_state64$__fpu_rsrv2$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout __darwin_x86_avx_state64$__fpu_rsrv2$LAYOUT() { return __darwin_x86_avx_state64$__fpu_rsrv2$LAYOUT_; }

    static final VarHandle __darwin_x86_avx_state64$__fpu_rsrv2$VH_ = __darwin_x86_avx_state64$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("__fpu_rsrv2"));
    static final java.lang.invoke.VarHandle __darwin_x86_avx_state64$__fpu_rsrv2$VH() { return __darwin_x86_avx_state64$__fpu_rsrv2$VH_; }

    static final MemoryLayout __darwin_x86_avx_state64$__fpu_dp$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout __darwin_x86_avx_state64$__fpu_dp$LAYOUT() { return __darwin_x86_avx_state64$__fpu_dp$LAYOUT_; }

    static final VarHandle __darwin_x86_avx_state64$__fpu_dp$VH_ = __darwin_x86_avx_state64$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("__fpu_dp"));
    static final java.lang.invoke.VarHandle __darwin_x86_avx_state64$__fpu_dp$VH() { return __darwin_x86_avx_state64$__fpu_dp$VH_; }

    static final MemoryLayout __darwin_x86_avx_state64$__fpu_ds$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout __darwin_x86_avx_state64$__fpu_ds$LAYOUT() { return __darwin_x86_avx_state64$__fpu_ds$LAYOUT_; }

    static final VarHandle __darwin_x86_avx_state64$__fpu_ds$VH_ = __darwin_x86_avx_state64$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("__fpu_ds"));
    static final java.lang.invoke.VarHandle __darwin_x86_avx_state64$__fpu_ds$VH() { return __darwin_x86_avx_state64$__fpu_ds$VH_; }

    static final MemoryLayout __darwin_x86_avx_state64$__fpu_rsrv3$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout __darwin_x86_avx_state64$__fpu_rsrv3$LAYOUT() { return __darwin_x86_avx_state64$__fpu_rsrv3$LAYOUT_; }

    static final VarHandle __darwin_x86_avx_state64$__fpu_rsrv3$VH_ = __darwin_x86_avx_state64$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("__fpu_rsrv3"));
    static final java.lang.invoke.VarHandle __darwin_x86_avx_state64$__fpu_rsrv3$VH() { return __darwin_x86_avx_state64$__fpu_rsrv3$VH_; }

    static final MemoryLayout __darwin_x86_avx_state64$__fpu_mxcsr$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout __darwin_x86_avx_state64$__fpu_mxcsr$LAYOUT() { return __darwin_x86_avx_state64$__fpu_mxcsr$LAYOUT_; }

    static final VarHandle __darwin_x86_avx_state64$__fpu_mxcsr$VH_ = __darwin_x86_avx_state64$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("__fpu_mxcsr"));
    static final java.lang.invoke.VarHandle __darwin_x86_avx_state64$__fpu_mxcsr$VH() { return __darwin_x86_avx_state64$__fpu_mxcsr$VH_; }

    static final MemoryLayout __darwin_x86_avx_state64$__fpu_mxcsrmask$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout __darwin_x86_avx_state64$__fpu_mxcsrmask$LAYOUT() { return __darwin_x86_avx_state64$__fpu_mxcsrmask$LAYOUT_; }

    static final VarHandle __darwin_x86_avx_state64$__fpu_mxcsrmask$VH_ = __darwin_x86_avx_state64$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("__fpu_mxcsrmask"));
    static final java.lang.invoke.VarHandle __darwin_x86_avx_state64$__fpu_mxcsrmask$VH() { return __darwin_x86_avx_state64$__fpu_mxcsrmask$VH_; }

    static final MemoryLayout __darwin_x86_avx_state64$__fpu_reserved1$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout __darwin_x86_avx_state64$__fpu_reserved1$LAYOUT() { return __darwin_x86_avx_state64$__fpu_reserved1$LAYOUT_; }

    static final VarHandle __darwin_x86_avx_state64$__fpu_reserved1$VH_ = __darwin_x86_avx_state64$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("__fpu_reserved1"));
    static final java.lang.invoke.VarHandle __darwin_x86_avx_state64$__fpu_reserved1$VH() { return __darwin_x86_avx_state64$__fpu_reserved1$VH_; }

    static final MemoryLayout __darwin_x86_avx512_state64$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofSequence(2, C_INT).withName("__fpu_reserved"),
        MemoryLayout.ofStruct(
            C_SHORT
        ).withName("__fpu_fcw"),
        MemoryLayout.ofStruct(
            C_SHORT
        ).withName("__fpu_fsw"),
        C_CHAR.withName("__fpu_ftw"),
        C_CHAR.withName("__fpu_rsrv1"),
        C_SHORT.withName("__fpu_fop"),
        C_INT.withName("__fpu_ip"),
        C_SHORT.withName("__fpu_cs"),
        C_SHORT.withName("__fpu_rsrv2"),
        C_INT.withName("__fpu_dp"),
        C_SHORT.withName("__fpu_ds"),
        C_SHORT.withName("__fpu_rsrv3"),
        C_INT.withName("__fpu_mxcsr"),
        C_INT.withName("__fpu_mxcsrmask"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(10, C_CHAR).withName("__mmst_reg"),
            MemoryLayout.ofSequence(6, C_CHAR).withName("__mmst_rsrv")
        ).withName("__fpu_stmm0"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(10, C_CHAR).withName("__mmst_reg"),
            MemoryLayout.ofSequence(6, C_CHAR).withName("__mmst_rsrv")
        ).withName("__fpu_stmm1"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(10, C_CHAR).withName("__mmst_reg"),
            MemoryLayout.ofSequence(6, C_CHAR).withName("__mmst_rsrv")
        ).withName("__fpu_stmm2"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(10, C_CHAR).withName("__mmst_reg"),
            MemoryLayout.ofSequence(6, C_CHAR).withName("__mmst_rsrv")
        ).withName("__fpu_stmm3"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(10, C_CHAR).withName("__mmst_reg"),
            MemoryLayout.ofSequence(6, C_CHAR).withName("__mmst_rsrv")
        ).withName("__fpu_stmm4"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(10, C_CHAR).withName("__mmst_reg"),
            MemoryLayout.ofSequence(6, C_CHAR).withName("__mmst_rsrv")
        ).withName("__fpu_stmm5"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(10, C_CHAR).withName("__mmst_reg"),
            MemoryLayout.ofSequence(6, C_CHAR).withName("__mmst_rsrv")
        ).withName("__fpu_stmm6"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(10, C_CHAR).withName("__mmst_reg"),
            MemoryLayout.ofSequence(6, C_CHAR).withName("__mmst_rsrv")
        ).withName("__fpu_stmm7"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
        ).withName("__fpu_xmm0"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
        ).withName("__fpu_xmm1"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
        ).withName("__fpu_xmm2"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
        ).withName("__fpu_xmm3"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
        ).withName("__fpu_xmm4"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
        ).withName("__fpu_xmm5"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
        ).withName("__fpu_xmm6"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
        ).withName("__fpu_xmm7"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
        ).withName("__fpu_xmm8"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
        ).withName("__fpu_xmm9"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
        ).withName("__fpu_xmm10"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
        ).withName("__fpu_xmm11"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
        ).withName("__fpu_xmm12"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
        ).withName("__fpu_xmm13"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
        ).withName("__fpu_xmm14"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
        ).withName("__fpu_xmm15"),
        MemoryLayout.ofSequence(96, C_CHAR).withName("__fpu_rsrv4"),
        C_INT.withName("__fpu_reserved1"),
        MemoryLayout.ofSequence(64, C_CHAR).withName("__avx_reserved1"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
        ).withName("__fpu_ymmh0"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
        ).withName("__fpu_ymmh1"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
        ).withName("__fpu_ymmh2"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
        ).withName("__fpu_ymmh3"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
        ).withName("__fpu_ymmh4"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
        ).withName("__fpu_ymmh5"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
        ).withName("__fpu_ymmh6"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
        ).withName("__fpu_ymmh7"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
        ).withName("__fpu_ymmh8"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
        ).withName("__fpu_ymmh9"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
        ).withName("__fpu_ymmh10"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
        ).withName("__fpu_ymmh11"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
        ).withName("__fpu_ymmh12"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
        ).withName("__fpu_ymmh13"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
        ).withName("__fpu_ymmh14"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
        ).withName("__fpu_ymmh15"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(8, C_CHAR).withName("__opmask_reg")
        ).withName("__fpu_k0"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(8, C_CHAR).withName("__opmask_reg")
        ).withName("__fpu_k1"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(8, C_CHAR).withName("__opmask_reg")
        ).withName("__fpu_k2"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(8, C_CHAR).withName("__opmask_reg")
        ).withName("__fpu_k3"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(8, C_CHAR).withName("__opmask_reg")
        ).withName("__fpu_k4"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(8, C_CHAR).withName("__opmask_reg")
        ).withName("__fpu_k5"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(8, C_CHAR).withName("__opmask_reg")
        ).withName("__fpu_k6"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(8, C_CHAR).withName("__opmask_reg")
        ).withName("__fpu_k7"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(32, C_CHAR).withName("__ymm_reg")
        ).withName("__fpu_zmmh0"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(32, C_CHAR).withName("__ymm_reg")
        ).withName("__fpu_zmmh1"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(32, C_CHAR).withName("__ymm_reg")
        ).withName("__fpu_zmmh2"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(32, C_CHAR).withName("__ymm_reg")
        ).withName("__fpu_zmmh3"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(32, C_CHAR).withName("__ymm_reg")
        ).withName("__fpu_zmmh4"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(32, C_CHAR).withName("__ymm_reg")
        ).withName("__fpu_zmmh5"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(32, C_CHAR).withName("__ymm_reg")
        ).withName("__fpu_zmmh6"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(32, C_CHAR).withName("__ymm_reg")
        ).withName("__fpu_zmmh7"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(32, C_CHAR).withName("__ymm_reg")
        ).withName("__fpu_zmmh8"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(32, C_CHAR).withName("__ymm_reg")
        ).withName("__fpu_zmmh9"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(32, C_CHAR).withName("__ymm_reg")
        ).withName("__fpu_zmmh10"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(32, C_CHAR).withName("__ymm_reg")
        ).withName("__fpu_zmmh11"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(32, C_CHAR).withName("__ymm_reg")
        ).withName("__fpu_zmmh12"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(32, C_CHAR).withName("__ymm_reg")
        ).withName("__fpu_zmmh13"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(32, C_CHAR).withName("__ymm_reg")
        ).withName("__fpu_zmmh14"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(32, C_CHAR).withName("__ymm_reg")
        ).withName("__fpu_zmmh15"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(64, C_CHAR).withName("__zmm_reg")
        ).withName("__fpu_zmm16"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(64, C_CHAR).withName("__zmm_reg")
        ).withName("__fpu_zmm17"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(64, C_CHAR).withName("__zmm_reg")
        ).withName("__fpu_zmm18"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(64, C_CHAR).withName("__zmm_reg")
        ).withName("__fpu_zmm19"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(64, C_CHAR).withName("__zmm_reg")
        ).withName("__fpu_zmm20"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(64, C_CHAR).withName("__zmm_reg")
        ).withName("__fpu_zmm21"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(64, C_CHAR).withName("__zmm_reg")
        ).withName("__fpu_zmm22"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(64, C_CHAR).withName("__zmm_reg")
        ).withName("__fpu_zmm23"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(64, C_CHAR).withName("__zmm_reg")
        ).withName("__fpu_zmm24"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(64, C_CHAR).withName("__zmm_reg")
        ).withName("__fpu_zmm25"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(64, C_CHAR).withName("__zmm_reg")
        ).withName("__fpu_zmm26"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(64, C_CHAR).withName("__zmm_reg")
        ).withName("__fpu_zmm27"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(64, C_CHAR).withName("__zmm_reg")
        ).withName("__fpu_zmm28"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(64, C_CHAR).withName("__zmm_reg")
        ).withName("__fpu_zmm29"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(64, C_CHAR).withName("__zmm_reg")
        ).withName("__fpu_zmm30"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(64, C_CHAR).withName("__zmm_reg")
        ).withName("__fpu_zmm31")
    ).withName("__darwin_x86_avx512_state64");
    static final jdk.incubator.foreign.MemoryLayout __darwin_x86_avx512_state64$struct$LAYOUT() { return __darwin_x86_avx512_state64$struct$LAYOUT_; }

    static final MemoryLayout __darwin_x86_avx512_state64$__fpu_ftw$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout __darwin_x86_avx512_state64$__fpu_ftw$LAYOUT() { return __darwin_x86_avx512_state64$__fpu_ftw$LAYOUT_; }

    static final VarHandle __darwin_x86_avx512_state64$__fpu_ftw$VH_ = __darwin_x86_avx512_state64$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("__fpu_ftw"));
    static final java.lang.invoke.VarHandle __darwin_x86_avx512_state64$__fpu_ftw$VH() { return __darwin_x86_avx512_state64$__fpu_ftw$VH_; }

    static final MemoryLayout __darwin_x86_avx512_state64$__fpu_rsrv1$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout __darwin_x86_avx512_state64$__fpu_rsrv1$LAYOUT() { return __darwin_x86_avx512_state64$__fpu_rsrv1$LAYOUT_; }

    static final VarHandle __darwin_x86_avx512_state64$__fpu_rsrv1$VH_ = __darwin_x86_avx512_state64$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("__fpu_rsrv1"));
    static final java.lang.invoke.VarHandle __darwin_x86_avx512_state64$__fpu_rsrv1$VH() { return __darwin_x86_avx512_state64$__fpu_rsrv1$VH_; }

    static final MemoryLayout __darwin_x86_avx512_state64$__fpu_fop$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout __darwin_x86_avx512_state64$__fpu_fop$LAYOUT() { return __darwin_x86_avx512_state64$__fpu_fop$LAYOUT_; }

    static final VarHandle __darwin_x86_avx512_state64$__fpu_fop$VH_ = __darwin_x86_avx512_state64$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("__fpu_fop"));
    static final java.lang.invoke.VarHandle __darwin_x86_avx512_state64$__fpu_fop$VH() { return __darwin_x86_avx512_state64$__fpu_fop$VH_; }

    static final MemoryLayout __darwin_x86_avx512_state64$__fpu_ip$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout __darwin_x86_avx512_state64$__fpu_ip$LAYOUT() { return __darwin_x86_avx512_state64$__fpu_ip$LAYOUT_; }

    static final VarHandle __darwin_x86_avx512_state64$__fpu_ip$VH_ = __darwin_x86_avx512_state64$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("__fpu_ip"));
    static final java.lang.invoke.VarHandle __darwin_x86_avx512_state64$__fpu_ip$VH() { return __darwin_x86_avx512_state64$__fpu_ip$VH_; }

    static final MemoryLayout __darwin_x86_avx512_state64$__fpu_cs$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout __darwin_x86_avx512_state64$__fpu_cs$LAYOUT() { return __darwin_x86_avx512_state64$__fpu_cs$LAYOUT_; }

    static final VarHandle __darwin_x86_avx512_state64$__fpu_cs$VH_ = __darwin_x86_avx512_state64$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("__fpu_cs"));
    static final java.lang.invoke.VarHandle __darwin_x86_avx512_state64$__fpu_cs$VH() { return __darwin_x86_avx512_state64$__fpu_cs$VH_; }

    static final MemoryLayout __darwin_x86_avx512_state64$__fpu_rsrv2$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout __darwin_x86_avx512_state64$__fpu_rsrv2$LAYOUT() { return __darwin_x86_avx512_state64$__fpu_rsrv2$LAYOUT_; }

    static final VarHandle __darwin_x86_avx512_state64$__fpu_rsrv2$VH_ = __darwin_x86_avx512_state64$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("__fpu_rsrv2"));
    static final java.lang.invoke.VarHandle __darwin_x86_avx512_state64$__fpu_rsrv2$VH() { return __darwin_x86_avx512_state64$__fpu_rsrv2$VH_; }

    static final MemoryLayout __darwin_x86_avx512_state64$__fpu_dp$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout __darwin_x86_avx512_state64$__fpu_dp$LAYOUT() { return __darwin_x86_avx512_state64$__fpu_dp$LAYOUT_; }

    static final VarHandle __darwin_x86_avx512_state64$__fpu_dp$VH_ = __darwin_x86_avx512_state64$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("__fpu_dp"));
    static final java.lang.invoke.VarHandle __darwin_x86_avx512_state64$__fpu_dp$VH() { return __darwin_x86_avx512_state64$__fpu_dp$VH_; }

    static final MemoryLayout __darwin_x86_avx512_state64$__fpu_ds$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout __darwin_x86_avx512_state64$__fpu_ds$LAYOUT() { return __darwin_x86_avx512_state64$__fpu_ds$LAYOUT_; }

    static final VarHandle __darwin_x86_avx512_state64$__fpu_ds$VH_ = __darwin_x86_avx512_state64$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("__fpu_ds"));
    static final java.lang.invoke.VarHandle __darwin_x86_avx512_state64$__fpu_ds$VH() { return __darwin_x86_avx512_state64$__fpu_ds$VH_; }

    static final MemoryLayout __darwin_x86_avx512_state64$__fpu_rsrv3$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout __darwin_x86_avx512_state64$__fpu_rsrv3$LAYOUT() { return __darwin_x86_avx512_state64$__fpu_rsrv3$LAYOUT_; }

    static final VarHandle __darwin_x86_avx512_state64$__fpu_rsrv3$VH_ = __darwin_x86_avx512_state64$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("__fpu_rsrv3"));
    static final java.lang.invoke.VarHandle __darwin_x86_avx512_state64$__fpu_rsrv3$VH() { return __darwin_x86_avx512_state64$__fpu_rsrv3$VH_; }

    static final MemoryLayout __darwin_x86_avx512_state64$__fpu_mxcsr$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout __darwin_x86_avx512_state64$__fpu_mxcsr$LAYOUT() { return __darwin_x86_avx512_state64$__fpu_mxcsr$LAYOUT_; }

    static final VarHandle __darwin_x86_avx512_state64$__fpu_mxcsr$VH_ = __darwin_x86_avx512_state64$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("__fpu_mxcsr"));
    static final java.lang.invoke.VarHandle __darwin_x86_avx512_state64$__fpu_mxcsr$VH() { return __darwin_x86_avx512_state64$__fpu_mxcsr$VH_; }

    static final MemoryLayout __darwin_x86_avx512_state64$__fpu_mxcsrmask$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout __darwin_x86_avx512_state64$__fpu_mxcsrmask$LAYOUT() { return __darwin_x86_avx512_state64$__fpu_mxcsrmask$LAYOUT_; }

    static final VarHandle __darwin_x86_avx512_state64$__fpu_mxcsrmask$VH_ = __darwin_x86_avx512_state64$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("__fpu_mxcsrmask"));
    static final java.lang.invoke.VarHandle __darwin_x86_avx512_state64$__fpu_mxcsrmask$VH() { return __darwin_x86_avx512_state64$__fpu_mxcsrmask$VH_; }

    static final MemoryLayout __darwin_x86_avx512_state64$__fpu_reserved1$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout __darwin_x86_avx512_state64$__fpu_reserved1$LAYOUT() { return __darwin_x86_avx512_state64$__fpu_reserved1$LAYOUT_; }

    static final VarHandle __darwin_x86_avx512_state64$__fpu_reserved1$VH_ = __darwin_x86_avx512_state64$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("__fpu_reserved1"));
    static final java.lang.invoke.VarHandle __darwin_x86_avx512_state64$__fpu_reserved1$VH() { return __darwin_x86_avx512_state64$__fpu_reserved1$VH_; }

    static final MemoryLayout __darwin_x86_exception_state64$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_SHORT.withName("__trapno"),
        C_SHORT.withName("__cpu"),
        C_INT.withName("__err"),
        C_LONG_LONG.withName("__faultvaddr")
    ).withName("__darwin_x86_exception_state64");
    static final jdk.incubator.foreign.MemoryLayout __darwin_x86_exception_state64$struct$LAYOUT() { return __darwin_x86_exception_state64$struct$LAYOUT_; }

    static final MemoryLayout __darwin_x86_exception_state64$__trapno$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout __darwin_x86_exception_state64$__trapno$LAYOUT() { return __darwin_x86_exception_state64$__trapno$LAYOUT_; }

    static final VarHandle __darwin_x86_exception_state64$__trapno$VH_ = __darwin_x86_exception_state64$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("__trapno"));
    static final java.lang.invoke.VarHandle __darwin_x86_exception_state64$__trapno$VH() { return __darwin_x86_exception_state64$__trapno$VH_; }

    static final MemoryLayout __darwin_x86_exception_state64$__cpu$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout __darwin_x86_exception_state64$__cpu$LAYOUT() { return __darwin_x86_exception_state64$__cpu$LAYOUT_; }

    static final VarHandle __darwin_x86_exception_state64$__cpu$VH_ = __darwin_x86_exception_state64$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("__cpu"));
    static final java.lang.invoke.VarHandle __darwin_x86_exception_state64$__cpu$VH() { return __darwin_x86_exception_state64$__cpu$VH_; }

    static final MemoryLayout __darwin_x86_exception_state64$__err$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout __darwin_x86_exception_state64$__err$LAYOUT() { return __darwin_x86_exception_state64$__err$LAYOUT_; }

    static final VarHandle __darwin_x86_exception_state64$__err$VH_ = __darwin_x86_exception_state64$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("__err"));
    static final java.lang.invoke.VarHandle __darwin_x86_exception_state64$__err$VH() { return __darwin_x86_exception_state64$__err$VH_; }

    static final MemoryLayout __darwin_x86_exception_state64$__faultvaddr$LAYOUT_ = C_LONG_LONG;
    static final jdk.incubator.foreign.MemoryLayout __darwin_x86_exception_state64$__faultvaddr$LAYOUT() { return __darwin_x86_exception_state64$__faultvaddr$LAYOUT_; }

    static final VarHandle __darwin_x86_exception_state64$__faultvaddr$VH_ = __darwin_x86_exception_state64$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("__faultvaddr"));
    static final java.lang.invoke.VarHandle __darwin_x86_exception_state64$__faultvaddr$VH() { return __darwin_x86_exception_state64$__faultvaddr$VH_; }

    static final MemoryLayout __darwin_x86_debug_state64$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_LONG_LONG.withName("__dr0"),
        C_LONG_LONG.withName("__dr1"),
        C_LONG_LONG.withName("__dr2"),
        C_LONG_LONG.withName("__dr3"),
        C_LONG_LONG.withName("__dr4"),
        C_LONG_LONG.withName("__dr5"),
        C_LONG_LONG.withName("__dr6"),
        C_LONG_LONG.withName("__dr7")
    ).withName("__darwin_x86_debug_state64");
    static final jdk.incubator.foreign.MemoryLayout __darwin_x86_debug_state64$struct$LAYOUT() { return __darwin_x86_debug_state64$struct$LAYOUT_; }

    static final MemoryLayout __darwin_x86_debug_state64$__dr0$LAYOUT_ = C_LONG_LONG;
    static final jdk.incubator.foreign.MemoryLayout __darwin_x86_debug_state64$__dr0$LAYOUT() { return __darwin_x86_debug_state64$__dr0$LAYOUT_; }

    static final VarHandle __darwin_x86_debug_state64$__dr0$VH_ = __darwin_x86_debug_state64$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("__dr0"));
    static final java.lang.invoke.VarHandle __darwin_x86_debug_state64$__dr0$VH() { return __darwin_x86_debug_state64$__dr0$VH_; }

    static final MemoryLayout __darwin_x86_debug_state64$__dr1$LAYOUT_ = C_LONG_LONG;
    static final jdk.incubator.foreign.MemoryLayout __darwin_x86_debug_state64$__dr1$LAYOUT() { return __darwin_x86_debug_state64$__dr1$LAYOUT_; }

    static final VarHandle __darwin_x86_debug_state64$__dr1$VH_ = __darwin_x86_debug_state64$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("__dr1"));
    static final java.lang.invoke.VarHandle __darwin_x86_debug_state64$__dr1$VH() { return __darwin_x86_debug_state64$__dr1$VH_; }

    static final MemoryLayout __darwin_x86_debug_state64$__dr2$LAYOUT_ = C_LONG_LONG;
    static final jdk.incubator.foreign.MemoryLayout __darwin_x86_debug_state64$__dr2$LAYOUT() { return __darwin_x86_debug_state64$__dr2$LAYOUT_; }

    static final VarHandle __darwin_x86_debug_state64$__dr2$VH_ = __darwin_x86_debug_state64$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("__dr2"));
    static final java.lang.invoke.VarHandle __darwin_x86_debug_state64$__dr2$VH() { return __darwin_x86_debug_state64$__dr2$VH_; }

    static final MemoryLayout __darwin_x86_debug_state64$__dr3$LAYOUT_ = C_LONG_LONG;
    static final jdk.incubator.foreign.MemoryLayout __darwin_x86_debug_state64$__dr3$LAYOUT() { return __darwin_x86_debug_state64$__dr3$LAYOUT_; }

    static final VarHandle __darwin_x86_debug_state64$__dr3$VH_ = __darwin_x86_debug_state64$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("__dr3"));
    static final java.lang.invoke.VarHandle __darwin_x86_debug_state64$__dr3$VH() { return __darwin_x86_debug_state64$__dr3$VH_; }

    static final MemoryLayout __darwin_x86_debug_state64$__dr4$LAYOUT_ = C_LONG_LONG;
    static final jdk.incubator.foreign.MemoryLayout __darwin_x86_debug_state64$__dr4$LAYOUT() { return __darwin_x86_debug_state64$__dr4$LAYOUT_; }

    static final VarHandle __darwin_x86_debug_state64$__dr4$VH_ = __darwin_x86_debug_state64$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("__dr4"));
    static final java.lang.invoke.VarHandle __darwin_x86_debug_state64$__dr4$VH() { return __darwin_x86_debug_state64$__dr4$VH_; }

    static final MemoryLayout __darwin_x86_debug_state64$__dr5$LAYOUT_ = C_LONG_LONG;
    static final jdk.incubator.foreign.MemoryLayout __darwin_x86_debug_state64$__dr5$LAYOUT() { return __darwin_x86_debug_state64$__dr5$LAYOUT_; }

    static final VarHandle __darwin_x86_debug_state64$__dr5$VH_ = __darwin_x86_debug_state64$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("__dr5"));
    static final java.lang.invoke.VarHandle __darwin_x86_debug_state64$__dr5$VH() { return __darwin_x86_debug_state64$__dr5$VH_; }

    static final MemoryLayout __darwin_x86_debug_state64$__dr6$LAYOUT_ = C_LONG_LONG;
    static final jdk.incubator.foreign.MemoryLayout __darwin_x86_debug_state64$__dr6$LAYOUT() { return __darwin_x86_debug_state64$__dr6$LAYOUT_; }

    static final VarHandle __darwin_x86_debug_state64$__dr6$VH_ = __darwin_x86_debug_state64$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("__dr6"));
    static final java.lang.invoke.VarHandle __darwin_x86_debug_state64$__dr6$VH() { return __darwin_x86_debug_state64$__dr6$VH_; }

    static final MemoryLayout __darwin_x86_debug_state64$__dr7$LAYOUT_ = C_LONG_LONG;
    static final jdk.incubator.foreign.MemoryLayout __darwin_x86_debug_state64$__dr7$LAYOUT() { return __darwin_x86_debug_state64$__dr7$LAYOUT_; }

    static final VarHandle __darwin_x86_debug_state64$__dr7$VH_ = __darwin_x86_debug_state64$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("__dr7"));
    static final java.lang.invoke.VarHandle __darwin_x86_debug_state64$__dr7$VH() { return __darwin_x86_debug_state64$__dr7$VH_; }

    static final MemoryLayout __darwin_x86_cpmu_state64$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofSequence(16, C_LONG_LONG).withName("__ctrs")
    ).withName("__darwin_x86_cpmu_state64");
    static final jdk.incubator.foreign.MemoryLayout __darwin_x86_cpmu_state64$struct$LAYOUT() { return __darwin_x86_cpmu_state64$struct$LAYOUT_; }

    static final MemoryLayout __darwin_mcontext32$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofStruct(
            C_SHORT.withName("__trapno"),
            C_SHORT.withName("__cpu"),
            C_INT.withName("__err"),
            C_INT.withName("__faultvaddr")
        ).withName("__es"),
        MemoryLayout.ofStruct(
            C_INT.withName("__eax"),
            C_INT.withName("__ebx"),
            C_INT.withName("__ecx"),
            C_INT.withName("__edx"),
            C_INT.withName("__edi"),
            C_INT.withName("__esi"),
            C_INT.withName("__ebp"),
            C_INT.withName("__esp"),
            C_INT.withName("__ss"),
            C_INT.withName("__eflags"),
            C_INT.withName("__eip"),
            C_INT.withName("__cs"),
            C_INT.withName("__ds"),
            C_INT.withName("__es"),
            C_INT.withName("__fs"),
            C_INT.withName("__gs")
        ).withName("__ss"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(2, C_INT).withName("__fpu_reserved"),
            MemoryLayout.ofStruct(
                C_SHORT
            ).withName("__fpu_fcw"),
            MemoryLayout.ofStruct(
                C_SHORT
            ).withName("__fpu_fsw"),
            C_CHAR.withName("__fpu_ftw"),
            C_CHAR.withName("__fpu_rsrv1"),
            C_SHORT.withName("__fpu_fop"),
            C_INT.withName("__fpu_ip"),
            C_SHORT.withName("__fpu_cs"),
            C_SHORT.withName("__fpu_rsrv2"),
            C_INT.withName("__fpu_dp"),
            C_SHORT.withName("__fpu_ds"),
            C_SHORT.withName("__fpu_rsrv3"),
            C_INT.withName("__fpu_mxcsr"),
            C_INT.withName("__fpu_mxcsrmask"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(10, C_CHAR).withName("__mmst_reg"),
                MemoryLayout.ofSequence(6, C_CHAR).withName("__mmst_rsrv")
            ).withName("__fpu_stmm0"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(10, C_CHAR).withName("__mmst_reg"),
                MemoryLayout.ofSequence(6, C_CHAR).withName("__mmst_rsrv")
            ).withName("__fpu_stmm1"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(10, C_CHAR).withName("__mmst_reg"),
                MemoryLayout.ofSequence(6, C_CHAR).withName("__mmst_rsrv")
            ).withName("__fpu_stmm2"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(10, C_CHAR).withName("__mmst_reg"),
                MemoryLayout.ofSequence(6, C_CHAR).withName("__mmst_rsrv")
            ).withName("__fpu_stmm3"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(10, C_CHAR).withName("__mmst_reg"),
                MemoryLayout.ofSequence(6, C_CHAR).withName("__mmst_rsrv")
            ).withName("__fpu_stmm4"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(10, C_CHAR).withName("__mmst_reg"),
                MemoryLayout.ofSequence(6, C_CHAR).withName("__mmst_rsrv")
            ).withName("__fpu_stmm5"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(10, C_CHAR).withName("__mmst_reg"),
                MemoryLayout.ofSequence(6, C_CHAR).withName("__mmst_rsrv")
            ).withName("__fpu_stmm6"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(10, C_CHAR).withName("__mmst_reg"),
                MemoryLayout.ofSequence(6, C_CHAR).withName("__mmst_rsrv")
            ).withName("__fpu_stmm7"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_xmm0"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_xmm1"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_xmm2"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_xmm3"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_xmm4"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_xmm5"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_xmm6"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_xmm7"),
            MemoryLayout.ofSequence(224, C_CHAR).withName("__fpu_rsrv4"),
            C_INT.withName("__fpu_reserved1")
        ).withName("__fs")
    ).withName("__darwin_mcontext32");
    static final jdk.incubator.foreign.MemoryLayout __darwin_mcontext32$struct$LAYOUT() { return __darwin_mcontext32$struct$LAYOUT_; }

    static final MemoryLayout __darwin_mcontext_avx32$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofStruct(
            C_SHORT.withName("__trapno"),
            C_SHORT.withName("__cpu"),
            C_INT.withName("__err"),
            C_INT.withName("__faultvaddr")
        ).withName("__es"),
        MemoryLayout.ofStruct(
            C_INT.withName("__eax"),
            C_INT.withName("__ebx"),
            C_INT.withName("__ecx"),
            C_INT.withName("__edx"),
            C_INT.withName("__edi"),
            C_INT.withName("__esi"),
            C_INT.withName("__ebp"),
            C_INT.withName("__esp"),
            C_INT.withName("__ss"),
            C_INT.withName("__eflags"),
            C_INT.withName("__eip"),
            C_INT.withName("__cs"),
            C_INT.withName("__ds"),
            C_INT.withName("__es"),
            C_INT.withName("__fs"),
            C_INT.withName("__gs")
        ).withName("__ss"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(2, C_INT).withName("__fpu_reserved"),
            MemoryLayout.ofStruct(
                C_SHORT
            ).withName("__fpu_fcw"),
            MemoryLayout.ofStruct(
                C_SHORT
            ).withName("__fpu_fsw"),
            C_CHAR.withName("__fpu_ftw"),
            C_CHAR.withName("__fpu_rsrv1"),
            C_SHORT.withName("__fpu_fop"),
            C_INT.withName("__fpu_ip"),
            C_SHORT.withName("__fpu_cs"),
            C_SHORT.withName("__fpu_rsrv2"),
            C_INT.withName("__fpu_dp"),
            C_SHORT.withName("__fpu_ds"),
            C_SHORT.withName("__fpu_rsrv3"),
            C_INT.withName("__fpu_mxcsr"),
            C_INT.withName("__fpu_mxcsrmask"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(10, C_CHAR).withName("__mmst_reg"),
                MemoryLayout.ofSequence(6, C_CHAR).withName("__mmst_rsrv")
            ).withName("__fpu_stmm0"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(10, C_CHAR).withName("__mmst_reg"),
                MemoryLayout.ofSequence(6, C_CHAR).withName("__mmst_rsrv")
            ).withName("__fpu_stmm1"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(10, C_CHAR).withName("__mmst_reg"),
                MemoryLayout.ofSequence(6, C_CHAR).withName("__mmst_rsrv")
            ).withName("__fpu_stmm2"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(10, C_CHAR).withName("__mmst_reg"),
                MemoryLayout.ofSequence(6, C_CHAR).withName("__mmst_rsrv")
            ).withName("__fpu_stmm3"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(10, C_CHAR).withName("__mmst_reg"),
                MemoryLayout.ofSequence(6, C_CHAR).withName("__mmst_rsrv")
            ).withName("__fpu_stmm4"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(10, C_CHAR).withName("__mmst_reg"),
                MemoryLayout.ofSequence(6, C_CHAR).withName("__mmst_rsrv")
            ).withName("__fpu_stmm5"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(10, C_CHAR).withName("__mmst_reg"),
                MemoryLayout.ofSequence(6, C_CHAR).withName("__mmst_rsrv")
            ).withName("__fpu_stmm6"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(10, C_CHAR).withName("__mmst_reg"),
                MemoryLayout.ofSequence(6, C_CHAR).withName("__mmst_rsrv")
            ).withName("__fpu_stmm7"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_xmm0"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_xmm1"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_xmm2"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_xmm3"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_xmm4"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_xmm5"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_xmm6"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_xmm7"),
            MemoryLayout.ofSequence(224, C_CHAR).withName("__fpu_rsrv4"),
            C_INT.withName("__fpu_reserved1"),
            MemoryLayout.ofSequence(64, C_CHAR).withName("__avx_reserved1"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_ymmh0"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_ymmh1"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_ymmh2"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_ymmh3"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_ymmh4"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_ymmh5"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_ymmh6"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_ymmh7")
        ).withName("__fs")
    ).withName("__darwin_mcontext_avx32");
    static final jdk.incubator.foreign.MemoryLayout __darwin_mcontext_avx32$struct$LAYOUT() { return __darwin_mcontext_avx32$struct$LAYOUT_; }

    static final MemoryLayout __darwin_mcontext_avx512_32$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofStruct(
            C_SHORT.withName("__trapno"),
            C_SHORT.withName("__cpu"),
            C_INT.withName("__err"),
            C_INT.withName("__faultvaddr")
        ).withName("__es"),
        MemoryLayout.ofStruct(
            C_INT.withName("__eax"),
            C_INT.withName("__ebx"),
            C_INT.withName("__ecx"),
            C_INT.withName("__edx"),
            C_INT.withName("__edi"),
            C_INT.withName("__esi"),
            C_INT.withName("__ebp"),
            C_INT.withName("__esp"),
            C_INT.withName("__ss"),
            C_INT.withName("__eflags"),
            C_INT.withName("__eip"),
            C_INT.withName("__cs"),
            C_INT.withName("__ds"),
            C_INT.withName("__es"),
            C_INT.withName("__fs"),
            C_INT.withName("__gs")
        ).withName("__ss"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(2, C_INT).withName("__fpu_reserved"),
            MemoryLayout.ofStruct(
                C_SHORT
            ).withName("__fpu_fcw"),
            MemoryLayout.ofStruct(
                C_SHORT
            ).withName("__fpu_fsw"),
            C_CHAR.withName("__fpu_ftw"),
            C_CHAR.withName("__fpu_rsrv1"),
            C_SHORT.withName("__fpu_fop"),
            C_INT.withName("__fpu_ip"),
            C_SHORT.withName("__fpu_cs"),
            C_SHORT.withName("__fpu_rsrv2"),
            C_INT.withName("__fpu_dp"),
            C_SHORT.withName("__fpu_ds"),
            C_SHORT.withName("__fpu_rsrv3"),
            C_INT.withName("__fpu_mxcsr"),
            C_INT.withName("__fpu_mxcsrmask"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(10, C_CHAR).withName("__mmst_reg"),
                MemoryLayout.ofSequence(6, C_CHAR).withName("__mmst_rsrv")
            ).withName("__fpu_stmm0"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(10, C_CHAR).withName("__mmst_reg"),
                MemoryLayout.ofSequence(6, C_CHAR).withName("__mmst_rsrv")
            ).withName("__fpu_stmm1"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(10, C_CHAR).withName("__mmst_reg"),
                MemoryLayout.ofSequence(6, C_CHAR).withName("__mmst_rsrv")
            ).withName("__fpu_stmm2"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(10, C_CHAR).withName("__mmst_reg"),
                MemoryLayout.ofSequence(6, C_CHAR).withName("__mmst_rsrv")
            ).withName("__fpu_stmm3"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(10, C_CHAR).withName("__mmst_reg"),
                MemoryLayout.ofSequence(6, C_CHAR).withName("__mmst_rsrv")
            ).withName("__fpu_stmm4"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(10, C_CHAR).withName("__mmst_reg"),
                MemoryLayout.ofSequence(6, C_CHAR).withName("__mmst_rsrv")
            ).withName("__fpu_stmm5"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(10, C_CHAR).withName("__mmst_reg"),
                MemoryLayout.ofSequence(6, C_CHAR).withName("__mmst_rsrv")
            ).withName("__fpu_stmm6"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(10, C_CHAR).withName("__mmst_reg"),
                MemoryLayout.ofSequence(6, C_CHAR).withName("__mmst_rsrv")
            ).withName("__fpu_stmm7"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_xmm0"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_xmm1"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_xmm2"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_xmm3"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_xmm4"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_xmm5"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_xmm6"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_xmm7"),
            MemoryLayout.ofSequence(224, C_CHAR).withName("__fpu_rsrv4"),
            C_INT.withName("__fpu_reserved1"),
            MemoryLayout.ofSequence(64, C_CHAR).withName("__avx_reserved1"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_ymmh0"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_ymmh1"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_ymmh2"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_ymmh3"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_ymmh4"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_ymmh5"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_ymmh6"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_ymmh7"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(8, C_CHAR).withName("__opmask_reg")
            ).withName("__fpu_k0"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(8, C_CHAR).withName("__opmask_reg")
            ).withName("__fpu_k1"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(8, C_CHAR).withName("__opmask_reg")
            ).withName("__fpu_k2"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(8, C_CHAR).withName("__opmask_reg")
            ).withName("__fpu_k3"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(8, C_CHAR).withName("__opmask_reg")
            ).withName("__fpu_k4"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(8, C_CHAR).withName("__opmask_reg")
            ).withName("__fpu_k5"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(8, C_CHAR).withName("__opmask_reg")
            ).withName("__fpu_k6"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(8, C_CHAR).withName("__opmask_reg")
            ).withName("__fpu_k7"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(32, C_CHAR).withName("__ymm_reg")
            ).withName("__fpu_zmmh0"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(32, C_CHAR).withName("__ymm_reg")
            ).withName("__fpu_zmmh1"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(32, C_CHAR).withName("__ymm_reg")
            ).withName("__fpu_zmmh2"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(32, C_CHAR).withName("__ymm_reg")
            ).withName("__fpu_zmmh3"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(32, C_CHAR).withName("__ymm_reg")
            ).withName("__fpu_zmmh4"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(32, C_CHAR).withName("__ymm_reg")
            ).withName("__fpu_zmmh5"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(32, C_CHAR).withName("__ymm_reg")
            ).withName("__fpu_zmmh6"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(32, C_CHAR).withName("__ymm_reg")
            ).withName("__fpu_zmmh7")
        ).withName("__fs")
    ).withName("__darwin_mcontext_avx512_32");
    static final jdk.incubator.foreign.MemoryLayout __darwin_mcontext_avx512_32$struct$LAYOUT() { return __darwin_mcontext_avx512_32$struct$LAYOUT_; }

    static final MemoryLayout __darwin_mcontext64$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofStruct(
            C_SHORT.withName("__trapno"),
            C_SHORT.withName("__cpu"),
            C_INT.withName("__err"),
            C_LONG_LONG.withName("__faultvaddr")
        ).withName("__es"),
        MemoryLayout.ofStruct(
            C_LONG_LONG.withName("__rax"),
            C_LONG_LONG.withName("__rbx"),
            C_LONG_LONG.withName("__rcx"),
            C_LONG_LONG.withName("__rdx"),
            C_LONG_LONG.withName("__rdi"),
            C_LONG_LONG.withName("__rsi"),
            C_LONG_LONG.withName("__rbp"),
            C_LONG_LONG.withName("__rsp"),
            C_LONG_LONG.withName("__r8"),
            C_LONG_LONG.withName("__r9"),
            C_LONG_LONG.withName("__r10"),
            C_LONG_LONG.withName("__r11"),
            C_LONG_LONG.withName("__r12"),
            C_LONG_LONG.withName("__r13"),
            C_LONG_LONG.withName("__r14"),
            C_LONG_LONG.withName("__r15"),
            C_LONG_LONG.withName("__rip"),
            C_LONG_LONG.withName("__rflags"),
            C_LONG_LONG.withName("__cs"),
            C_LONG_LONG.withName("__fs"),
            C_LONG_LONG.withName("__gs")
        ).withName("__ss"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(2, C_INT).withName("__fpu_reserved"),
            MemoryLayout.ofStruct(
                C_SHORT
            ).withName("__fpu_fcw"),
            MemoryLayout.ofStruct(
                C_SHORT
            ).withName("__fpu_fsw"),
            C_CHAR.withName("__fpu_ftw"),
            C_CHAR.withName("__fpu_rsrv1"),
            C_SHORT.withName("__fpu_fop"),
            C_INT.withName("__fpu_ip"),
            C_SHORT.withName("__fpu_cs"),
            C_SHORT.withName("__fpu_rsrv2"),
            C_INT.withName("__fpu_dp"),
            C_SHORT.withName("__fpu_ds"),
            C_SHORT.withName("__fpu_rsrv3"),
            C_INT.withName("__fpu_mxcsr"),
            C_INT.withName("__fpu_mxcsrmask"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(10, C_CHAR).withName("__mmst_reg"),
                MemoryLayout.ofSequence(6, C_CHAR).withName("__mmst_rsrv")
            ).withName("__fpu_stmm0"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(10, C_CHAR).withName("__mmst_reg"),
                MemoryLayout.ofSequence(6, C_CHAR).withName("__mmst_rsrv")
            ).withName("__fpu_stmm1"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(10, C_CHAR).withName("__mmst_reg"),
                MemoryLayout.ofSequence(6, C_CHAR).withName("__mmst_rsrv")
            ).withName("__fpu_stmm2"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(10, C_CHAR).withName("__mmst_reg"),
                MemoryLayout.ofSequence(6, C_CHAR).withName("__mmst_rsrv")
            ).withName("__fpu_stmm3"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(10, C_CHAR).withName("__mmst_reg"),
                MemoryLayout.ofSequence(6, C_CHAR).withName("__mmst_rsrv")
            ).withName("__fpu_stmm4"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(10, C_CHAR).withName("__mmst_reg"),
                MemoryLayout.ofSequence(6, C_CHAR).withName("__mmst_rsrv")
            ).withName("__fpu_stmm5"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(10, C_CHAR).withName("__mmst_reg"),
                MemoryLayout.ofSequence(6, C_CHAR).withName("__mmst_rsrv")
            ).withName("__fpu_stmm6"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(10, C_CHAR).withName("__mmst_reg"),
                MemoryLayout.ofSequence(6, C_CHAR).withName("__mmst_rsrv")
            ).withName("__fpu_stmm7"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_xmm0"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_xmm1"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_xmm2"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_xmm3"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_xmm4"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_xmm5"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_xmm6"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_xmm7"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_xmm8"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_xmm9"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_xmm10"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_xmm11"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_xmm12"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_xmm13"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_xmm14"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_xmm15"),
            MemoryLayout.ofSequence(96, C_CHAR).withName("__fpu_rsrv4"),
            C_INT.withName("__fpu_reserved1")
        ).withName("__fs"),
        MemoryLayout.ofPaddingBits(32)
    ).withName("__darwin_mcontext64");
    static final jdk.incubator.foreign.MemoryLayout __darwin_mcontext64$struct$LAYOUT() { return __darwin_mcontext64$struct$LAYOUT_; }

    static final MemoryLayout __darwin_mcontext64_full$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofStruct(
            C_SHORT.withName("__trapno"),
            C_SHORT.withName("__cpu"),
            C_INT.withName("__err"),
            C_LONG_LONG.withName("__faultvaddr")
        ).withName("__es"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofStruct(
                C_LONG_LONG.withName("__rax"),
                C_LONG_LONG.withName("__rbx"),
                C_LONG_LONG.withName("__rcx"),
                C_LONG_LONG.withName("__rdx"),
                C_LONG_LONG.withName("__rdi"),
                C_LONG_LONG.withName("__rsi"),
                C_LONG_LONG.withName("__rbp"),
                C_LONG_LONG.withName("__rsp"),
                C_LONG_LONG.withName("__r8"),
                C_LONG_LONG.withName("__r9"),
                C_LONG_LONG.withName("__r10"),
                C_LONG_LONG.withName("__r11"),
                C_LONG_LONG.withName("__r12"),
                C_LONG_LONG.withName("__r13"),
                C_LONG_LONG.withName("__r14"),
                C_LONG_LONG.withName("__r15"),
                C_LONG_LONG.withName("__rip"),
                C_LONG_LONG.withName("__rflags"),
                C_LONG_LONG.withName("__cs"),
                C_LONG_LONG.withName("__fs"),
                C_LONG_LONG.withName("__gs")
            ).withName("__ss64"),
            C_LONG_LONG.withName("__ds"),
            C_LONG_LONG.withName("__es"),
            C_LONG_LONG.withName("__ss"),
            C_LONG_LONG.withName("__gsbase")
        ).withName("__ss"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(2, C_INT).withName("__fpu_reserved"),
            MemoryLayout.ofStruct(
                C_SHORT
            ).withName("__fpu_fcw"),
            MemoryLayout.ofStruct(
                C_SHORT
            ).withName("__fpu_fsw"),
            C_CHAR.withName("__fpu_ftw"),
            C_CHAR.withName("__fpu_rsrv1"),
            C_SHORT.withName("__fpu_fop"),
            C_INT.withName("__fpu_ip"),
            C_SHORT.withName("__fpu_cs"),
            C_SHORT.withName("__fpu_rsrv2"),
            C_INT.withName("__fpu_dp"),
            C_SHORT.withName("__fpu_ds"),
            C_SHORT.withName("__fpu_rsrv3"),
            C_INT.withName("__fpu_mxcsr"),
            C_INT.withName("__fpu_mxcsrmask"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(10, C_CHAR).withName("__mmst_reg"),
                MemoryLayout.ofSequence(6, C_CHAR).withName("__mmst_rsrv")
            ).withName("__fpu_stmm0"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(10, C_CHAR).withName("__mmst_reg"),
                MemoryLayout.ofSequence(6, C_CHAR).withName("__mmst_rsrv")
            ).withName("__fpu_stmm1"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(10, C_CHAR).withName("__mmst_reg"),
                MemoryLayout.ofSequence(6, C_CHAR).withName("__mmst_rsrv")
            ).withName("__fpu_stmm2"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(10, C_CHAR).withName("__mmst_reg"),
                MemoryLayout.ofSequence(6, C_CHAR).withName("__mmst_rsrv")
            ).withName("__fpu_stmm3"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(10, C_CHAR).withName("__mmst_reg"),
                MemoryLayout.ofSequence(6, C_CHAR).withName("__mmst_rsrv")
            ).withName("__fpu_stmm4"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(10, C_CHAR).withName("__mmst_reg"),
                MemoryLayout.ofSequence(6, C_CHAR).withName("__mmst_rsrv")
            ).withName("__fpu_stmm5"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(10, C_CHAR).withName("__mmst_reg"),
                MemoryLayout.ofSequence(6, C_CHAR).withName("__mmst_rsrv")
            ).withName("__fpu_stmm6"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(10, C_CHAR).withName("__mmst_reg"),
                MemoryLayout.ofSequence(6, C_CHAR).withName("__mmst_rsrv")
            ).withName("__fpu_stmm7"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_xmm0"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_xmm1"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_xmm2"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_xmm3"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_xmm4"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_xmm5"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_xmm6"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_xmm7"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_xmm8"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_xmm9"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_xmm10"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_xmm11"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_xmm12"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_xmm13"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_xmm14"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_xmm15"),
            MemoryLayout.ofSequence(96, C_CHAR).withName("__fpu_rsrv4"),
            C_INT.withName("__fpu_reserved1")
        ).withName("__fs"),
        MemoryLayout.ofPaddingBits(32)
    ).withName("__darwin_mcontext64_full");
    static final jdk.incubator.foreign.MemoryLayout __darwin_mcontext64_full$struct$LAYOUT() { return __darwin_mcontext64_full$struct$LAYOUT_; }

    static final MemoryLayout __darwin_mcontext_avx64$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofStruct(
            C_SHORT.withName("__trapno"),
            C_SHORT.withName("__cpu"),
            C_INT.withName("__err"),
            C_LONG_LONG.withName("__faultvaddr")
        ).withName("__es"),
        MemoryLayout.ofStruct(
            C_LONG_LONG.withName("__rax"),
            C_LONG_LONG.withName("__rbx"),
            C_LONG_LONG.withName("__rcx"),
            C_LONG_LONG.withName("__rdx"),
            C_LONG_LONG.withName("__rdi"),
            C_LONG_LONG.withName("__rsi"),
            C_LONG_LONG.withName("__rbp"),
            C_LONG_LONG.withName("__rsp"),
            C_LONG_LONG.withName("__r8"),
            C_LONG_LONG.withName("__r9"),
            C_LONG_LONG.withName("__r10"),
            C_LONG_LONG.withName("__r11"),
            C_LONG_LONG.withName("__r12"),
            C_LONG_LONG.withName("__r13"),
            C_LONG_LONG.withName("__r14"),
            C_LONG_LONG.withName("__r15"),
            C_LONG_LONG.withName("__rip"),
            C_LONG_LONG.withName("__rflags"),
            C_LONG_LONG.withName("__cs"),
            C_LONG_LONG.withName("__fs"),
            C_LONG_LONG.withName("__gs")
        ).withName("__ss"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(2, C_INT).withName("__fpu_reserved"),
            MemoryLayout.ofStruct(
                C_SHORT
            ).withName("__fpu_fcw"),
            MemoryLayout.ofStruct(
                C_SHORT
            ).withName("__fpu_fsw"),
            C_CHAR.withName("__fpu_ftw"),
            C_CHAR.withName("__fpu_rsrv1"),
            C_SHORT.withName("__fpu_fop"),
            C_INT.withName("__fpu_ip"),
            C_SHORT.withName("__fpu_cs"),
            C_SHORT.withName("__fpu_rsrv2"),
            C_INT.withName("__fpu_dp"),
            C_SHORT.withName("__fpu_ds"),
            C_SHORT.withName("__fpu_rsrv3"),
            C_INT.withName("__fpu_mxcsr"),
            C_INT.withName("__fpu_mxcsrmask"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(10, C_CHAR).withName("__mmst_reg"),
                MemoryLayout.ofSequence(6, C_CHAR).withName("__mmst_rsrv")
            ).withName("__fpu_stmm0"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(10, C_CHAR).withName("__mmst_reg"),
                MemoryLayout.ofSequence(6, C_CHAR).withName("__mmst_rsrv")
            ).withName("__fpu_stmm1"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(10, C_CHAR).withName("__mmst_reg"),
                MemoryLayout.ofSequence(6, C_CHAR).withName("__mmst_rsrv")
            ).withName("__fpu_stmm2"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(10, C_CHAR).withName("__mmst_reg"),
                MemoryLayout.ofSequence(6, C_CHAR).withName("__mmst_rsrv")
            ).withName("__fpu_stmm3"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(10, C_CHAR).withName("__mmst_reg"),
                MemoryLayout.ofSequence(6, C_CHAR).withName("__mmst_rsrv")
            ).withName("__fpu_stmm4"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(10, C_CHAR).withName("__mmst_reg"),
                MemoryLayout.ofSequence(6, C_CHAR).withName("__mmst_rsrv")
            ).withName("__fpu_stmm5"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(10, C_CHAR).withName("__mmst_reg"),
                MemoryLayout.ofSequence(6, C_CHAR).withName("__mmst_rsrv")
            ).withName("__fpu_stmm6"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(10, C_CHAR).withName("__mmst_reg"),
                MemoryLayout.ofSequence(6, C_CHAR).withName("__mmst_rsrv")
            ).withName("__fpu_stmm7"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_xmm0"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_xmm1"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_xmm2"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_xmm3"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_xmm4"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_xmm5"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_xmm6"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_xmm7"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_xmm8"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_xmm9"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_xmm10"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_xmm11"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_xmm12"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_xmm13"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_xmm14"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_xmm15"),
            MemoryLayout.ofSequence(96, C_CHAR).withName("__fpu_rsrv4"),
            C_INT.withName("__fpu_reserved1"),
            MemoryLayout.ofSequence(64, C_CHAR).withName("__avx_reserved1"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_ymmh0"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_ymmh1"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_ymmh2"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_ymmh3"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_ymmh4"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_ymmh5"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_ymmh6"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_ymmh7"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_ymmh8"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_ymmh9"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_ymmh10"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_ymmh11"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_ymmh12"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_ymmh13"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_ymmh14"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_ymmh15")
        ).withName("__fs"),
        MemoryLayout.ofPaddingBits(32)
    ).withName("__darwin_mcontext_avx64");
    static final jdk.incubator.foreign.MemoryLayout __darwin_mcontext_avx64$struct$LAYOUT() { return __darwin_mcontext_avx64$struct$LAYOUT_; }

    static final MemoryLayout __darwin_mcontext_avx64_full$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofStruct(
            C_SHORT.withName("__trapno"),
            C_SHORT.withName("__cpu"),
            C_INT.withName("__err"),
            C_LONG_LONG.withName("__faultvaddr")
        ).withName("__es"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofStruct(
                C_LONG_LONG.withName("__rax"),
                C_LONG_LONG.withName("__rbx"),
                C_LONG_LONG.withName("__rcx"),
                C_LONG_LONG.withName("__rdx"),
                C_LONG_LONG.withName("__rdi"),
                C_LONG_LONG.withName("__rsi"),
                C_LONG_LONG.withName("__rbp"),
                C_LONG_LONG.withName("__rsp"),
                C_LONG_LONG.withName("__r8"),
                C_LONG_LONG.withName("__r9"),
                C_LONG_LONG.withName("__r10"),
                C_LONG_LONG.withName("__r11"),
                C_LONG_LONG.withName("__r12"),
                C_LONG_LONG.withName("__r13"),
                C_LONG_LONG.withName("__r14"),
                C_LONG_LONG.withName("__r15"),
                C_LONG_LONG.withName("__rip"),
                C_LONG_LONG.withName("__rflags"),
                C_LONG_LONG.withName("__cs"),
                C_LONG_LONG.withName("__fs"),
                C_LONG_LONG.withName("__gs")
            ).withName("__ss64"),
            C_LONG_LONG.withName("__ds"),
            C_LONG_LONG.withName("__es"),
            C_LONG_LONG.withName("__ss"),
            C_LONG_LONG.withName("__gsbase")
        ).withName("__ss"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(2, C_INT).withName("__fpu_reserved"),
            MemoryLayout.ofStruct(
                C_SHORT
            ).withName("__fpu_fcw"),
            MemoryLayout.ofStruct(
                C_SHORT
            ).withName("__fpu_fsw"),
            C_CHAR.withName("__fpu_ftw"),
            C_CHAR.withName("__fpu_rsrv1"),
            C_SHORT.withName("__fpu_fop"),
            C_INT.withName("__fpu_ip"),
            C_SHORT.withName("__fpu_cs"),
            C_SHORT.withName("__fpu_rsrv2"),
            C_INT.withName("__fpu_dp"),
            C_SHORT.withName("__fpu_ds"),
            C_SHORT.withName("__fpu_rsrv3"),
            C_INT.withName("__fpu_mxcsr"),
            C_INT.withName("__fpu_mxcsrmask"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(10, C_CHAR).withName("__mmst_reg"),
                MemoryLayout.ofSequence(6, C_CHAR).withName("__mmst_rsrv")
            ).withName("__fpu_stmm0"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(10, C_CHAR).withName("__mmst_reg"),
                MemoryLayout.ofSequence(6, C_CHAR).withName("__mmst_rsrv")
            ).withName("__fpu_stmm1"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(10, C_CHAR).withName("__mmst_reg"),
                MemoryLayout.ofSequence(6, C_CHAR).withName("__mmst_rsrv")
            ).withName("__fpu_stmm2"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(10, C_CHAR).withName("__mmst_reg"),
                MemoryLayout.ofSequence(6, C_CHAR).withName("__mmst_rsrv")
            ).withName("__fpu_stmm3"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(10, C_CHAR).withName("__mmst_reg"),
                MemoryLayout.ofSequence(6, C_CHAR).withName("__mmst_rsrv")
            ).withName("__fpu_stmm4"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(10, C_CHAR).withName("__mmst_reg"),
                MemoryLayout.ofSequence(6, C_CHAR).withName("__mmst_rsrv")
            ).withName("__fpu_stmm5"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(10, C_CHAR).withName("__mmst_reg"),
                MemoryLayout.ofSequence(6, C_CHAR).withName("__mmst_rsrv")
            ).withName("__fpu_stmm6"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(10, C_CHAR).withName("__mmst_reg"),
                MemoryLayout.ofSequence(6, C_CHAR).withName("__mmst_rsrv")
            ).withName("__fpu_stmm7"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_xmm0"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_xmm1"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_xmm2"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_xmm3"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_xmm4"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_xmm5"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_xmm6"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_xmm7"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_xmm8"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_xmm9"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_xmm10"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_xmm11"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_xmm12"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_xmm13"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_xmm14"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_xmm15"),
            MemoryLayout.ofSequence(96, C_CHAR).withName("__fpu_rsrv4"),
            C_INT.withName("__fpu_reserved1"),
            MemoryLayout.ofSequence(64, C_CHAR).withName("__avx_reserved1"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_ymmh0"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_ymmh1"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_ymmh2"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_ymmh3"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_ymmh4"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_ymmh5"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_ymmh6"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_ymmh7"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_ymmh8"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_ymmh9"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_ymmh10"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_ymmh11"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_ymmh12"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_ymmh13"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_ymmh14"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_ymmh15")
        ).withName("__fs"),
        MemoryLayout.ofPaddingBits(32)
    ).withName("__darwin_mcontext_avx64_full");
    static final jdk.incubator.foreign.MemoryLayout __darwin_mcontext_avx64_full$struct$LAYOUT() { return __darwin_mcontext_avx64_full$struct$LAYOUT_; }

    static final MemoryLayout __darwin_mcontext_avx512_64$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofStruct(
            C_SHORT.withName("__trapno"),
            C_SHORT.withName("__cpu"),
            C_INT.withName("__err"),
            C_LONG_LONG.withName("__faultvaddr")
        ).withName("__es"),
        MemoryLayout.ofStruct(
            C_LONG_LONG.withName("__rax"),
            C_LONG_LONG.withName("__rbx"),
            C_LONG_LONG.withName("__rcx"),
            C_LONG_LONG.withName("__rdx"),
            C_LONG_LONG.withName("__rdi"),
            C_LONG_LONG.withName("__rsi"),
            C_LONG_LONG.withName("__rbp"),
            C_LONG_LONG.withName("__rsp"),
            C_LONG_LONG.withName("__r8"),
            C_LONG_LONG.withName("__r9"),
            C_LONG_LONG.withName("__r10"),
            C_LONG_LONG.withName("__r11"),
            C_LONG_LONG.withName("__r12"),
            C_LONG_LONG.withName("__r13"),
            C_LONG_LONG.withName("__r14"),
            C_LONG_LONG.withName("__r15"),
            C_LONG_LONG.withName("__rip"),
            C_LONG_LONG.withName("__rflags"),
            C_LONG_LONG.withName("__cs"),
            C_LONG_LONG.withName("__fs"),
            C_LONG_LONG.withName("__gs")
        ).withName("__ss"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(2, C_INT).withName("__fpu_reserved"),
            MemoryLayout.ofStruct(
                C_SHORT
            ).withName("__fpu_fcw"),
            MemoryLayout.ofStruct(
                C_SHORT
            ).withName("__fpu_fsw"),
            C_CHAR.withName("__fpu_ftw"),
            C_CHAR.withName("__fpu_rsrv1"),
            C_SHORT.withName("__fpu_fop"),
            C_INT.withName("__fpu_ip"),
            C_SHORT.withName("__fpu_cs"),
            C_SHORT.withName("__fpu_rsrv2"),
            C_INT.withName("__fpu_dp"),
            C_SHORT.withName("__fpu_ds"),
            C_SHORT.withName("__fpu_rsrv3"),
            C_INT.withName("__fpu_mxcsr"),
            C_INT.withName("__fpu_mxcsrmask"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(10, C_CHAR).withName("__mmst_reg"),
                MemoryLayout.ofSequence(6, C_CHAR).withName("__mmst_rsrv")
            ).withName("__fpu_stmm0"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(10, C_CHAR).withName("__mmst_reg"),
                MemoryLayout.ofSequence(6, C_CHAR).withName("__mmst_rsrv")
            ).withName("__fpu_stmm1"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(10, C_CHAR).withName("__mmst_reg"),
                MemoryLayout.ofSequence(6, C_CHAR).withName("__mmst_rsrv")
            ).withName("__fpu_stmm2"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(10, C_CHAR).withName("__mmst_reg"),
                MemoryLayout.ofSequence(6, C_CHAR).withName("__mmst_rsrv")
            ).withName("__fpu_stmm3"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(10, C_CHAR).withName("__mmst_reg"),
                MemoryLayout.ofSequence(6, C_CHAR).withName("__mmst_rsrv")
            ).withName("__fpu_stmm4"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(10, C_CHAR).withName("__mmst_reg"),
                MemoryLayout.ofSequence(6, C_CHAR).withName("__mmst_rsrv")
            ).withName("__fpu_stmm5"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(10, C_CHAR).withName("__mmst_reg"),
                MemoryLayout.ofSequence(6, C_CHAR).withName("__mmst_rsrv")
            ).withName("__fpu_stmm6"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(10, C_CHAR).withName("__mmst_reg"),
                MemoryLayout.ofSequence(6, C_CHAR).withName("__mmst_rsrv")
            ).withName("__fpu_stmm7"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_xmm0"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_xmm1"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_xmm2"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_xmm3"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_xmm4"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_xmm5"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_xmm6"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_xmm7"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_xmm8"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_xmm9"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_xmm10"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_xmm11"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_xmm12"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_xmm13"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_xmm14"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_xmm15"),
            MemoryLayout.ofSequence(96, C_CHAR).withName("__fpu_rsrv4"),
            C_INT.withName("__fpu_reserved1"),
            MemoryLayout.ofSequence(64, C_CHAR).withName("__avx_reserved1"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_ymmh0"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_ymmh1"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_ymmh2"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_ymmh3"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_ymmh4"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_ymmh5"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_ymmh6"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_ymmh7"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_ymmh8"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_ymmh9"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_ymmh10"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_ymmh11"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_ymmh12"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_ymmh13"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_ymmh14"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_ymmh15"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(8, C_CHAR).withName("__opmask_reg")
            ).withName("__fpu_k0"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(8, C_CHAR).withName("__opmask_reg")
            ).withName("__fpu_k1"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(8, C_CHAR).withName("__opmask_reg")
            ).withName("__fpu_k2"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(8, C_CHAR).withName("__opmask_reg")
            ).withName("__fpu_k3"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(8, C_CHAR).withName("__opmask_reg")
            ).withName("__fpu_k4"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(8, C_CHAR).withName("__opmask_reg")
            ).withName("__fpu_k5"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(8, C_CHAR).withName("__opmask_reg")
            ).withName("__fpu_k6"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(8, C_CHAR).withName("__opmask_reg")
            ).withName("__fpu_k7"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(32, C_CHAR).withName("__ymm_reg")
            ).withName("__fpu_zmmh0"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(32, C_CHAR).withName("__ymm_reg")
            ).withName("__fpu_zmmh1"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(32, C_CHAR).withName("__ymm_reg")
            ).withName("__fpu_zmmh2"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(32, C_CHAR).withName("__ymm_reg")
            ).withName("__fpu_zmmh3"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(32, C_CHAR).withName("__ymm_reg")
            ).withName("__fpu_zmmh4"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(32, C_CHAR).withName("__ymm_reg")
            ).withName("__fpu_zmmh5"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(32, C_CHAR).withName("__ymm_reg")
            ).withName("__fpu_zmmh6"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(32, C_CHAR).withName("__ymm_reg")
            ).withName("__fpu_zmmh7"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(32, C_CHAR).withName("__ymm_reg")
            ).withName("__fpu_zmmh8"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(32, C_CHAR).withName("__ymm_reg")
            ).withName("__fpu_zmmh9"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(32, C_CHAR).withName("__ymm_reg")
            ).withName("__fpu_zmmh10"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(32, C_CHAR).withName("__ymm_reg")
            ).withName("__fpu_zmmh11"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(32, C_CHAR).withName("__ymm_reg")
            ).withName("__fpu_zmmh12"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(32, C_CHAR).withName("__ymm_reg")
            ).withName("__fpu_zmmh13"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(32, C_CHAR).withName("__ymm_reg")
            ).withName("__fpu_zmmh14"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(32, C_CHAR).withName("__ymm_reg")
            ).withName("__fpu_zmmh15"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(64, C_CHAR).withName("__zmm_reg")
            ).withName("__fpu_zmm16"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(64, C_CHAR).withName("__zmm_reg")
            ).withName("__fpu_zmm17"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(64, C_CHAR).withName("__zmm_reg")
            ).withName("__fpu_zmm18"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(64, C_CHAR).withName("__zmm_reg")
            ).withName("__fpu_zmm19"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(64, C_CHAR).withName("__zmm_reg")
            ).withName("__fpu_zmm20"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(64, C_CHAR).withName("__zmm_reg")
            ).withName("__fpu_zmm21"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(64, C_CHAR).withName("__zmm_reg")
            ).withName("__fpu_zmm22"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(64, C_CHAR).withName("__zmm_reg")
            ).withName("__fpu_zmm23"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(64, C_CHAR).withName("__zmm_reg")
            ).withName("__fpu_zmm24"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(64, C_CHAR).withName("__zmm_reg")
            ).withName("__fpu_zmm25"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(64, C_CHAR).withName("__zmm_reg")
            ).withName("__fpu_zmm26"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(64, C_CHAR).withName("__zmm_reg")
            ).withName("__fpu_zmm27"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(64, C_CHAR).withName("__zmm_reg")
            ).withName("__fpu_zmm28"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(64, C_CHAR).withName("__zmm_reg")
            ).withName("__fpu_zmm29"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(64, C_CHAR).withName("__zmm_reg")
            ).withName("__fpu_zmm30"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(64, C_CHAR).withName("__zmm_reg")
            ).withName("__fpu_zmm31")
        ).withName("__fs"),
        MemoryLayout.ofPaddingBits(32)
    ).withName("__darwin_mcontext_avx512_64");
    static final jdk.incubator.foreign.MemoryLayout __darwin_mcontext_avx512_64$struct$LAYOUT() { return __darwin_mcontext_avx512_64$struct$LAYOUT_; }

    static final MemoryLayout __darwin_mcontext_avx512_64_full$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofStruct(
            C_SHORT.withName("__trapno"),
            C_SHORT.withName("__cpu"),
            C_INT.withName("__err"),
            C_LONG_LONG.withName("__faultvaddr")
        ).withName("__es"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofStruct(
                C_LONG_LONG.withName("__rax"),
                C_LONG_LONG.withName("__rbx"),
                C_LONG_LONG.withName("__rcx"),
                C_LONG_LONG.withName("__rdx"),
                C_LONG_LONG.withName("__rdi"),
                C_LONG_LONG.withName("__rsi"),
                C_LONG_LONG.withName("__rbp"),
                C_LONG_LONG.withName("__rsp"),
                C_LONG_LONG.withName("__r8"),
                C_LONG_LONG.withName("__r9"),
                C_LONG_LONG.withName("__r10"),
                C_LONG_LONG.withName("__r11"),
                C_LONG_LONG.withName("__r12"),
                C_LONG_LONG.withName("__r13"),
                C_LONG_LONG.withName("__r14"),
                C_LONG_LONG.withName("__r15"),
                C_LONG_LONG.withName("__rip"),
                C_LONG_LONG.withName("__rflags"),
                C_LONG_LONG.withName("__cs"),
                C_LONG_LONG.withName("__fs"),
                C_LONG_LONG.withName("__gs")
            ).withName("__ss64"),
            C_LONG_LONG.withName("__ds"),
            C_LONG_LONG.withName("__es"),
            C_LONG_LONG.withName("__ss"),
            C_LONG_LONG.withName("__gsbase")
        ).withName("__ss"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(2, C_INT).withName("__fpu_reserved"),
            MemoryLayout.ofStruct(
                C_SHORT
            ).withName("__fpu_fcw"),
            MemoryLayout.ofStruct(
                C_SHORT
            ).withName("__fpu_fsw"),
            C_CHAR.withName("__fpu_ftw"),
            C_CHAR.withName("__fpu_rsrv1"),
            C_SHORT.withName("__fpu_fop"),
            C_INT.withName("__fpu_ip"),
            C_SHORT.withName("__fpu_cs"),
            C_SHORT.withName("__fpu_rsrv2"),
            C_INT.withName("__fpu_dp"),
            C_SHORT.withName("__fpu_ds"),
            C_SHORT.withName("__fpu_rsrv3"),
            C_INT.withName("__fpu_mxcsr"),
            C_INT.withName("__fpu_mxcsrmask"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(10, C_CHAR).withName("__mmst_reg"),
                MemoryLayout.ofSequence(6, C_CHAR).withName("__mmst_rsrv")
            ).withName("__fpu_stmm0"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(10, C_CHAR).withName("__mmst_reg"),
                MemoryLayout.ofSequence(6, C_CHAR).withName("__mmst_rsrv")
            ).withName("__fpu_stmm1"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(10, C_CHAR).withName("__mmst_reg"),
                MemoryLayout.ofSequence(6, C_CHAR).withName("__mmst_rsrv")
            ).withName("__fpu_stmm2"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(10, C_CHAR).withName("__mmst_reg"),
                MemoryLayout.ofSequence(6, C_CHAR).withName("__mmst_rsrv")
            ).withName("__fpu_stmm3"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(10, C_CHAR).withName("__mmst_reg"),
                MemoryLayout.ofSequence(6, C_CHAR).withName("__mmst_rsrv")
            ).withName("__fpu_stmm4"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(10, C_CHAR).withName("__mmst_reg"),
                MemoryLayout.ofSequence(6, C_CHAR).withName("__mmst_rsrv")
            ).withName("__fpu_stmm5"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(10, C_CHAR).withName("__mmst_reg"),
                MemoryLayout.ofSequence(6, C_CHAR).withName("__mmst_rsrv")
            ).withName("__fpu_stmm6"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(10, C_CHAR).withName("__mmst_reg"),
                MemoryLayout.ofSequence(6, C_CHAR).withName("__mmst_rsrv")
            ).withName("__fpu_stmm7"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_xmm0"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_xmm1"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_xmm2"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_xmm3"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_xmm4"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_xmm5"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_xmm6"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_xmm7"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_xmm8"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_xmm9"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_xmm10"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_xmm11"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_xmm12"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_xmm13"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_xmm14"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_xmm15"),
            MemoryLayout.ofSequence(96, C_CHAR).withName("__fpu_rsrv4"),
            C_INT.withName("__fpu_reserved1"),
            MemoryLayout.ofSequence(64, C_CHAR).withName("__avx_reserved1"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_ymmh0"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_ymmh1"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_ymmh2"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_ymmh3"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_ymmh4"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_ymmh5"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_ymmh6"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_ymmh7"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_ymmh8"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_ymmh9"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_ymmh10"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_ymmh11"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_ymmh12"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_ymmh13"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_ymmh14"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(16, C_CHAR).withName("__xmm_reg")
            ).withName("__fpu_ymmh15"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(8, C_CHAR).withName("__opmask_reg")
            ).withName("__fpu_k0"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(8, C_CHAR).withName("__opmask_reg")
            ).withName("__fpu_k1"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(8, C_CHAR).withName("__opmask_reg")
            ).withName("__fpu_k2"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(8, C_CHAR).withName("__opmask_reg")
            ).withName("__fpu_k3"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(8, C_CHAR).withName("__opmask_reg")
            ).withName("__fpu_k4"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(8, C_CHAR).withName("__opmask_reg")
            ).withName("__fpu_k5"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(8, C_CHAR).withName("__opmask_reg")
            ).withName("__fpu_k6"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(8, C_CHAR).withName("__opmask_reg")
            ).withName("__fpu_k7"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(32, C_CHAR).withName("__ymm_reg")
            ).withName("__fpu_zmmh0"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(32, C_CHAR).withName("__ymm_reg")
            ).withName("__fpu_zmmh1"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(32, C_CHAR).withName("__ymm_reg")
            ).withName("__fpu_zmmh2"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(32, C_CHAR).withName("__ymm_reg")
            ).withName("__fpu_zmmh3"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(32, C_CHAR).withName("__ymm_reg")
            ).withName("__fpu_zmmh4"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(32, C_CHAR).withName("__ymm_reg")
            ).withName("__fpu_zmmh5"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(32, C_CHAR).withName("__ymm_reg")
            ).withName("__fpu_zmmh6"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(32, C_CHAR).withName("__ymm_reg")
            ).withName("__fpu_zmmh7"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(32, C_CHAR).withName("__ymm_reg")
            ).withName("__fpu_zmmh8"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(32, C_CHAR).withName("__ymm_reg")
            ).withName("__fpu_zmmh9"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(32, C_CHAR).withName("__ymm_reg")
            ).withName("__fpu_zmmh10"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(32, C_CHAR).withName("__ymm_reg")
            ).withName("__fpu_zmmh11"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(32, C_CHAR).withName("__ymm_reg")
            ).withName("__fpu_zmmh12"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(32, C_CHAR).withName("__ymm_reg")
            ).withName("__fpu_zmmh13"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(32, C_CHAR).withName("__ymm_reg")
            ).withName("__fpu_zmmh14"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(32, C_CHAR).withName("__ymm_reg")
            ).withName("__fpu_zmmh15"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(64, C_CHAR).withName("__zmm_reg")
            ).withName("__fpu_zmm16"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(64, C_CHAR).withName("__zmm_reg")
            ).withName("__fpu_zmm17"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(64, C_CHAR).withName("__zmm_reg")
            ).withName("__fpu_zmm18"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(64, C_CHAR).withName("__zmm_reg")
            ).withName("__fpu_zmm19"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(64, C_CHAR).withName("__zmm_reg")
            ).withName("__fpu_zmm20"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(64, C_CHAR).withName("__zmm_reg")
            ).withName("__fpu_zmm21"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(64, C_CHAR).withName("__zmm_reg")
            ).withName("__fpu_zmm22"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(64, C_CHAR).withName("__zmm_reg")
            ).withName("__fpu_zmm23"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(64, C_CHAR).withName("__zmm_reg")
            ).withName("__fpu_zmm24"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(64, C_CHAR).withName("__zmm_reg")
            ).withName("__fpu_zmm25"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(64, C_CHAR).withName("__zmm_reg")
            ).withName("__fpu_zmm26"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(64, C_CHAR).withName("__zmm_reg")
            ).withName("__fpu_zmm27"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(64, C_CHAR).withName("__zmm_reg")
            ).withName("__fpu_zmm28"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(64, C_CHAR).withName("__zmm_reg")
            ).withName("__fpu_zmm29"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(64, C_CHAR).withName("__zmm_reg")
            ).withName("__fpu_zmm30"),
            MemoryLayout.ofStruct(
                MemoryLayout.ofSequence(64, C_CHAR).withName("__zmm_reg")
            ).withName("__fpu_zmm31")
        ).withName("__fs"),
        MemoryLayout.ofPaddingBits(32)
    ).withName("__darwin_mcontext_avx512_64_full");
    static final jdk.incubator.foreign.MemoryLayout __darwin_mcontext_avx512_64_full$struct$LAYOUT() { return __darwin_mcontext_avx512_64_full$struct$LAYOUT_; }

    static final MemoryLayout __darwin_sigaltstack$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("ss_sp"),
        C_LONG.withName("ss_size"),
        C_INT.withName("ss_flags"),
        MemoryLayout.ofPaddingBits(32)
    ).withName("__darwin_sigaltstack");
    static final jdk.incubator.foreign.MemoryLayout __darwin_sigaltstack$struct$LAYOUT() { return __darwin_sigaltstack$struct$LAYOUT_; }

    static final MemoryLayout __darwin_sigaltstack$ss_sp$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout __darwin_sigaltstack$ss_sp$LAYOUT() { return __darwin_sigaltstack$ss_sp$LAYOUT_; }

    static final VarHandle __darwin_sigaltstack$ss_sp$VH_ = MemoryHandles.asAddressVarHandle(__darwin_sigaltstack$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("ss_sp")));
    static final java.lang.invoke.VarHandle __darwin_sigaltstack$ss_sp$VH() { return __darwin_sigaltstack$ss_sp$VH_; }

    static final MemoryLayout __darwin_sigaltstack$ss_size$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout __darwin_sigaltstack$ss_size$LAYOUT() { return __darwin_sigaltstack$ss_size$LAYOUT_; }

    static final VarHandle __darwin_sigaltstack$ss_size$VH_ = __darwin_sigaltstack$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("ss_size"));
    static final java.lang.invoke.VarHandle __darwin_sigaltstack$ss_size$VH() { return __darwin_sigaltstack$ss_size$VH_; }

    static final MemoryLayout __darwin_sigaltstack$ss_flags$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout __darwin_sigaltstack$ss_flags$LAYOUT() { return __darwin_sigaltstack$ss_flags$LAYOUT_; }

    static final VarHandle __darwin_sigaltstack$ss_flags$VH_ = __darwin_sigaltstack$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ss_flags"));
    static final java.lang.invoke.VarHandle __darwin_sigaltstack$ss_flags$VH() { return __darwin_sigaltstack$ss_flags$VH_; }

    static final MemoryLayout __darwin_ucontext$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("uc_onstack"),
        C_INT.withName("uc_sigmask"),
        MemoryLayout.ofStruct(
            C_POINTER.withName("ss_sp"),
            C_LONG.withName("ss_size"),
            C_INT.withName("ss_flags"),
            MemoryLayout.ofPaddingBits(32)
        ).withName("uc_stack"),
        C_POINTER.withName("uc_link"),
        C_LONG.withName("uc_mcsize"),
        C_POINTER.withName("uc_mcontext")
    ).withName("__darwin_ucontext");
    static final jdk.incubator.foreign.MemoryLayout __darwin_ucontext$struct$LAYOUT() { return __darwin_ucontext$struct$LAYOUT_; }

    static final MemoryLayout __darwin_ucontext$uc_onstack$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout __darwin_ucontext$uc_onstack$LAYOUT() { return __darwin_ucontext$uc_onstack$LAYOUT_; }

    static final VarHandle __darwin_ucontext$uc_onstack$VH_ = __darwin_ucontext$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("uc_onstack"));
    static final java.lang.invoke.VarHandle __darwin_ucontext$uc_onstack$VH() { return __darwin_ucontext$uc_onstack$VH_; }

    static final MemoryLayout __darwin_ucontext$uc_sigmask$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout __darwin_ucontext$uc_sigmask$LAYOUT() { return __darwin_ucontext$uc_sigmask$LAYOUT_; }

    static final VarHandle __darwin_ucontext$uc_sigmask$VH_ = __darwin_ucontext$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("uc_sigmask"));
    static final java.lang.invoke.VarHandle __darwin_ucontext$uc_sigmask$VH() { return __darwin_ucontext$uc_sigmask$VH_; }

    static final MemoryLayout __darwin_ucontext$uc_link$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout __darwin_ucontext$uc_link$LAYOUT() { return __darwin_ucontext$uc_link$LAYOUT_; }

    static final VarHandle __darwin_ucontext$uc_link$VH_ = MemoryHandles.asAddressVarHandle(__darwin_ucontext$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("uc_link")));
    static final java.lang.invoke.VarHandle __darwin_ucontext$uc_link$VH() { return __darwin_ucontext$uc_link$VH_; }

    static final MemoryLayout __darwin_ucontext$uc_mcsize$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout __darwin_ucontext$uc_mcsize$LAYOUT() { return __darwin_ucontext$uc_mcsize$LAYOUT_; }

    static final VarHandle __darwin_ucontext$uc_mcsize$VH_ = __darwin_ucontext$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("uc_mcsize"));
    static final java.lang.invoke.VarHandle __darwin_ucontext$uc_mcsize$VH() { return __darwin_ucontext$uc_mcsize$VH_; }

    static final MemoryLayout __darwin_ucontext$uc_mcontext$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout __darwin_ucontext$uc_mcontext$LAYOUT() { return __darwin_ucontext$uc_mcontext$LAYOUT_; }

    static final VarHandle __darwin_ucontext$uc_mcontext$VH_ = MemoryHandles.asAddressVarHandle(__darwin_ucontext$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("uc_mcontext")));
    static final java.lang.invoke.VarHandle __darwin_ucontext$uc_mcontext$VH() { return __darwin_ucontext$uc_mcontext$VH_; }

    static final MemoryLayout sigval$union$LAYOUT_ = MemoryLayout.ofUnion(
        C_INT.withName("sival_int"),
        C_POINTER.withName("sival_ptr")
    ).withName("sigval");
    static final jdk.incubator.foreign.MemoryLayout sigval$union$LAYOUT() { return sigval$union$LAYOUT_; }

    static final MemoryLayout sigval$sival_int$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout sigval$sival_int$LAYOUT() { return sigval$sival_int$LAYOUT_; }

    static final VarHandle sigval$sival_int$VH_ = sigval$union$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("sival_int"));
    static final java.lang.invoke.VarHandle sigval$sival_int$VH() { return sigval$sival_int$VH_; }

    static final MemoryLayout sigval$sival_ptr$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout sigval$sival_ptr$LAYOUT() { return sigval$sival_ptr$LAYOUT_; }

    static final VarHandle sigval$sival_ptr$VH_ = MemoryHandles.asAddressVarHandle(sigval$union$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("sival_ptr")));
    static final java.lang.invoke.VarHandle sigval$sival_ptr$VH() { return sigval$sival_ptr$VH_; }

    static final MemoryLayout sigevent$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("sigev_notify"),
        C_INT.withName("sigev_signo"),
        MemoryLayout.ofUnion(
            C_INT.withName("sival_int"),
            C_POINTER.withName("sival_ptr")
        ).withName("sigev_value"),
        C_POINTER.withName("sigev_notify_function"),
        C_POINTER.withName("sigev_notify_attributes")
    ).withName("sigevent");
    static final jdk.incubator.foreign.MemoryLayout sigevent$struct$LAYOUT() { return sigevent$struct$LAYOUT_; }

    static final MemoryLayout sigevent$sigev_notify$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout sigevent$sigev_notify$LAYOUT() { return sigevent$sigev_notify$LAYOUT_; }

    static final VarHandle sigevent$sigev_notify$VH_ = sigevent$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("sigev_notify"));
    static final java.lang.invoke.VarHandle sigevent$sigev_notify$VH() { return sigevent$sigev_notify$VH_; }

    static final MemoryLayout sigevent$sigev_signo$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout sigevent$sigev_signo$LAYOUT() { return sigevent$sigev_signo$LAYOUT_; }

    static final VarHandle sigevent$sigev_signo$VH_ = sigevent$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("sigev_signo"));
    static final java.lang.invoke.VarHandle sigevent$sigev_signo$VH() { return sigevent$sigev_signo$VH_; }

    static final FunctionDescriptor sigev_notify_function$FUNC_ = FunctionDescriptor.ofVoid(
        MemoryLayout.ofUnion(
            C_INT.withName("sival_int"),
            C_POINTER.withName("sival_ptr")
        ).withName("sigval")
    );
    static final jdk.incubator.foreign.FunctionDescriptor sigev_notify_function$FUNC() { return sigev_notify_function$FUNC_; }

    static final MemoryLayout sigevent$sigev_notify_function$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout sigevent$sigev_notify_function$LAYOUT() { return sigevent$sigev_notify_function$LAYOUT_; }

    static final VarHandle sigevent$sigev_notify_function$VH_ = MemoryHandles.asAddressVarHandle(sigevent$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("sigev_notify_function")));
    static final java.lang.invoke.VarHandle sigevent$sigev_notify_function$VH() { return sigevent$sigev_notify_function$VH_; }

    static final MemoryLayout sigevent$sigev_notify_attributes$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout sigevent$sigev_notify_attributes$LAYOUT() { return sigevent$sigev_notify_attributes$LAYOUT_; }

    static final VarHandle sigevent$sigev_notify_attributes$VH_ = MemoryHandles.asAddressVarHandle(sigevent$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("sigev_notify_attributes")));
    static final java.lang.invoke.VarHandle sigevent$sigev_notify_attributes$VH() { return sigevent$sigev_notify_attributes$VH_; }

    static final MemoryLayout __siginfo$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("si_signo"),
        C_INT.withName("si_errno"),
        C_INT.withName("si_code"),
        C_INT.withName("si_pid"),
        C_INT.withName("si_uid"),
        C_INT.withName("si_status"),
        C_POINTER.withName("si_addr"),
        MemoryLayout.ofUnion(
            C_INT.withName("sival_int"),
            C_POINTER.withName("sival_ptr")
        ).withName("si_value"),
        C_LONG.withName("si_band"),
        MemoryLayout.ofSequence(7, C_LONG).withName("__pad")
    ).withName("__siginfo");
    static final jdk.incubator.foreign.MemoryLayout __siginfo$struct$LAYOUT() { return __siginfo$struct$LAYOUT_; }

    static final MemoryLayout __siginfo$si_signo$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout __siginfo$si_signo$LAYOUT() { return __siginfo$si_signo$LAYOUT_; }

    static final VarHandle __siginfo$si_signo$VH_ = __siginfo$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("si_signo"));
    static final java.lang.invoke.VarHandle __siginfo$si_signo$VH() { return __siginfo$si_signo$VH_; }

    static final MemoryLayout __siginfo$si_errno$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout __siginfo$si_errno$LAYOUT() { return __siginfo$si_errno$LAYOUT_; }

    static final VarHandle __siginfo$si_errno$VH_ = __siginfo$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("si_errno"));
    static final java.lang.invoke.VarHandle __siginfo$si_errno$VH() { return __siginfo$si_errno$VH_; }

    static final MemoryLayout __siginfo$si_code$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout __siginfo$si_code$LAYOUT() { return __siginfo$si_code$LAYOUT_; }

    static final VarHandle __siginfo$si_code$VH_ = __siginfo$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("si_code"));
    static final java.lang.invoke.VarHandle __siginfo$si_code$VH() { return __siginfo$si_code$VH_; }

    static final MemoryLayout __siginfo$si_pid$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout __siginfo$si_pid$LAYOUT() { return __siginfo$si_pid$LAYOUT_; }

    static final VarHandle __siginfo$si_pid$VH_ = __siginfo$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("si_pid"));
    static final java.lang.invoke.VarHandle __siginfo$si_pid$VH() { return __siginfo$si_pid$VH_; }

    static final MemoryLayout __siginfo$si_uid$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout __siginfo$si_uid$LAYOUT() { return __siginfo$si_uid$LAYOUT_; }

    static final VarHandle __siginfo$si_uid$VH_ = __siginfo$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("si_uid"));
    static final java.lang.invoke.VarHandle __siginfo$si_uid$VH() { return __siginfo$si_uid$VH_; }

    static final MemoryLayout __siginfo$si_status$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout __siginfo$si_status$LAYOUT() { return __siginfo$si_status$LAYOUT_; }

    static final VarHandle __siginfo$si_status$VH_ = __siginfo$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("si_status"));
    static final java.lang.invoke.VarHandle __siginfo$si_status$VH() { return __siginfo$si_status$VH_; }

    static final MemoryLayout __siginfo$si_addr$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout __siginfo$si_addr$LAYOUT() { return __siginfo$si_addr$LAYOUT_; }

    static final VarHandle __siginfo$si_addr$VH_ = MemoryHandles.asAddressVarHandle(__siginfo$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("si_addr")));
    static final java.lang.invoke.VarHandle __siginfo$si_addr$VH() { return __siginfo$si_addr$VH_; }

    static final MemoryLayout __siginfo$si_band$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout __siginfo$si_band$LAYOUT() { return __siginfo$si_band$LAYOUT_; }

    static final VarHandle __siginfo$si_band$VH_ = __siginfo$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("si_band"));
    static final java.lang.invoke.VarHandle __siginfo$si_band$VH() { return __siginfo$si_band$VH_; }

    static final MemoryLayout __sigaction_u$union$LAYOUT_ = MemoryLayout.ofUnion(
        C_POINTER.withName("__sa_handler"),
        C_POINTER.withName("__sa_sigaction")
    ).withName("__sigaction_u");
    static final jdk.incubator.foreign.MemoryLayout __sigaction_u$union$LAYOUT() { return __sigaction_u$union$LAYOUT_; }

    static final FunctionDescriptor __sa_handler$FUNC_ = FunctionDescriptor.ofVoid(
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor __sa_handler$FUNC() { return __sa_handler$FUNC_; }

    static final MemoryLayout __sigaction_u$__sa_handler$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout __sigaction_u$__sa_handler$LAYOUT() { return __sigaction_u$__sa_handler$LAYOUT_; }

    static final VarHandle __sigaction_u$__sa_handler$VH_ = MemoryHandles.asAddressVarHandle(__sigaction_u$union$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("__sa_handler")));
    static final java.lang.invoke.VarHandle __sigaction_u$__sa_handler$VH() { return __sigaction_u$__sa_handler$VH_; }

    static final FunctionDescriptor __sa_sigaction$FUNC_ = FunctionDescriptor.ofVoid(
        C_INT,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor __sa_sigaction$FUNC() { return __sa_sigaction$FUNC_; }

    static final MemoryLayout __sigaction_u$__sa_sigaction$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout __sigaction_u$__sa_sigaction$LAYOUT() { return __sigaction_u$__sa_sigaction$LAYOUT_; }

    static final VarHandle __sigaction_u$__sa_sigaction$VH_ = MemoryHandles.asAddressVarHandle(__sigaction_u$union$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("__sa_sigaction")));
    static final java.lang.invoke.VarHandle __sigaction_u$__sa_sigaction$VH() { return __sigaction_u$__sa_sigaction$VH_; }

    static final MemoryLayout __sigaction$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofUnion(
            C_POINTER.withName("__sa_handler"),
            C_POINTER.withName("__sa_sigaction")
        ).withName("__sigaction_u"),
        C_POINTER.withName("sa_tramp"),
        C_INT.withName("sa_mask"),
        C_INT.withName("sa_flags")
    ).withName("__sigaction");
    static final jdk.incubator.foreign.MemoryLayout __sigaction$struct$LAYOUT() { return __sigaction$struct$LAYOUT_; }

    static final FunctionDescriptor sa_tramp$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_INT,
        C_INT,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor sa_tramp$FUNC() { return sa_tramp$FUNC_; }

    static final MemoryLayout __sigaction$sa_tramp$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout __sigaction$sa_tramp$LAYOUT() { return __sigaction$sa_tramp$LAYOUT_; }

    static final VarHandle __sigaction$sa_tramp$VH_ = MemoryHandles.asAddressVarHandle(__sigaction$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("sa_tramp")));
    static final java.lang.invoke.VarHandle __sigaction$sa_tramp$VH() { return __sigaction$sa_tramp$VH_; }

    static final MemoryLayout __sigaction$sa_mask$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout __sigaction$sa_mask$LAYOUT() { return __sigaction$sa_mask$LAYOUT_; }

    static final VarHandle __sigaction$sa_mask$VH_ = __sigaction$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("sa_mask"));
    static final java.lang.invoke.VarHandle __sigaction$sa_mask$VH() { return __sigaction$sa_mask$VH_; }

    static final MemoryLayout __sigaction$sa_flags$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout __sigaction$sa_flags$LAYOUT() { return __sigaction$sa_flags$LAYOUT_; }

    static final VarHandle __sigaction$sa_flags$VH_ = __sigaction$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("sa_flags"));
    static final java.lang.invoke.VarHandle __sigaction$sa_flags$VH() { return __sigaction$sa_flags$VH_; }

    static final MemoryLayout sigaction$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofUnion(
            C_POINTER.withName("__sa_handler"),
            C_POINTER.withName("__sa_sigaction")
        ).withName("__sigaction_u"),
        C_INT.withName("sa_mask"),
        C_INT.withName("sa_flags")
    ).withName("sigaction");
    static final jdk.incubator.foreign.MemoryLayout sigaction$struct$LAYOUT() { return sigaction$struct$LAYOUT_; }

    static final MemoryLayout sigaction$sa_mask$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout sigaction$sa_mask$LAYOUT() { return sigaction$sa_mask$LAYOUT_; }

    static final VarHandle sigaction$sa_mask$VH_ = sigaction$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("sa_mask"));
    static final java.lang.invoke.VarHandle sigaction$sa_mask$VH() { return sigaction$sa_mask$VH_; }

    static final MemoryLayout sigaction$sa_flags$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout sigaction$sa_flags$LAYOUT() { return sigaction$sa_flags$LAYOUT_; }

    static final VarHandle sigaction$sa_flags$VH_ = sigaction$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("sa_flags"));
    static final java.lang.invoke.VarHandle sigaction$sa_flags$VH() { return sigaction$sa_flags$VH_; }

    static final MemoryLayout sigvec$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("sv_handler"),
        C_INT.withName("sv_mask"),
        C_INT.withName("sv_flags")
    ).withName("sigvec");
    static final jdk.incubator.foreign.MemoryLayout sigvec$struct$LAYOUT() { return sigvec$struct$LAYOUT_; }

    static final FunctionDescriptor sv_handler$FUNC_ = FunctionDescriptor.ofVoid(
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor sv_handler$FUNC() { return sv_handler$FUNC_; }

    static final MemoryLayout sigvec$sv_handler$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout sigvec$sv_handler$LAYOUT() { return sigvec$sv_handler$LAYOUT_; }

    static final VarHandle sigvec$sv_handler$VH_ = MemoryHandles.asAddressVarHandle(sigvec$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("sv_handler")));
    static final java.lang.invoke.VarHandle sigvec$sv_handler$VH() { return sigvec$sv_handler$VH_; }

    static final MemoryLayout sigvec$sv_mask$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout sigvec$sv_mask$LAYOUT() { return sigvec$sv_mask$LAYOUT_; }

    static final VarHandle sigvec$sv_mask$VH_ = sigvec$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("sv_mask"));
    static final java.lang.invoke.VarHandle sigvec$sv_mask$VH() { return sigvec$sv_mask$VH_; }

    static final MemoryLayout sigvec$sv_flags$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout sigvec$sv_flags$LAYOUT() { return sigvec$sv_flags$LAYOUT_; }

    static final VarHandle sigvec$sv_flags$VH_ = sigvec$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("sv_flags"));
    static final java.lang.invoke.VarHandle sigvec$sv_flags$VH() { return sigvec$sv_flags$VH_; }

    static final MemoryLayout sigstack$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("ss_sp"),
        C_INT.withName("ss_onstack"),
        MemoryLayout.ofPaddingBits(32)
    ).withName("sigstack");
    static final jdk.incubator.foreign.MemoryLayout sigstack$struct$LAYOUT() { return sigstack$struct$LAYOUT_; }

    static final MemoryLayout sigstack$ss_sp$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout sigstack$ss_sp$LAYOUT() { return sigstack$ss_sp$LAYOUT_; }

    static final VarHandle sigstack$ss_sp$VH_ = MemoryHandles.asAddressVarHandle(sigstack$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("ss_sp")));
    static final java.lang.invoke.VarHandle sigstack$ss_sp$VH() { return sigstack$ss_sp$VH_; }

    static final MemoryLayout sigstack$ss_onstack$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout sigstack$ss_onstack$LAYOUT() { return sigstack$ss_onstack$LAYOUT_; }

    static final VarHandle sigstack$ss_onstack$VH_ = sigstack$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ss_onstack"));
    static final java.lang.invoke.VarHandle sigstack$ss_onstack$VH() { return sigstack$ss_onstack$VH_; }

    static final FunctionDescriptor signal$FUNC_ = FunctionDescriptor.of(C_POINTER,
        C_INT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor signal$FUNC() { return signal$FUNC_; }

    static final MethodHandle signal$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "signal",
        "(ILjdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        signal$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle signal$MH() { return signal$MH_; }

    static final FunctionDescriptor signal$x0$FUNC_ = FunctionDescriptor.ofVoid(
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor signal$x0$FUNC() { return signal$x0$FUNC_; }

}

