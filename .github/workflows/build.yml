name: Build
on:
  [push]

jobs:

  linux-amd64:
    name: Test jfuse-linux-amd64
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[ci skip]') && !contains(github.event.head_commit.message, '[skip ci]')"
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v2
        with:
          java-version: 18-ea
          distribution: 'zulu'
          cache: 'maven'
      - name: Setup fuse
        run: |
          sudo apt-get update
          sudo apt-get install fuse libfuse-dev
      - name: Maven build
        run: mvn -B verify -Plinux-amd64
      - uses: actions/upload-artifact@v2
        with:
          name: coverage-linux-amd64
          path: jfuse-tests/target/site/jacoco-aggregate/jacoco.xml
          retention-days: 3

  mac:
    name: Test jfuse-mac
    runs-on: macos-latest
    if: "!contains(github.event.head_commit.message, '[ci skip]') && !contains(github.event.head_commit.message, '[skip ci]')"
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v2
        with:
          java-version: 18-ea
          distribution: 'zulu'
          cache: 'maven'
      - name: Setup fuse
        run: brew install macfuse
      - name: Maven build
        run: mvn -B verify -Pmac
      - uses: actions/upload-artifact@v2
        with:
          name: coverage-mac
          path: jfuse-tests/target/site/jacoco-aggregate/jacoco.xml
          retention-days: 3

  sonarcloud:
    name: Run SonarCloud Analysis
    needs: [linux-amd64, mac]
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[ci skip]') && !contains(github.event.head_commit.message, '[skip ci]')"
    steps:
      - uses: actions/checkout@v2
        with:
           fetch-depth: 0
      - uses: actions/setup-java@v2
        with:
          java-version: 18-ea
          distribution: 'zulu'
          cache: 'maven'
      - name: Cache SonarCloud packages
        uses: actions/cache@v2
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - uses: actions/download-artifact@v2
        with:
          name: coverage-linux-amd64
          path: coverage/linux-amd64
      - uses: actions/download-artifact@v2
        with:
          name: coverage-mac
          path: coverage/mac
      - name: Analyze
        run: >
          mvn -B compile -DskipTests
          org.sonarsource.scanner.maven:sonar-maven-plugin:sonar
          -Plinux-amd64,linux-aarch64,mac,win-amd64
          -Dsonar.projectKey=cryptomator_jfuse
          -Dsonar.coverage.jacoco.xmlReportPaths=${GITHUB_WORKSPACE}/coverage/**/jacoco.xml
          -Dsonar.organization=cryptomator
          -Dsonar.host.url=https://sonarcloud.io
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  release:
    needs: [ sonarcloud ]
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.CRYPTOBOT_RELEASE_TOKEN }} # release as "cryptobot"
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          prerelease: true