// Generated by jextract

package org.cryptomator.jfuse.win.extr;

import java.lang.foreign.*;

public interface fuse3_fill_dir_t {

    int apply(java.lang.foreign.MemorySegment buf, java.lang.foreign.MemorySegment name, java.lang.foreign.MemorySegment stbuf, long off, int flags);
    static MemorySegment allocate(fuse3_fill_dir_t fi, SegmentScope scope) {
        return RuntimeHelper.upcallStub(fuse3_fill_dir_t.class, fi, constants$0.fuse3_fill_dir_t$FUNC, scope);
    }
    static fuse3_fill_dir_t ofAddress(MemorySegment addr, SegmentScope scope) {
        MemorySegment symbol = MemorySegment.ofAddress(addr.address(), 0, scope);
        return (java.lang.foreign.MemorySegment _buf, java.lang.foreign.MemorySegment _name, java.lang.foreign.MemorySegment _stbuf, long _off, int _flags) -> {
            try {
                return (int)constants$0.fuse3_fill_dir_t$MH.invokeExact((MemorySegment)symbol, (java.lang.foreign.MemorySegment)_buf, (java.lang.foreign.MemorySegment)_name, (java.lang.foreign.MemorySegment)_stbuf, _off, _flags);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


