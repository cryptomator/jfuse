// Generated by jextract

package org.cryptomator.jfuse.win.extr;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
public class fuse_h  {

    public static final OfByte C_CHAR = Constants$root.C_CHAR$LAYOUT;
    public static final OfShort C_SHORT = Constants$root.C_SHORT$LAYOUT;
    public static final OfInt C_INT = Constants$root.C_LONG$LAYOUT;
    public static final OfInt C_LONG = Constants$root.C_LONG$LAYOUT;
    public static final OfLong C_LONG_LONG = Constants$root.C_LONG_LONG$LAYOUT;
    public static final OfFloat C_FLOAT = Constants$root.C_FLOAT$LAYOUT;
    public static final OfDouble C_DOUBLE = Constants$root.C_DOUBLE$LAYOUT;
    public static final OfAddress C_POINTER = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle fuse3_lib_help$MH() {
        return RuntimeHelper.requireNonNull(constants$0.fuse3_lib_help$MH,"fuse3_lib_help");
    }
    /**
     * {@snippet :
     * void fuse3_lib_help(struct fuse_args* args);
     * }
     */
    public static void fuse3_lib_help(MemorySegment args) {
        var mh$ = fuse3_lib_help$MH();
        try {
            mh$.invokeExact(args);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fuse3_new$MH() {
        return RuntimeHelper.requireNonNull(constants$0.fuse3_new$MH,"fuse3_new");
    }
    /**
     * {@snippet :
     * struct fuse3* fuse3_new(struct fuse_args* args, struct fuse3_operations* ops, unsigned long long opsize, void* data);
     * }
     */
    public static MemorySegment fuse3_new(MemorySegment args, MemorySegment ops, long opsize, MemorySegment data) {
        var mh$ = fuse3_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(args, ops, opsize, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fuse3_destroy$MH() {
        return RuntimeHelper.requireNonNull(constants$0.fuse3_destroy$MH,"fuse3_destroy");
    }
    /**
     * {@snippet :
     * void fuse3_destroy(struct fuse3* f);
     * }
     */
    public static void fuse3_destroy(MemorySegment f) {
        var mh$ = fuse3_destroy$MH();
        try {
            mh$.invokeExact(f);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fuse3_mount$MH() {
        return RuntimeHelper.requireNonNull(constants$0.fuse3_mount$MH,"fuse3_mount");
    }
    /**
     * {@snippet :
     * int fuse3_mount(struct fuse3* f, char* mountpoint);
     * }
     */
    public static int fuse3_mount(MemorySegment f, MemorySegment mountpoint) {
        var mh$ = fuse3_mount$MH();
        try {
            return (int)mh$.invokeExact(f, mountpoint);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fuse3_unmount$MH() {
        return RuntimeHelper.requireNonNull(constants$1.fuse3_unmount$MH,"fuse3_unmount");
    }
    /**
     * {@snippet :
     * void fuse3_unmount(struct fuse3* f);
     * }
     */
    public static void fuse3_unmount(MemorySegment f) {
        var mh$ = fuse3_unmount$MH();
        try {
            mh$.invokeExact(f);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fuse3_loop$MH() {
        return RuntimeHelper.requireNonNull(constants$1.fuse3_loop$MH,"fuse3_loop");
    }
    /**
     * {@snippet :
     * int fuse3_loop(struct fuse3* f);
     * }
     */
    public static int fuse3_loop(MemorySegment f) {
        var mh$ = fuse3_loop$MH();
        try {
            return (int)mh$.invokeExact(f);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fuse3_loop_mt_31$MH() {
        return RuntimeHelper.requireNonNull(constants$1.fuse3_loop_mt_31$MH,"fuse3_loop_mt_31");
    }
    /**
     * {@snippet :
     * int fuse3_loop_mt_31(struct fuse3* f, int clone_fd);
     * }
     */
    public static int fuse3_loop_mt_31(MemorySegment f, int clone_fd) {
        var mh$ = fuse3_loop_mt_31$MH();
        try {
            return (int)mh$.invokeExact(f, clone_fd);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fuse3_exit$MH() {
        return RuntimeHelper.requireNonNull(constants$1.fuse3_exit$MH,"fuse3_exit");
    }
    /**
     * {@snippet :
     * void fuse3_exit(struct fuse3* f);
     * }
     */
    public static void fuse3_exit(MemorySegment f) {
        var mh$ = fuse3_exit$MH();
        try {
            mh$.invokeExact(f);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fuse3_get_session$MH() {
        return RuntimeHelper.requireNonNull(constants$1.fuse3_get_session$MH,"fuse3_get_session");
    }
    /**
     * {@snippet :
     * struct fuse3_session* fuse3_get_session(struct fuse3* f);
     * }
     */
    public static MemorySegment fuse3_get_session(MemorySegment f) {
        var mh$ = fuse3_get_session$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(f);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
}


